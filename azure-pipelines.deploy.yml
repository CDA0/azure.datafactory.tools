---
parameters:
  - name: deploySql
    type: boolean
  - name: environment
    type: string
    values:
      - fat
      - prd
      - sit
      - uat
  - name: location
    type: string
    default: westeurope
  - name: logicalEnvironment
    type: string

steps:
  - template: steps/get-subscription-id.yml@templates
    parameters:
      serviceConnectionName: sub-customer-${{ parameters.environment }}-t1-01-deploy
      subscriptionName: sub-customer-${{ parameters.environment }}-t1-01

  - template: steps/get-short-location.yml@templates
    parameters:
      location: ${{ parameters.location }}

  - ${{ if eq(parameters.deploySql, true) }}:
      - template: steps/set-vmss-instance-identity.yml@templates
        parameters:
          environment: ${{ parameters.environment }}
          identityName: id-ct-${{ parameters.environment }}-$(shortLocation)-gupcom
          resourceGroupName: rg-ct-${{ parameters.environment }}-$(shortLocation)-gupcom
          shortLocation: $(shortLocation)

      - task: AzureCLI@2
        inputs:
          azureSubscription: sub-customer-${{ parameters.environment }}-t1-01-deploy
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            set -euo pipefail

            az account set -s sub-customer-${{ parameters.environment }}-t1-01

            sqlServerFqdn=sql-ct-${{ parameters.environment }}-$(shortLocation)-gupcom.database.windows.net
            sqlDatabaseName=sdb-ct-${{ parameters.environment }}-$(shortLocation)-${{ parameters.logicalEnvironment }}gup

            for filePath in $(System.DefaultWorkingDirectory)/scripts/sql/*; do
              file_name=$(basename "$filePath")
              if grep -Fxq "$file_name" $(System.DefaultWorkingDirectory)/.config/sql.txt; then
                echo "$filePath"
                cat "$filePath"
                pwsh -c $(System.DefaultWorkingDirectory)/scripts/run-sql.ps1 "$sqlServerFqdn" "$sqlDatabaseName" $(principalId) "$filePath"
              fi
            done
        displayName: Run SQL commands

  - ${{ if ne(parameters.logicalEnvironment, 'dev') }}:
      - task: AzurePowerShell@5
        displayName: Publish
        inputs:
          azureSubscription: sub-customer-${{ parameters.environment }}-t1-01-deploy
          pwsh: true
          azurePowerShellVersion: LatestVersion
          ScriptType: FilePath
          ScriptPath: $(System.DefaultWorkingDirectory)/scripts/publish.ps1
          ScriptArguments: |
            -DataFactoryCodePath $(System.DefaultWorkingDirectory)/src `
            -ResourceGroupName "rg-ct-${{ parameters.environment }}-$(shortLocation)-${{ parameters.logicalEnvironment }}gup" `
            -DataFactoryName "adf-ct-${{ parameters.environment }}-$(shortLocation)-${{ parameters.logicalEnvironment }}gup" `
            -Location "${{ parameters.location }}" `
            -CreateNewInstance $false `
            -DeleteNotInSource $true `
            -DoNotDeleteExcludedObjects $false `
            -StageConfigFile "$(System.DefaultWorkingDirectory)/.config/config.csv" `
            -FilterTextFile "$(System.DefaultWorkingDirectory)/.config/filter.txt"
