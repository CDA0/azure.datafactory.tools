{
	"name": "p_DPDB-CDI-DPDB_ADVISER_OFFICE_STG",
	"properties": {
		"description": "Name : Nextpathway\nDate : 29/05/2023\nDescription : pulls data from oracle tables and loads into transient table. Compares transient table with staging table to identify new/updated records in the target/staging table and load target table.",
		"activities": [
			{
				"name": "cd-TD_DPDB_ADVISER_OFFICE_STG",
				"description": "pulls data from oracle tables, loads into transient table.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "sp-TRUNCATE-TD_DPDB_ADVISER_OFFICE_STG",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OracleSource",
						"oracleReaderQuery": "with ADVISER_OFFICE\nas\n(select PR.PARTY_ROLE_ID,\n        PR.PARTY_ROLE_TYPE_ID,\n        OPR.STATUS,\n        OPR.PARTY_ROLE_NAME\n   from PARTY P\n  inner join PARTY_ROLE PR\n     on (PR.PARTY_ID = P.PARTY_ID)\n  inner join ORGANISATION_PARTY_ROLE OPR\n     on (OPR.PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  where PR.PARTY_ROLE_TYPE_ID in ( 'adv_off', 'head_off', 'par_off','par_hoff', 'os_off', 'os_hoff', 'sp_off', 'sp_hoff' )\n    and OPR.party_role_id in\n          (select distinct \n                  CA.PARTY_ROLE_ID\n             from COMMISSION_ACCOUNT CA\n            inner join LEGACY_ACCOUNT_DETAIL LAD\n               on (LAD.COMMISSION_ACCOUNT_ID = CA.COMMISSION_ACCOUNT_ID)\n            where LAD.ACCOUNT_TYPE_ID = 'at_commto_sonata'\n              and (\t   LAD.ACCOUNT_TYPE_ID = 'at_commto_sonata' \n                    or LAD.LEGACY_SYSTEM_ID <> 'ls_sonata'\n                  )\n          )\n),\nADDRESS\nas\n(select ADDRESS.PARTY_ROLE_ID,\n        ADDRESS.UPDATED_DATE,\n        ADDRESS.ADDRESS_LINE_1,\n        ADDRESS.ADDRESS_LINE_2,\n        ADDRESS.ADDRESS_LINE_3,\n        ADDRESS.ADDRESS_LINE_4,\n        ADDRESS.POSTCODE\n  from (select CPR.PARTY_ROLE_ID       as PARTY_ROLE_ID,\n               CPR.UPDATED_DATE        as UPDATED_DATE,\n               trim(PA.ADDRESS_LINE_1) as ADDRESS_LINE_1,\n               trim(PA.ADDRESS_LINE_2) as ADDRESS_LINE_2,\n               trim(PA.ADDRESS_LINE_3) as ADDRESS_LINE_3,\n               trim(PA.ADDRESS_LINE_4) as ADDRESS_LINE_4,\n               trim(PA.POSTCODE) as POSTCODE,\n               row_number() over (partition by CPR.PARTY_ROLE_ID\n                                      order by CPR.UPDATED_DATE desc) RN\n          from CONTACT_POINT_ROLE CPR\n\t\t inner join CONTACT_POINT CP\n            on (CPR.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n\t\t inner join POSTAL_ADDRESS PA\n            on (CP.CONTACT_POINT_ID = PA.CONTACT_POINT_ID)\n         where CPR.END_DATE IS NULL\n           and CP.CONTACT_POINT_TYPE_ID = 'cp_addr'\n           and nvl(CPR.CONTACT_POINT_ROLE_TYPE_ID, 'A') <> 'cpr_rig'\n        ) ADDRESS\n  where ADDRESS.RN = 1\n),\nEMAIL\nas\n(select EMAIL.PARTY_ROLE_ID,\n        EMAIL.EMAIL_URL_ADDRESS\n   from (select CPR.PARTY_ROLE_ID,\n                trim(EUA.EMAIL_URL_ADDRESS) as EMAIL_URL_ADDRESS,\n                row_number() over (partition by CPR.PARTY_ROLE_ID\n                                       order by CPR.UPDATED_DATE desc) RN\n           from CONTACT_POINT_ROLE CPR\n          inner join CONTACT_POINT CP\n             on (CP.CONTACT_POINT_ID = CPR.CONTACT_POINT_ID)\n          inner join EMAIL_URL_ADDRESS EUA\n             on (EUA.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n          where CPR.END_DATE is null\n            and CP.CONTACT_POINT_TYPE_ID = 'cp_email'\n        ) EMAIL\n  where EMAIL.RN = 1\n),\nPHONE\nas\n(select PHONE.PARTY_ROLE_ID,\n        PHONE.PHONE_FAX_NUMBER\n   from (select CPR.PARTY_ROLE_ID,\n                PFN.PHONE_FAX_NUMBER,\n                row_number() over (partition by CPR.PARTY_ROLE_ID\n                                       order by CPR.UPDATED_DATE desc) RN\n           from CONTACT_POINT_ROLE CPR\n          inner join CONTACT_POINT CP\n             on (CP.CONTACT_POINT_ID = CPR.CONTACT_POINT_ID)\n          inner join PHONE_FAX_NUMBER PFN\n             on (PFN.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n          where CPR.END_DATE is null\n            and CP.CONTACT_POINT_TYPE_ID = 'cp_phone'\n        ) PHONE\n where PHONE.RN = 1\n),\nRELATED_PARTY\nas\n(select PARTY_ROLE_ID\n   from PARTY_ROLE_RELATIONSHIP\n  where relationship_type_id='rel_afoff'\n    and end_date is null\n)\nselect AO.PARTY_ROLE_ID,\n       AO.PARTY_ROLE_TYPE_ID,\n       AO.STATUS,\n       AO.PARTY_ROLE_NAME,\n       AD.UPDATED_DATE,\n       AD.ADDRESS_LINE_1,\n       AD.ADDRESS_LINE_2,\n       AD.ADDRESS_LINE_3,\n       AD.ADDRESS_LINE_4,\n       AD.POSTCODE,\n       EM.EMAIL_URL_ADDRESS,\n       PH.PHONE_FAX_NUMBER,\n       RP.PARTY_ROLE_ID as FIRM_PARTY_ROLE_ID\n  from ADVISER_OFFICE AO\n  left join ADDRESS AD\n    on (AO.PARTY_ROLE_ID = AD.PARTY_ROLE_ID)\n  left join EMAIL EM\n    on (AO.PARTY_ROLE_ID = EM.PARTY_ROLE_ID)\n  left join PHONE PH\n    on (AO.PARTY_ROLE_ID = PH.PARTY_ROLE_ID)\n  left join RELATED_PARTY RP\n    on (AO.PARTY_ROLE_ID = RP.PARTY_ROLE_ID)\n;",
						"partitionOption": "None",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "PARTY_ROLE_ID",
									"type": "String"
								},
								"sink": {
									"name": "PARTY_ROLE_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "PARTY_ROLE_TYPE_ID",
									"type": "String"
								},
								"sink": {
									"name": "PARTY_ROLE_TYPE_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "STATUS",
									"type": "String"
								},
								"sink": {
									"name": "STATUS",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "PARTY_ROLE_NAME",
									"type": "String"
								},
								"sink": {
									"name": "PARTY_ROLE_NAME",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "UPDATED_DATE",
									"type": "DateTime"
								},
								"sink": {
									"name": "UPDATED_DATE",
									"type": "DateTime",
									"physicalType": "date"
								}
							},
							{
								"source": {
									"name": "ADDRESS_LINE_1",
									"type": "String"
								},
								"sink": {
									"name": "ADDRESS_LINE_1",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ADDRESS_LINE_2",
									"type": "String"
								},
								"sink": {
									"name": "ADDRESS_LINE_2",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ADDRESS_LINE_3",
									"type": "String"
								},
								"sink": {
									"name": "ADDRESS_LINE_3",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ADDRESS_LINE_4",
									"type": "String"
								},
								"sink": {
									"name": "ADDRESS_LINE_4",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "POSTCODE",
									"type": "String"
								},
								"sink": {
									"name": "POSTCODE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "EMAIL_URL_ADDRESS",
									"type": "String"
								},
								"sink": {
									"name": "EMAIL_URL_ADDRESS",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "PHONE_FAX_NUMBER",
									"type": "String"
								},
								"sink": {
									"name": "PHONE_FAX_NUMBER",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "FIRM_PARTY_ROLE_ID",
									"type": "String"
								},
								"sink": {
									"name": "FIRM_PARTY_ROLE_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_DPDB",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "DPARTNER",
							"TABLE": "PARTY",
							"ENVIRONMENT": {
								"value": "@pipeline().globalParameters.ENVIRONMENT",
								"type": "Expression"
							},
							"SHORT_LOCATION": {
								"value": "@pipeline().globalParameters.SHORT_LOCATION",
								"type": "Expression"
							},
							"DPDB": "@pipeline().globalParameters.DPDB",
							"DPDB_HOST": "@pipeline().globalParameters.DPDB_HOST",
							"DPDB_PORT": "@pipeline().globalParameters.DPDB_PORT",
							"DPDB_USERNAME": "@pipeline().globalParameters.DBDB_USERNAME",
							"LOGICAL_ENVIRONMENT": {
								"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_ASQLDB_SHIR",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "STAGE_LOAD",
							"TABLE_NAME": "TD_DPDB_ADVISER_OFFICE_STG",
							"ENVIRONMENT": {
								"value": "@pipeline().globalParameters.ENVIRONMENT",
								"type": "Expression"
							},
							"LOGICAL_ENVIRONMENT": {
								"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
								"type": "Expression"
							},
							"SHORT_LOCATION": {
								"value": "@pipeline().globalParameters.SHORT_LOCATION",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "cd-DPDB_ADVISER_OFFICE_STG_Upsert",
				"description": "compares transient table with staging table to identify new/updated records in the target/staging table.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "cd-TD_DPDB_ADVISER_OFFICE_STG",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"additionalColumns": [
							{
								"name": "CREATE_USER_ID",
								"value": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						],
						"sqlReaderQuery": "select TDAOS.PARTY_ROLE_ID,\n       TDAOS.FIRM_PARTY_ROLE_ID,\n       TDAOS.PARTY_ROLE_NAME,\n       TDAOS.STATUS,\n       TDAOS.PARTY_ROLE_TYPE_ID,\n       TDAOS.ADDRESS_LINE_1,\n       TDAOS.ADDRESS_LINE_2,\n       TDAOS.ADDRESS_LINE_3,\n       TDAOS.ADDRESS_LINE_4,\n       TDAOS.POSTCODE,\n       TDAOS.EMAIL_URL_ADDRESS,\n       TDAOS.PHONE_FAX_NUMBER,\n       TDAOS.RECORD_UPDATE_IND,\n       cast(0 as bit) as RECORD_DELETE_IND,\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from (select PARTY_ROLE_ID,\n               FIRM_PARTY_ROLE_ID,\n               PARTY_ROLE_NAME,\n               STATUS,\n               PARTY_ROLE_TYPE_ID,\n               ADDRESS_LINE_1,\n               ADDRESS_LINE_2,\n               ADDRESS_LINE_3,\n               ADDRESS_LINE_4,\n               POSTCODE,\n               EMAIL_URL_ADDRESS,\n               PHONE_FAX_NUMBER,\n               convert(nvarchar(32), HashBytes('SHA2_256', concat(PARTY_ROLE_NAME,\n                                                                  STATUS,\n                                                                  PARTY_ROLE_TYPE_ID,\n                                                                  ADDRESS_LINE_1,\n                                                                  ADDRESS_LINE_2,\n                                                                  ADDRESS_LINE_3,\n                                                                  ADDRESS_LINE_4,\n                                                                  POSTCODE,\n                                                                  EMAIL_URL_ADDRESS,\n                                                                  PHONE_FAX_NUMBER)), 2) as RECORD_UPDATE_IND\n          from STAGE_LOAD.TD_DPDB_ADVISER_OFFICE_STG\n        ) TDAOS\n  left join STAGE_CDI.DPDB_ADVISER_OFFICE_STG DAOS\n    on (    TDAOS.PARTY_ROLE_ID = DAOS.PARTY_ROLE_ID\n        and TDAOS.RECORD_UPDATE_IND = DAOS.RECORD_UPDATE_IND)\n where DAOS.PARTY_ROLE_ID is null",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"PARTY_ROLE_ID"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "PARTY_ROLE_ID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PARTY_ROLE_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "FIRM_PARTY_ROLE_ID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "FIRM_PARTY_ROLE_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "PARTY_ROLE_NAME",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PARTY_ROLE_NAME",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "STATUS",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "STATUS",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "PARTY_ROLE_TYPE_ID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PARTY_ROLE_TYPE_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ADDRESS_LINE_1",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ADDRESS_LINE_1",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ADDRESS_LINE_2",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ADDRESS_LINE_2",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ADDRESS_LINE_3",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ADDRESS_LINE_3",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ADDRESS_LINE_4",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ADDRESS_LINE_4",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "POSTCODE",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "POSTCODE",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "EMAIL_URL_ADDRESS",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "EMAIL_URL_ADDRESS",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "PHONE_FAX_NUMBER",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PHONE_FAX_NUMBER",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RECORD_UPDATE_IND",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "RECORD_UPDATE_IND",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RECORD_DELETE_IND",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "RECORD_DELETE_IND",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "CREATE_USER_ID",
									"type": "String"
								},
								"sink": {
									"name": "CREATE_USER_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "UPDATE_DATE_TIME",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "UPDATE_DATE_TIME",
									"type": "DateTime",
									"physicalType": "datetime2"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_ASQLDB",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "STAGE_LOAD",
							"TABLE_NAME": "TD_DPDB_ADVISER_OFFICE_STG",
							"ENVIRONMENT": {
								"value": "@pipeline().globalParameters.ENVIRONMENT",
								"type": "Expression"
							},
							"LOGICAL_ENVIRONMENT": {
								"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
								"type": "Expression"
							},
							"SHORT_LOCATION": {
								"value": "@pipeline().globalParameters.SHORT_LOCATION",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_ASQLDB",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "STAGE_CDI",
							"TABLE_NAME": "DPDB_ADVISER_OFFICE_STG",
							"ENVIRONMENT": {
								"value": "@pipeline().globalParameters.ENVIRONMENT",
								"type": "Expression"
							},
							"LOGICAL_ENVIRONMENT": {
								"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
								"type": "Expression"
							},
							"SHORT_LOCATION": {
								"value": "@pipeline().globalParameters.SHORT_LOCATION",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "cd-DPDB_ADVISER_OFFICE_STG_Del",
				"description": "compares transient table with staging table to identify deleted records in the target/staging table.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "cd-DPDB_ADVISER_OFFICE_STG_Upsert",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select DAOS.PARTY_ROLE_ID,\n       cast(1 as bit) as RECORD_DELETE_IND,\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from STAGE_CDI.DPDB_ADVISER_OFFICE_STG DAOS\n  left outer join STAGE_LOAD.TD_DPDB_ADVISER_OFFICE_STG TDAOS\n    on (TDAOS.PARTY_ROLE_ID = DAOS.PARTY_ROLE_ID)\n where DAOS.RECORD_DELETE_IND = 0\n   and TDAOS.PARTY_ROLE_ID is NULL",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"PARTY_ROLE_ID"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "PARTY_ROLE_ID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PARTY_ROLE_ID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RECORD_DELETE_IND",
									"type": "Boolean",
									"physicalType": "bit"
								},
								"sink": {
									"name": "RECORD_DELETE_IND",
									"type": "Boolean",
									"physicalType": "bit"
								}
							},
							{
								"source": {
									"name": "UPDATE_DATE_TIME",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "UPDATE_DATE_TIME",
									"type": "DateTime",
									"physicalType": "datetime2"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_ASQLDB",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "STAGE_LOAD",
							"TABLE_NAME": "TD_DPDB_ADVISER_OFFICE_STG",
							"ENVIRONMENT": {
								"value": "@pipeline().globalParameters.ENVIRONMENT",
								"type": "Expression"
							},
							"LOGICAL_ENVIRONMENT": {
								"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
								"type": "Expression"
							},
							"SHORT_LOCATION": {
								"value": "@pipeline().globalParameters.SHORT_LOCATION",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_ASQLDB",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "STAGE_CDI",
							"TABLE_NAME": "DPDB_ADVISER_OFFICE_STG",
							"ENVIRONMENT": {
								"value": "@pipeline().globalParameters.ENVIRONMENT",
								"type": "Expression"
							},
							"LOGICAL_ENVIRONMENT": {
								"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
								"type": "Expression"
							},
							"SHORT_LOCATION": {
								"value": "@pipeline().globalParameters.SHORT_LOCATION",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "sp-TRUNCATE-TD_DPDB_ADVISER_OFFICE_STG",
				"description": "This step truncates the transient table,TD_DPDB_ADVISER_OFFICE_STG.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[STAGE_LOAD].[PRC_TRUNCATE_TD_TABLE]",
					"storedProcedureParameters": {
						"p_table_name": {
							"value": "TD_DPDB_ADVISER_OFFICE_STG",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_AzureSQLDB",
					"type": "LinkedServiceReference",
					"parameters": {
						"SHORT_LOCATION": {
							"value": "@pipeline().globalParameters.SHORT_LOCATION",
							"type": "Expression"
						},
						"LOGICAL_ENVIRONMENT": {
							"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
							"type": "Expression"
						},
						"ENVIRONMENT": {
							"value": "@pipeline().globalParameters.ENVIRONMENT",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "sp-UPDATE_BATCH_AUDIT-TD_DPDB_ADVISER_NETWORK_STG",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "cd-TD_DPDB_ADVISER_OFFICE_STG",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[STAGE_CDI].[PRC_BATCH_AUDIT]",
					"storedProcedureParameters": {
						"p_billable_duration": {
							"value": {
								"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.billingReference.billableDuration[0].duration\n",
								"type": "Expression"
							},
							"type": "Decimal"
						},
						"p_billable_unit": {
							"value": {
								"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.billingReference.billableDuration[0].unit",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_duration": {
							"value": {
								"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.copyDuration",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_process_start_dt": {
							"value": {
								"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.executionDetails[0].start",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_records_read": {
							"value": {
								"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.rowsRead",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_records_written": {
							"value": {
								"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_table_name": {
							"value": "TD_DPDB_ADVISER_OFFICE_STG",
							"type": "String"
						},
						"p_trigger_name": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_AzureSQLDB",
					"type": "LinkedServiceReference",
					"parameters": {
						"SHORT_LOCATION": {
							"value": "@pipeline().globalParameters.SHORT_LOCATION",
							"type": "Expression"
						},
						"LOGICAL_ENVIRONMENT": {
							"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
							"type": "Expression"
						},
						"ENVIRONMENT": {
							"value": "@pipeline().globalParameters.ENVIRONMENT",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_OFFICE_STG_Upsert",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "cd-DPDB_ADVISER_OFFICE_STG_Upsert",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[STAGE_CDI].[PRC_BATCH_AUDIT]",
					"storedProcedureParameters": {
						"p_billable_duration": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.billingReference.billableDuration[0].duration\n",
								"type": "Expression"
							},
							"type": "Decimal"
						},
						"p_billable_unit": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.billingReference.billableDuration[0].unit",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_duration": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.copyDuration",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_process_start_dt": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.executionDetails[0].start",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_records_read": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.rowsRead",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_records_written": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_table_name": {
							"value": "DPDB_ADVISER_OFFICE_STG",
							"type": "String"
						},
						"p_trigger_name": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_AzureSQLDB",
					"type": "LinkedServiceReference",
					"parameters": {
						"SHORT_LOCATION": {
							"value": "@pipeline().globalParameters.SHORT_LOCATION",
							"type": "Expression"
						},
						"LOGICAL_ENVIRONMENT": {
							"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
							"type": "Expression"
						},
						"ENVIRONMENT": {
							"value": "@pipeline().globalParameters.ENVIRONMENT",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_OFFICE_STG_Del",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "cd-DPDB_ADVISER_OFFICE_STG_Del",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[STAGE_CDI].[PRC_BATCH_AUDIT]",
					"storedProcedureParameters": {
						"p_billable_duration": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.billingReference.billableDuration[0].duration\n",
								"type": "Expression"
							},
							"type": "Decimal"
						},
						"p_billable_unit": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.billingReference.billableDuration[0].unit",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_duration": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.copyDuration",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_process_start_dt": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.executionDetails[0].start",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_records_read": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.rowsRead",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_records_written": {
							"value": {
								"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_table_name": {
							"value": "DPDB_ADVISER_OFFICE_STG-Del",
							"type": "String"
						},
						"p_trigger_name": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_AzureSQLDB",
					"type": "LinkedServiceReference",
					"parameters": {
						"SHORT_LOCATION": {
							"value": "@pipeline().globalParameters.SHORT_LOCATION",
							"type": "Expression"
						},
						"LOGICAL_ENVIRONMENT": {
							"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
							"type": "Expression"
						},
						"ENVIRONMENT": {
							"value": "@pipeline().globalParameters.ENVIRONMENT",
							"type": "Expression"
						}
					}
				}
			}
		],
		"folder": {
			"name": "Digital Account/Adviser"
		},
		"annotations": [],
		"lastPublishTime": "2023-06-20T06:28:34Z"
	}
}