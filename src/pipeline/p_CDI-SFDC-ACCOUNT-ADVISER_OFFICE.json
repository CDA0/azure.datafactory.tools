{
	"name": "p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE",
	"properties": {
		"description": "Name : Nextpathway\nDate : 02/06/2023\nDescription : Pulls data from Azure SQL and Upsert data in SFDC - ACCOUNT",
		"activities": [
			{
				"name": "cd-ACCOUNT",
				"description": "Pulls data from Azure SQL and loads to Salesforce",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "with ADVISER_OFFICE\nas\n(select PARTY_ROLE_ID, \n        FIRM_PARTY_ROLE_ID, \n        STAGE_CDI.F_INITCAP(PARTY_ROLE_NAME) as PARTY_ROLE_NAME, \n        STATUS, \n        PARTY_ROLE_TYPE_ID,\n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_1) as ADDRESS_LINE_1, \n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_2) as ADDRESS_LINE_2, \n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_3) as ADDRESS_LINE_3, \n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_4) as ADDRESS_LINE_4, \n        POSTCODE, \n        STAGE_CDI.F_DEPERSONALISE(EMAIL_URL_ADDRESS) as EMAIL_URL_ADDRESS,  \n        STAGE_CDI.F_DEPERSONALISE(PHONE_FAX_NUMBER) as  PHONE_FAX_NUMBER,\n        RECORD_DELETE_IND,\n        UPDATE_DATE_TIME\n   from STAGE_CDI.DPDB_ADVISER_OFFICE_STG\n  where (   PARTY_ROLE_ID in (select distinct \n                                     OFFICE_PARTY_ROLE_ID \n                                from STAGE_CDI.DPDB_REGISTERED_INDIVIDUAL_STG \n                               where status = 'A' \n                                 and account_status = 'A'\n                           )\n        and '1900-01-01 01:00:00' = (select cast(PARAMETER_VALUE_DT as varchar)\n                                       from STAGE_CDI.BATCH_PARAMETER\n                                      where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE'\n                                        and PARAMETER_NAME = 'prm_EXTRACTDT'\n                                    )\n        )\n     or (   '1900-01-01 01:00:00' != (select cast(PARAMETER_VALUE_DT as varchar)\n                                        from STAGE_CDI.BATCH_PARAMETER\n                                       where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE'\n                                         and PARAMETER_NAME = 'prm_EXTRACTDT'\n                                  ) \n        and UPDATE_DATE_TIME > (select cast(PARAMETER_VALUE_DT as varchar)\n                                  from STAGE_CDI.BATCH_PARAMETER\n                                 where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE'\n                                   and PARAMETER_NAME = 'prm_EXTRACTDT'\n                                ) \n        )\n),\nTRANSLATION\nas\n(select LKP_CODE,\n        RTN_DESC\n   from STAGE_CDI.REF_DPDB_TRANSLATION\n),\nRECORD_TYPE\nas\n(select NAME,\n        SFDC_RECORD_TYPE_STG_ID\n   from STAGE_CDI.SFDC_RECORD_TYPE_STG\n),\nADV_ACC\nas\n(select PRU_PARTYROLEID__C ,\n        SFDC_ADVISER_ACCOUNT_ID\n   from STAGE_CDI.SFDC_ADVISER_ACCOUNT_STG\n),\nADV_FIRM\nas\n(select PARTY_ROLE_ID as PARTY_ROLE_ID,\n        STAGE_CDI.F_INITCAP(ORGANISATION_NAME) as ORGANISATION_NAME\n   from STAGE_CDI.DPDB_ADVISER_FIRM_STG\n  where PARTY_ROLE_ID in (select FIRM_PARTY_ROLE_ID\n                            from STAGE_CDI.DPDB_ADVISER_OFFICE_STG\n                           where PARTY_ROLE_NAME is null\n                         )\n),\nADV_LKP\nas\n(select ADV_OFF.PARTY_ROLE_ID, \n        ADV_OFF.FIRM_PARTY_ROLE_ID, \n        ADV_OFF.PARTY_ROLE_NAME, \n        ADV_OFF.STATUS, \n        ADV_OFF.PARTY_ROLE_TYPE_ID,\n        ADV_OFF.ADDRESS_LINE_1, \n        ADV_OFF.ADDRESS_LINE_2, \n        ADV_OFF.ADDRESS_LINE_3, \n        ADV_OFF.ADDRESS_LINE_4, \n        ADV_OFF.POSTCODE, \n        ADV_OFF.EMAIL_URL_ADDRESS,  \n        ADV_OFF.PHONE_FAX_NUMBER,\n        ADV_OFF.RECORD_DELETE_IND,\n        ADV_OFF.UPDATE_DATE_TIME,\n        coalesce(TR.RTN_DESC, ADV_OFF.STATUS) as PRU_Status__c,\n        coalesce(TR_PR.RTN_DESC, ADV_OFF.PARTY_ROLE_TYPE_ID) as Type,\n        RT.SFDC_RECORD_TYPE_STG_ID as RecordTypeID,\n        concat(ADV_OFF.ADDRESS_LINE_1,CHAR(10),ADV_OFF.ADDRESS_LINE_2) as ShippingStreet,\n        coalesce(ADV_OFF.ADDRESS_LINE_3,ADV_OFF.ADDRESS_LINE_4) as ShippingCity,\n              case\n                when ADV_OFF.ADDRESS_LINE_3 is null then\n                  null\n                else\n                  ADV_OFF.ADDRESS_LINE_4\n              end as ShippingState,\n        case\n                when ADV_OFF.EMAIL_URL_ADDRESS is null\n                  or STAGE_CDI.F_VALID_EMAIL_CHECK(ADV_OFF.EMAIL_URL_ADDRESS) = 1 then\n                  0\n                else\n                  1\n              end as Email_Val_Ind,\n        case \n           when trim(coalesce(ADV_OFF.PARTY_ROLE_NAME, AF.ORGANISATION_NAME)) is null then\n                1\n           else\n                0\n        end as Name_Val_Ind,\n        AA_ID.SFDC_ADVISER_ACCOUNT_ID as PARENT_ID, \n        case\n                when AA.SFDC_ADVISER_ACCOUNT_ID is null\n                 and ADV_OFF.STATUS = 'A' then\n                  1\n                when AA.SFDC_ADVISER_ACCOUNT_ID is not null then\n                  1\n                else\n                  0\n              end as UPS_Flag,  \n        coalesce(ADV_OFF.PARTY_ROLE_NAME, AF.ORGANISATION_NAME) as o_PARTY_ROLE_NAME\n   from ADVISER_OFFICE ADV_OFF\n   left outer join TRANSLATION TR\n     on (ADV_OFF.STATUS = TR.LKP_CODE)\n   left outer join TRANSLATION TR_PR\n     on (ADV_OFF.PARTY_ROLE_TYPE_ID = TR_PR.LKP_CODE)\n   left outer join RECORD_TYPE RT\n     on (RT.NAME = 'Business Account Office')\n   left outer join ADV_ACC AA\n     on (ADV_OFF.PARTY_ROLE_ID = AA.PRU_PARTYROLEID__C)\n   left outer join ADV_ACC AA_ID\n     on (ADV_OFF.FIRM_PARTY_ROLE_ID = AA_ID.PRU_PARTYROLEID__C)\n   left outer join ADV_FIRM AF\n     on (ADV_OFF.FIRM_PARTY_ROLE_ID = AF.PARTY_ROLE_ID)\n)\nselect AL.TYPE as TYPE,\n       AL.RECORDTYPEID as RECORDTYPEID,\n       AL.PARENT_ID as ParentId,\n       AL.SHIPPINGSTREET as SHIPPINGSTREET,\n       AL.SHIPPINGCITY as SHIPPINGCITY,\n       AL.SHIPPINGSTATE as SHIPPINGSTATE,\n       AL.POSTCODE as SHIPPINGPOSTALCODE,\n       AL.PHONE_FAX_NUMBER as PHONE, \n       case\n            when AL.EMAIL_VAL_IND = 1 then\n              concat('Invalid email address: ', AL.EMAIL_URL_ADDRESS,char(10))\n            when AL.NAME_VAL_IND = 1 then\n              'Name is unknown'\n            else\n              null\n       end as PRU_DATAQUALITYCOMMENT__C,\n       case\n            when AL.EMAIL_VAL_IND = 1\n              or AL.NAME_VAL_IND = 1 then\n                1\n            else\n              0\n       end as PRU_DataQualityIssue__c,\n       case\n            when AL.EMAIL_VAL_IND = 1 then\n              null\n            else\n              AL.EMAIL_URL_ADDRESS\n       end as PRU_EMAIL__C,\n       case\n            when AL.NAME_VAL_IND = 1 then\n              '<Not known>'\n            else\n              AL.o_PARTY_ROLE_NAME\n       end as NAME,\n       AL.PARTY_ROLE_ID as PRU_PARTYROLEID__C,\n       'Pru' as PRU_SOURCEOFRECORD__C,\n       AL.RECORD_DELETE_IND  as PRU_RecordRemoved__c,\n       AL.PRU_STATUS__C as PRU_STATUS__C      \n  from ADV_LKP  AL\n where AL.UPS_Flag = 1",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "SalesforceSink",
						"writeBatchSize": 5000,
						"writeBehavior": "upsert",
						"externalIdFieldName": "PRU_PARTYROLEID__C",
						"ignoreNullValues": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": true,
					"logSettings": {
						"enableCopyActivityLog": true,
						"copyActivityLogSettings": {
							"logLevel": "Warning",
							"enableReliableLogging": false
						},
						"logLocationSettings": {
							"linkedServiceName": {
								"referenceName": "ls_ADLS2",
								"type": "LinkedServiceReference",
								"parameters": {
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									}
								}
							},
							"path": "crm/ErrorLogs"
						}
					},
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "NAME",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Name",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "TYPE",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Type",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "RECORDTYPEID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "RecordTypeId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "ParentId",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ParentId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SHIPPINGSTREET",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ShippingStreet",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SHIPPINGCITY",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ShippingCity",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SHIPPINGSTATE",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ShippingState",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SHIPPINGPOSTALCODE",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ShippingPostalCode",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PHONE",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "Phone",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PRU_DATAQUALITYCOMMENT__C",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PRU_DataQualityComment__c",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PRU_EMAIL__C",
									"type": "String",
									"physicalType": "nvarchar"
								},
								"sink": {
									"name": "PRU_Email__c",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PRU_STATUS__C",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PRU_Status__c",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PRU_SOURCEOFRECORD__C",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PRU_SourceOfRecord__c",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PRU_PARTYROLEID__C",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "PRU_PartyRoleID__c",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PRU_DataQualityIssue__c",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "PRU_DataQualityIssue__c",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"name": "PRU_RecordRemoved__c",
									"type": "Decimal",
									"physicalType": "decimal",
									"scale": 0,
									"precision": 1
								},
								"sink": {
									"name": "PRU_RecordRemoved__c",
									"type": "Boolean"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": true
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_ASQLDB_WOKING_SHIR",
						"type": "DatasetReference",
						"parameters": {
							"SCHEMA": "STAGE_CDI",
							"TABLE_NAME": "DPDB_ADVISER_OFFICE_STG",
							"ENVIRONMENT": {
								"value": "@pipeline().globalParameters.ENVIRONMENT",
								"type": "Expression"
							},
							"LOGICAL_ENVIRONMENT": {
								"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
								"type": "Expression"
							},
							"SHORT_LOCATION": {
								"value": "@pipeline().globalParameters.SHORT_LOCATION",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_SFDC_DPDB",
						"type": "DatasetReference",
						"parameters": {
							"ENVIRONMENT": {
								"value": "@pipeline().globalParameters.ENVIRONMENT",
								"type": "Expression"
							},
							"SHORT_LOCATION": {
								"value": "@pipeline().globalParameters.SHORT_LOCATION",
								"type": "Expression"
							},
							"SFDC_DPDB_URL": {
								"value": "@pipeline().globalParameters.SFDC_DPDB_URL",
								"type": "Expression"
							},
							"SFDC_DPDB_USERNAME": {
								"value": "@pipeline().globalParameters.SFDC_DPDB_USERNAME",
								"type": "Expression"
							},
							"OBJECT_NAME": "Account",
							"SFDC_DPDB_API_VERSION": {
								"value": "@pipeline().globalParameters.SFDC_DPDB_API_VERSION",
								"type": "Expression"
							},
							"SFDC_DPDB_ORG": {
								"value": "@pipeline().globalParameters.SFDC_DPDB_ORG",
								"type": "Expression"
							},
							"LOGICAL_ENVIRONMENT": {
								"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "sp-UPDATE-BATCH_PARAMETER",
				"description": "Update BATCH_PARAMETER",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "cd-ACCOUNT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[STAGE_CDI].[PRC_UPDATE_PARAMETER_VIA_TABLE]",
					"storedProcedureParameters": {
						"p_column_name": {
							"value": "UPDATE_DATE_TIME",
							"type": "String"
						},
						"p_parameter_name": {
							"value": "prm_EXTRACTDT",
							"type": "String"
						},
						"p_process_name": {
							"value": "p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE",
							"type": "String"
						},
						"p_table_name": {
							"value": "STAGE_CDI.DPDB_ADVISER_OFFICE_STG",
							"type": "String"
						},
						"p_updated_by": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_AzureSQLDB",
					"type": "LinkedServiceReference",
					"parameters": {
						"SHORT_LOCATION": {
							"value": "@pipeline().globalParameters.SHORT_LOCATION",
							"type": "Expression"
						},
						"LOGICAL_ENVIRONMENT": {
							"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
							"type": "Expression"
						},
						"ENVIRONMENT": {
							"value": "@pipeline().globalParameters.ENVIRONMENT",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "sp-UPDATE_BATCH_AUDIT-ACCOUNT",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "cd-ACCOUNT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[STAGE_CDI].[PRC_BATCH_AUDIT]",
					"storedProcedureParameters": {
						"p_billable_duration": {
							"value": {
								"value": "@activity('cd-ACCOUNT').output.billingReference.billableDuration[0].duration\n",
								"type": "Expression"
							},
							"type": "Decimal"
						},
						"p_billable_unit": {
							"value": {
								"value": "@activity('cd-ACCOUNT').output.billingReference.billableDuration[0].unit",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_duration": {
							"value": {
								"value": "@activity('cd-ACCOUNT').output.copyDuration",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_process_start_dt": {
							"value": {
								"value": "@activity('cd-ACCOUNT').output.executionDetails[0].start",
								"type": "Expression"
							},
							"type": "String"
						},
						"p_records_read": {
							"value": {
								"value": "@activity('cd-ACCOUNT').output.rowsRead",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_records_written": {
							"value": {
								"value": "@activity('cd-ACCOUNT').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"p_table_name": {
							"value": "ACCOUNT",
							"type": "String"
						},
						"p_trigger_name": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_AzureSQLDB",
					"type": "LinkedServiceReference",
					"parameters": {
						"SHORT_LOCATION": {
							"value": "@pipeline().globalParameters.SHORT_LOCATION",
							"type": "Expression"
						},
						"LOGICAL_ENVIRONMENT": {
							"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
							"type": "Expression"
						},
						"ENVIRONMENT": {
							"value": "@pipeline().globalParameters.ENVIRONMENT",
							"type": "Expression"
						}
					}
				}
			}
		],
		"folder": {
			"name": "Digital Account/Adviser"
		},
		"annotations": [],
		"lastPublishTime": "2023-07-18T07:10:44Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}