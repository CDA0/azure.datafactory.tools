{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"ls_ASQLDB": {
			"type": "string"
		},
		"ls_AzureSQLDB": {
			"type": "string"
		},
		"ls_DPDB": {
			"type": "string"
		},
		"ls_AzureSQLDB_SHIR": {
			"type": "string"
		},
		"ls_SFDC_DPDB": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/mp_CDI-DPDB-SFDC-INC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 06/06/2023\nDescription :it will run the all pipelines of Adviser folder having in it.",
				"activities": [
					{
						"name": "p_DPDB-CDI-DPDB_ADVISER_FIRM_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_DPDB-CDI-DPDB_ADVISER_FIRM_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "p_DPDB-CDI-DPDB_ADVISER_OFFICE_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_DPDB-CDI-DPDB_ADVISER_OFFICE_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "p_DPDB-CDI-DPDB_CRM_REGISTERED_INDIVIDUAL",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_DPDB-CDI-DPDB_CRM_REGISTERED_INDIVIDUAL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "p_DPDB-CDI-DPDB_ADVISER_LEGACY_AGENCY",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_DPDB-CDI-DPDB_ADVISER_LEGACY_AGENCY",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "p_DPDB-CDI-DPDB_ADVISER_NETWORK_STG",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_DPDB-CDI-DPDB_ADVISER_NETWORK_STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "if-CONDITION-CHECK",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "spt-SUM-BATCH_AUDIT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('spt-SUM-BATCH_AUDIT').output.resultSets[0].rows[0].RECORDS_WRITTEN,5)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "p_CDI-SFDC-ACCOUNT-ADVISER_NETWORK",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_CDI-SFDC-ACCOUNT-ADVISER_NETWORK",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "p_CDI-SFDC-ACCOUNT-ADVISER_FIRM",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "p_CDI-SFDC-ACCOUNT-ADVISER_NETWORK",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_CDI-SFDC-ACCOUNT-ADVISER_FIRM",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "p_CDI-SFDC-ACCOUNT-ADVISER_FIRM",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "p_SFDC-CDI-SFDC_ADVISER_RI_CONTACT_STG",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "p_CDI-SFDC_CONTACT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_SFDC-CDI-SFDC_ADVISER_RI_CONTACT_STG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "p_CDI-SFDC-PRU_HERITAGEARNASSOCIATION__C",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "p_SFDC-CDI-SFDC_ADVISER_RI_CONTACT_STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_CDI-SFDC-PRU_HERITAGEARNASSOCIATION__C",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "p_SFDC-CDI-SFDC_ADVISER_HERITAGE_ARN_STG",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "p_CDI-SFDC-PRU_HERITAGEARNASSOCIATION__C",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_SFDC-CDI-SFDC_ADVISER_HERITAGE_ARN_STG",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "p_CDI-SFDC-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "p_SFDC-CDI-SFDC_ADVISER_HERITAGE_ARN_STG",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_CDI-SFDC-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								},
								{
									"name": "p_CDI-SFDC_CONTACT",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "p_CDI-SFDC_CONTACT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true
									}
								}
							]
						}
					},
					{
						"name": "spt-SUM-BATCH_AUDIT",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "p_DPDB-CDI-DPDB_ADVISER_FIRM_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "p_DPDB-CDI-DPDB_ADVISER_OFFICE_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "p_DPDB-CDI-DPDB_CRM_REGISTERED_INDIVIDUAL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "p_DPDB-CDI-DPDB_ADVISER_LEGACY_AGENCY",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "p_DPDB-CDI-DPDB_ADVISER_NETWORK_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('ls_ASQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								},
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select sum(RECORDS_WRITTEN) as RECORDS_WRITTEN\n  from (select case\n\t\t\t\twhen RECORDS_WRITTEN > 0 then\n\t\t\t\t\t1\n\t\t\t\telse\n\t\t\t\t\t0\n\t\t\t   end as RECORDS_WRITTEN\n\t\t  from STAGE_CDI.BATCH_AUDIT\n\t\t where TABLE_NAME = 'DPDB_ADVISER_FIRM_STG'\n\t\t   and PIPELINE_NAME = 'p_DPDB-CDI-DPDB_ADVISER_FIRM_STG'\n\t\t union all\n\t\tselect case\n\t\t\t\twhen RECORDS_WRITTEN > 0 then\n\t\t\t\t1\n\t\t\t\telse\n\t\t\t\t0\n\t\t\t   end as RECORDS_WRITTEN\n\t\t  from STAGE_CDI.BATCH_AUDIT\n\t\t where TABLE_NAME = 'DPDB_ADVISER_OFFICE_STG'\n\t\t   and PIPELINE_NAME = 'p_DPDB-CDI-DPDB_ADVISER_OFFICE_STG'\n\t\t union all\n\t\tselect case\n\t\t\t\twhen RECORDS_WRITTEN > 0 then\n\t\t\t\t1\n\t\t\t\telse\n\t\t\t\t0\n\t\t\t   end as RECORDS_WRITTEN\n\t\t  from STAGE_CDI.BATCH_AUDIT\n\t\t where TABLE_NAME = 'DPDB_REGISTERED_INDIVIDUAL_STG'\n\t\t   and PIPELINE_NAME = 'p_DPDB-CDI-DPDB_CRM_REGISTERED_INDIVIDUAL'\n\t\t union all\n\t\tselect case\n\t\t\t\twhen RECORDS_WRITTEN > 0 then\n\t\t\t\t1\n\t\t\t\telse\n\t\t\t\t0\n\t\t\t   end as RECORDS_WRITTEN\n\t\t  from STAGE_CDI.BATCH_AUDIT\n\t\t where TABLE_NAME = 'DPDB_ADVISER_NETWORK_STG'\n\t\t   and PIPELINE_NAME = 'p_DPDB-CDI-DPDB_ADVISER_NETWORK_STG'\n\t\t union all\n\t\tselect case\n\t\t\t\twhen RECORDS_WRITTEN > 0 then\n\t\t\t\t1\n\t\t\t\telse\n\t\t\t\t0\n\t\t\t   end as RECORDS_WRITTEN\n\t\t  from STAGE_CDI.BATCH_AUDIT\n\t\t where TABLE_NAME = 'DPDB_ADVISER_LEGACY_AGENCY_STG'\n\t\t   and PIPELINE_NAME = 'p_DPDB-CDI-DPDB_ADVISER_LEGACY_AGENCY'\n\t\t)RW;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"variables": {
					"rows_written": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-13T13:23:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/p_DPDB-CDI-DPDB_ADVISER_FIRM_STG')]",
				"[concat(variables('factoryId'), '/pipelines/p_DPDB-CDI-DPDB_ADVISER_OFFICE_STG')]",
				"[concat(variables('factoryId'), '/pipelines/p_DPDB-CDI-DPDB_CRM_REGISTERED_INDIVIDUAL')]",
				"[concat(variables('factoryId'), '/pipelines/p_DPDB-CDI-DPDB_ADVISER_LEGACY_AGENCY')]",
				"[concat(variables('factoryId'), '/pipelines/p_DPDB-CDI-DPDB_ADVISER_NETWORK_STG')]",
				"[concat(variables('factoryId'), '/pipelines/p_CDI-SFDC-ACCOUNT-ADVISER_NETWORK')]",
				"[concat(variables('factoryId'), '/pipelines/p_CDI-SFDC-ACCOUNT-ADVISER_FIRM')]",
				"[concat(variables('factoryId'), '/pipelines/p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG')]",
				"[concat(variables('factoryId'), '/pipelines/p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE')]",
				"[concat(variables('factoryId'), '/pipelines/p_SFDC-CDI-SFDC_ADVISER_RI_CONTACT_STG')]",
				"[concat(variables('factoryId'), '/pipelines/p_CDI-SFDC-PRU_HERITAGEARNASSOCIATION__C')]",
				"[concat(variables('factoryId'), '/pipelines/p_SFDC-CDI-SFDC_ADVISER_HERITAGE_ARN_STG')]",
				"[concat(variables('factoryId'), '/pipelines/p_CDI-SFDC-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C')]",
				"[concat(variables('factoryId'), '/pipelines/p_CDI-SFDC_CONTACT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_DPDB-CDI-DPDB_ADVISER_FIRM_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 31/05/2023\nDescription : pulls data from oracle tables and loads into transient table. Compares transient table with staging table to identify new/updated records in the target/staging table and load target table.",
				"activities": [
					{
						"name": "cd-TD_DPDB_ADVISER_FIRM_STG",
						"description": "pulls data from oracle tables, loads into transient table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp-TRUNCATE-TD_DPDB_ADVISER_FIRM_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "with PARTY_DETAILS\nas\n(select P.ORGANISATION_NAME,\n        PR.PARTY_ROLE_ID,\n        PR.PARTY_ROLE_TYPE_ID,\n        OPR.STATUS,\n        OPR.FIRM_REFERENCE_NUMBER,\n        OPR.REGULATORY_STATUS_ID,\n        OPR.REGULATION_TYPE_ID\n   from PARTY P\n  inner join PARTY_ROLE PR\n     on (PR.PARTY_ID = P.PARTY_ID)\n  inner join ORGANISATION_PARTY_ROLE OPR\n     on (OPR.PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  where PR.PARTY_ROLE_TYPE_ID in ('adv_firm', 'par_org', 'os_firm', 'sp_firm')\n    and PR.PARTY_ROLE_ID in\n           (select distinct\n                   PRR.PARTY_ROLE_ID\n              from COMMISSION_ACCOUNT CA\n             inner join LEGACY_ACCOUNT_DETAIL LAD\n                on (LAD.COMMISSION_ACCOUNT_ID = CA.COMMISSION_ACCOUNT_ID)\n             inner join PARTY_ROLE_RELATIONSHIP PRR\n                on (PRR.RELATED_PARTY_ROLE_ID = CA.PARTY_ROLE_ID)\n             where RELATIONSHIP_TYPE_ID = 'rel_afoff'\n            )\n),\nHEAD_OFFICE\nas\n(select PRR.PARTY_ROLE_ID,\n        PRR.RELATED_PARTY_ROLE_ID as HEAD_OFFICE_PARTY_ROLE_ID\n   from PARTY_ROLE_RELATIONSHIP PRR\n  inner join PARTY_ROLE PR\n     on (PRR.RELATED_PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  where PRR.RELATIONSHIP_TYPE_ID = 'rel_afoff'\n    and PRR.END_DATE is null\n    and PR.PARTY_ROLE_TYPE_ID = 'head_off'\n),\nHO_ADDRESS\nas\n(select ADDRESS.PARTY_ROLE_ID,\n        ADDRESS.ADDRESS_LINE_1,\n        ADDRESS.ADDRESS_LINE_2,\n        ADDRESS.ADDRESS_LINE_3,\n        ADDRESS.ADDRESS_LINE_4,\n        ADDRESS.POSTCODE\n   from (select CPR.PARTY_ROLE_ID,\n                trim(PA.ADDRESS_LINE_1) as ADDRESS_LINE_1,\n                trim(PA.ADDRESS_LINE_2) as ADDRESS_LINE_2,\n                trim(PA.ADDRESS_LINE_3) as ADDRESS_LINE_3,\n                trim(PA.ADDRESS_LINE_4) as ADDRESS_LINE_4,\n                trim(PA.POSTCODE) as POSTCODE,\n                row_number() over(partition by CPR.PARTY_ROLE_ID\n                                     order by CPR.UPDATED_DATE desc) RN\n           from PARTY_ROLE PR\n\t\t    inner join CONTACT_POINT_ROLE CPR\n             on (PR.PARTY_ROLE_ID = CPR.PARTY_ROLE_ID)\n\t\t    inner join CONTACT_POINT CP\n             on (CP.CONTACT_POINT_ID = CPR.CONTACT_POINT_ID)\n\t\t    inner join POSTAL_ADDRESS PA\n             on (PA.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n          where CPR.END_DATE is null\n            and CP.CONTACT_POINT_TYPE_ID = 'cp_addr'\n            and nvl(CPR.CONTACT_POINT_ROLE_TYPE_ID, 'A') != 'cpr_rig'\n            and PR.PARTY_ROLE_TYPE_ID = 'head_off'\n\t\t) ADDRESS\n  where ADDRESS.RN = 1\n),\nPARTY_ROLE_NETWORK\nas\n(select PARTY_ROLE_ID,\n        RELATED_PARTY_ROLE_ID\n   from PARTY_ROLE_RELATIONSHIP\n  where RELATIONSHIP_TYPE_ID = 'rel_netmem'\n    and END_DATE is null\n    and DEFAULT_REPORT_RELATIONSHIP = 'Y'\n    and RELATED_PARTY_ROLE_ID in\n          (select PARTY_ROLE_ID\n             from ORGANISATION_PARTY_ROLE\n            where REGULATION_TYPE_ID = 'rt_apprep'\n              and status = 'A'\n           )\n),\nAUTHORISATION\nas\n(select PARTY_ROLE_ID,\n        PROD_GRP_ID\n   from PRODUCT_AUTHORISATION\n  where END_DATE is null\n    and PROD_GRP_ID in (10002, 10003, 10004)\n),\nROLE_PERMISSION\nas\n(select PERMISSION_TYPE_ID,\n        PARTY_ROLE_ID\n   from PARTY_ROLE_PERMISSIONS\n  where END_DATE is null\n    and PERMISSION_TYPE_ID = 'prp_penstrans'\n),\nHO_EMAIL\nas\n(select EMAIL.PARTY_ROLE_ID,\n        EMAIL.EMAIL_URL_ADDRESS\n   from (select CPR.PARTY_ROLE_ID,\n                trim(EUA.EMAIL_URL_ADDRESS) as EMAIL_URL_ADDRESS,\n                row_number() over(partition by CPR.PARTY_ROLE_ID\n                                      order by CPR.UPDATED_DATE desc) RN\n           from CONTACT_POINT_ROLE CPR\n          inner join CONTACT_POINT CP\n             on (CP.CONTACT_POINT_ID = CPR.CONTACT_POINT_ID)\n          inner join EMAIL_URL_ADDRESS EUA\n             on (EUA.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n          inner join PARTY_ROLE PR\n             on (PR.PARTY_ROLE_ID = CPR.PARTY_ROLE_ID)\n          where CPR.END_DATE is null\n            and CP.CONTACT_POINT_TYPE_ID = 'cp_email'\n            and PR.PARTY_ROLE_TYPE_ID = 'head_off'\n\t\t) EMAIL\n  where EMAIL.RN = 1\n),\nHO_PHONE\nas\n(select PHONE.PARTY_ROLE_ID,\n        PHONE.PHONE_FAX_NUMBER\n   from (select CPR.PARTY_ROLE_ID,\n                PFN.PHONE_FAX_NUMBER,\n                row_number() over(partition by CPR.PARTY_ROLE_ID\n                                      order by CPR.UPDATED_DATE desc) RN\n           from CONTACT_POINT_ROLE CPR\n          inner join CONTACT_POINT CP\n             on (CP.CONTACT_POINT_ID = CPR.CONTACT_POINT_ID)\n          inner join PHONE_FAX_NUMBER PFN\n             on (PFN.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n          inner join PARTY_ROLE PR\n             on (PR.PARTY_ROLE_ID = CPR.PARTY_ROLE_ID)\n          where CPR.END_DATE is null\n            and CP.CONTACT_POINT_TYPE_ID = 'cp_phone'\n            and PR.PARTY_ROLE_TYPE_ID = 'head_off'\n\t\t) PHONE\n  where PHONE.RN = 1\n)\nselect PD.PARTY_ROLE_ID,\n       PD.ORGANISATION_NAME,\n       PD.FIRM_REFERENCE_NUMBER,\n       PD.STATUS,\n       PD.REGULATORY_STATUS_ID,\n       PD.PARTY_ROLE_TYPE_ID,\n       nvl2(AIA.PROD_GRP_ID, 1, 0) as PERM_INVESTMENT_ADVICE,\n       nvl2(AMA.PROD_GRP_ID, 1, 0) as PERM_MORTGAGE_ADVICE,\n       nvl2(APA.PROD_GRP_ID, 1, 0) as PERM_INSURANCE_ADVICE,\n       nvl2(RP.PERMISSION_TYPE_ID, 1, 0) as PERM_PENSION_ADVICE,\n       HA.ADDRESS_LINE_1,\n       HA.ADDRESS_LINE_2,\n       HA.ADDRESS_LINE_3,\n       HA.ADDRESS_LINE_4,\n       HA.POSTCODE,\n       HE.EMAIL_URL_ADDRESS,\n       HP.PHONE_FAX_NUMBER\n  from PARTY_DETAILS PD\n  left join HEAD_OFFICE HO\n    on (PD.PARTY_ROLE_ID = HO.PARTY_ROLE_ID)\n  left join HO_ADDRESS HA\n    on (HA.PARTY_ROLE_ID = HO.HEAD_OFFICE_PARTY_ROLE_ID)\n  left join PARTY_ROLE_NETWORK PRN\n    on (PRN.RELATED_PARTY_ROLE_ID = PD.PARTY_ROLE_ID)\n  left join AUTHORISATION AIA\n    on (\tAIA.PROD_GRP_ID = 10004\n\t\tand AIA.PARTY_ROLE_ID = case when PD.REGULATION_TYPE_ID = 'rt_apprep' then\n                                  PRN.PARTY_ROLE_ID\n                               else\n                                  PD.PARTY_ROLE_ID \n\t\t\t\t\t\t             end)\n  left join AUTHORISATION AMA\n    on (\t   AMA.PROD_GRP_ID = 10003\n\t\t  and AMA.PARTY_ROLE_ID = case when PD.REGULATION_TYPE_ID = 'rt_apprep' then\n                                   PRN.PARTY_ROLE_ID\n                                 else\n                                   PD.PARTY_ROLE_ID \n\t\t\t\t\t\t               end)\n  left join AUTHORISATION APA\n    on (\t   APA.PROD_GRP_ID = 10002\n\t\t  and APA.PARTY_ROLE_ID = case when PD.REGULATION_TYPE_ID = 'rt_apprep' then\n                                   PRN.PARTY_ROLE_ID\n                                  else PD.PARTY_ROLE_ID \n\t\t\t\t\t\t              end)\n  left join ROLE_PERMISSION RP\n    on (RP.PARTY_ROLE_ID = case when PD.REGULATION_TYPE_ID = 'rt_apprep' then\n                                  PRN.PARTY_ROLE_ID\n                            else PD.PARTY_ROLE_ID \n\t\t\t\t\t\t         end)\n  left join HO_PHONE HP\n    on (HP.PARTY_ROLE_ID = HO.HEAD_OFFICE_PARTY_ROLE_ID)\n  left join HO_EMAIL HE\n    on (HE.PARTY_ROLE_ID = HO.HEAD_OFFICE_PARTY_ROLE_ID);",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORGANISATION_NAME",
											"type": "String"
										},
										"sink": {
											"name": "ORGANISATION_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REGULATORY_STATUS_ID",
											"type": "String"
										},
										"sink": {
											"name": "REGULATORY_STATUS_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERM_INVESTMENT_ADVICE",
											"type": "Double"
										},
										"sink": {
											"name": "PERM_INVESTMENT_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PERM_MORTGAGE_ADVICE",
											"type": "Double"
										},
										"sink": {
											"name": "PERM_MORTGAGE_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PERM_INSURANCE_ADVICE",
											"type": "Double"
										},
										"sink": {
											"name": "PERM_INSURANCE_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PERM_PENSION_ADVICE",
											"type": "Double"
										},
										"sink": {
											"name": "PERM_PENSION_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_1",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_2",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_3",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_4",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "DPARTNER",
									"Table": "PARTY",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_FIRM_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_ADVISER_FIRM_STG_Upsert",
						"description": "compares transient table with staging table to identify new/updated records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_ADVISER_FIRM_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CREATE_USER_ID",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select TDAFS.PARTY_ROLE_ID,\n       TDAFS.ORGANISATION_NAME,\n       TDAFS.FIRM_REFERENCE_NUMBER,\n       TDAFS.STATUS,\n       TDAFS.REGULATORY_STATUS_ID,\n       TDAFS.PARTY_ROLE_TYPE_ID,\n       TDAFS.PERM_INVESTMENT_ADVICE,\n       TDAFS.PERM_MORTGAGE_ADVICE,\n       TDAFS.PERM_INSURANCE_ADVICE,\n       TDAFS.PERM_PENSION_ADVICE,\n       TDAFS.ADDRESS_LINE_1,\n       TDAFS.ADDRESS_LINE_2,\n       TDAFS.ADDRESS_LINE_3,\n       TDAFS.ADDRESS_LINE_4,\n       TDAFS.POSTCODE,\n       TDAFS.EMAIL_URL_ADDRESS,\n       TDAFS.PHONE_FAX_NUMBER,\n       TDAFS.RECORD_UPDATE_IND,\n       0 as RECORD_DELETE_IND,\n       cast(sysdatetimeoffset() at time zone 'GMT STANDARD Time' as datetime) as UPDATE_DATE_TIME\n  from (select PARTY_ROLE_ID,\n\t\t\t         ORGANISATION_NAME,\n\t\t\t         FIRM_REFERENCE_NUMBER,\n\t\t\t         STATUS,\n\t\t\t         REGULATORY_STATUS_ID,\n\t\t\t         PARTY_ROLE_TYPE_ID,\n\t\t\t         PERM_INVESTMENT_ADVICE,\n\t\t\t         PERM_MORTGAGE_ADVICE,\n\t\t\t         PERM_INSURANCE_ADVICE,\n\t\t\t         PERM_PENSION_ADVICE,\n\t\t\t         ADDRESS_LINE_1,\n\t\t\t         ADDRESS_LINE_2,\n\t\t\t         ADDRESS_LINE_3,\n\t\t\t         ADDRESS_LINE_4,\n\t\t\t         POSTCODE,\n\t\t\t         EMAIL_URL_ADDRESS,\n\t\t\t         PHONE_FAX_NUMBER,\n\t\t\t         convert(nvarchar(32), HashBytes('sha2_256', concat(PARTY_ROLE_ID,\n                                                                    ORGANISATION_NAME,\n                                                                    FIRM_REFERENCE_NUMBER,\n                                                                    STATUS,\n                                                                    REGULATORY_STATUS_ID,\n                                                                    PARTY_ROLE_TYPE_ID,\n                                                                    PERM_INVESTMENT_ADVICE,\n                                                                    PERM_MORTGAGE_ADVICE,\n                                                                    PERM_INSURANCE_ADVICE,\n                                                                    PERM_PENSION_ADVICE,\n                                                                    ADDRESS_LINE_1,\n                                                                    ADDRESS_LINE_2,\n                                                                    ADDRESS_LINE_3,\n                                                                    ADDRESS_LINE_4,\n                                                                    POSTCODE,\n                                                                    EMAIL_URL_ADDRESS,\n                                                                    PHONE_FAX_NUMBER)), 2) as RECORD_UPDATE_IND\n\t\t     from STAGE_LOAD.TD_DPDB_ADVISER_FIRM_STG\n\t\t    )TDAFS\n  left outer join STAGE_CDI.DPDB_ADVISER_FIRM_STG DAFS\n    on (\t TDAFS.PARTY_ROLE_ID = DAFS.PARTY_ROLE_ID\n\t\t   and TDAFS.RECORD_UPDATE_IND = DAFS.RECORD_UPDATE_IND)\n where DAFS.PARTY_ROLE_ID is null;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PARTY_ROLE_ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORGANISATION_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORGANISATION_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REGULATORY_STATUS_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REGULATORY_STATUS_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERM_INVESTMENT_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PERM_INVESTMENT_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PERM_MORTGAGE_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PERM_MORTGAGE_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PERM_INSURANCE_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PERM_INSURANCE_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PERM_PENSION_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PERM_PENSION_ADVICE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CREATE_USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "CREATE_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_FIRM_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_FIRM_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_ADVISER_FIRM_STG_Del",
						"description": "compares transient table with staging table to identify deleted records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_FIRM_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select DAFS.PARTY_ROLE_ID,\n       1 as RECORD_DELETE_IND,\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from STAGE_CDI.DPDB_ADVISER_FIRM_STG DAFS\n  left outer join STAGE_LOAD.TD_DPDB_ADVISER_FIRM_STG TDAFS\n    on (TDAFS.PARTY_ROLE_ID = DAFS.PARTY_ROLE_ID)\n where TDAFS.PARTY_ROLE_ID is null",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PARTY_ROLE_ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_FIRM_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_FIRM_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "sp-TRUNCATE-TD_DPDB_ADVISER_FIRM_STG",
						"description": "This step truncates the transient table, TD_DPDB_ADVISER_FIRM_STG.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_LOAD].[PRC_TRUNCATE_TD_TABLE]",
							"storedProcedureParameters": {
								"p_table_name": {
									"value": {
										"value": "TD_DPDB_ADVISER_FIRM_STG",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-TD_DPDB_ADVISER_FIRM_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_ADVISER_FIRM_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_FIRM_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_FIRM_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_FIRM_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_FIRM_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_FIRM_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_FIRM_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "TD_DPDB_ADVISER_FIRM_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_FIRM_STG_Upsert",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_FIRM_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_ADVISER_FIRM_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_FIRM_STG_Del",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_FIRM_STG_Del",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_FIRM_STG_Upsert').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_ADVISER_FIRM_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-19T18:04:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_DPDB')]",
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_DPDB-CDI-DPDB_ADVISER_OFFICE_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 29/05/2023\nDescription : pulls data from oracle tables and loads into transient table. Compares transient table with staging table to identify new/updated records in the target/staging table and load target table.",
				"activities": [
					{
						"name": "cd-TD_DPDB_ADVISER_OFFICE_STG",
						"description": "pulls data from oracle tables, loads into transient table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp-TRUNCATE-TD_DPDB_ADVISER_OFFICE_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "with ADVISER_OFFICE\nas\n(select PR.PARTY_ROLE_ID,\n        PR.PARTY_ROLE_TYPE_ID,\n        OPR.STATUS,\n        OPR.PARTY_ROLE_NAME\n   from PARTY P\n  inner join PARTY_ROLE PR\n     on (PR.PARTY_ID = P.PARTY_ID)\n  inner join ORGANISATION_PARTY_ROLE OPR\n     on (OPR.PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  where PR.PARTY_ROLE_TYPE_ID in ( 'adv_off', 'head_off', 'par_off','par_hoff', 'os_off', 'os_hoff', 'sp_off', 'sp_hoff' )\n    and OPR.party_role_id in\n          (select distinct \n                  CA.PARTY_ROLE_ID\n             from COMMISSION_ACCOUNT CA\n            inner join LEGACY_ACCOUNT_DETAIL LAD\n               on (LAD.COMMISSION_ACCOUNT_ID = CA.COMMISSION_ACCOUNT_ID)\n            where LAD.ACCOUNT_TYPE_ID = 'at_commto_sonata'\n              and (\t   LAD.ACCOUNT_TYPE_ID = 'at_commto_sonata' \n                    or LAD.LEGACY_SYSTEM_ID <> 'ls_sonata'\n                  )\n          )\n),\nADDRESS\nas\n(select ADDRESS.PARTY_ROLE_ID,\n        ADDRESS.UPDATED_DATE,\n        ADDRESS.ADDRESS_LINE_1,\n        ADDRESS.ADDRESS_LINE_2,\n        ADDRESS.ADDRESS_LINE_3,\n        ADDRESS.ADDRESS_LINE_4,\n        ADDRESS.POSTCODE\n  from (select CPR.PARTY_ROLE_ID       as PARTY_ROLE_ID,\n               CPR.UPDATED_DATE        as UPDATED_DATE,\n               trim(PA.ADDRESS_LINE_1) as ADDRESS_LINE_1,\n               trim(PA.ADDRESS_LINE_2) as ADDRESS_LINE_2,\n               trim(PA.ADDRESS_LINE_3) as ADDRESS_LINE_3,\n               trim(PA.ADDRESS_LINE_4) as ADDRESS_LINE_4,\n               trim(PA.POSTCODE) as POSTCODE,\n               row_number() over (partition by CPR.PARTY_ROLE_ID\n                                      order by CPR.UPDATED_DATE desc) RN\n          from CONTACT_POINT_ROLE CPR\n\t\t inner join CONTACT_POINT CP\n            on (CPR.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n\t\t inner join POSTAL_ADDRESS PA\n            on (CP.CONTACT_POINT_ID = PA.CONTACT_POINT_ID)\n         where CPR.END_DATE IS NULL\n           and CP.CONTACT_POINT_TYPE_ID = 'cp_addr'\n           and nvl(CPR.CONTACT_POINT_ROLE_TYPE_ID, 'A') <> 'cpr_rig'\n        ) ADDRESS\n  where ADDRESS.RN = 1\n),\nEMAIL\nas\n(select EMAIL.PARTY_ROLE_ID,\n        EMAIL.EMAIL_URL_ADDRESS\n   from (select CPR.PARTY_ROLE_ID,\n                trim(EUA.EMAIL_URL_ADDRESS) as EMAIL_URL_ADDRESS,\n                row_number() over (partition by CPR.PARTY_ROLE_ID\n                                       order by CPR.UPDATED_DATE desc) RN\n           from CONTACT_POINT_ROLE CPR\n          inner join CONTACT_POINT CP\n             on (CP.CONTACT_POINT_ID = CPR.CONTACT_POINT_ID)\n          inner join EMAIL_URL_ADDRESS EUA\n             on (EUA.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n          where CPR.END_DATE is null\n            and CP.CONTACT_POINT_TYPE_ID = 'cp_email'\n        ) EMAIL\n  where EMAIL.RN = 1\n),\nPHONE\nas\n(select PHONE.PARTY_ROLE_ID,\n        PHONE.PHONE_FAX_NUMBER\n   from (select CPR.PARTY_ROLE_ID,\n                PFN.PHONE_FAX_NUMBER,\n                row_number() over (partition by CPR.PARTY_ROLE_ID\n                                       order by CPR.UPDATED_DATE desc) RN\n           from CONTACT_POINT_ROLE CPR\n          inner join CONTACT_POINT CP\n             on (CP.CONTACT_POINT_ID = CPR.CONTACT_POINT_ID)\n          inner join PHONE_FAX_NUMBER PFN\n             on (PFN.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n          where CPR.END_DATE is null\n            and CP.CONTACT_POINT_TYPE_ID = 'cp_phone'\n        ) PHONE\n where PHONE.RN = 1\n),\nRELATED_PARTY\nas\n(select PARTY_ROLE_ID\n   from PARTY_ROLE_RELATIONSHIP\n  where relationship_type_id='rel_afoff'\n    and end_date is null\n)\nselect AO.PARTY_ROLE_ID,\n       AO.PARTY_ROLE_TYPE_ID,\n       AO.STATUS,\n       AO.PARTY_ROLE_NAME,\n       AD.UPDATED_DATE,\n       AD.ADDRESS_LINE_1,\n       AD.ADDRESS_LINE_2,\n       AD.ADDRESS_LINE_3,\n       AD.ADDRESS_LINE_4,\n       AD.POSTCODE,\n       EM.EMAIL_URL_ADDRESS,\n       PH.PHONE_FAX_NUMBER,\n       RP.PARTY_ROLE_ID as FIRM_PARTY_ROLE_ID\n  from ADVISER_OFFICE AO\n  left join ADDRESS AD\n    on (AO.PARTY_ROLE_ID = AD.PARTY_ROLE_ID)\n  left join EMAIL EM\n    on (AO.PARTY_ROLE_ID = EM.PARTY_ROLE_ID)\n  left join PHONE PH\n    on (AO.PARTY_ROLE_ID = PH.PARTY_ROLE_ID)\n  left join RELATED_PARTY RP\n    on (AO.PARTY_ROLE_ID = RP.PARTY_ROLE_ID)\n;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UPDATED_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "UPDATED_DATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_1",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_2",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_3",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_4",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "DPARTNER",
									"Table": "PARTY",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_OFFICE_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_ADVISER_OFFICE_STG_Upsert",
						"description": "compares transient table with staging table to identify new/updated records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_ADVISER_OFFICE_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CREATE_USER_ID",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select TDAOS.PARTY_ROLE_ID,\n       TDAOS.PARTY_ROLE_TYPE_ID,\n       TDAOS.STATUS,\n       TDAOS.PARTY_ROLE_NAME,\n       TDAOS.ADDRESS_LINE_1,\n       TDAOS.ADDRESS_LINE_2,\n       TDAOS.ADDRESS_LINE_3,\n       TDAOS.ADDRESS_LINE_4,\n       TDAOS.POSTCODE,\n       TDAOS.EMAIL_URL_ADDRESS,\n       TDAOS.PHONE_FAX_NUMBER,\n       TDAOS.RECORD_UPDATE_IND,\n       0 as RECORD_DELETE_IND,\n       TDAOS.FIRM_PARTY_ROLE_ID,\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from (select ORGANISATION_NAME,\n               PARTY_ROLE_ID,\n               PARTY_ROLE_TYPE_ID,\n               STATUS,\n               PARTY_ROLE_NAME,\n               UPDATED_DATE,\n               ADDRESS_LINE_1,\n               ADDRESS_LINE_2,\n               ADDRESS_LINE_3,\n               ADDRESS_LINE_4,\n               POSTCODE,\n               EMAIL_URL_ADDRESS,\n               PHONE_FAX_NUMBER,\n               FIRM_PARTY_ROLE_ID,\n               convert(nvarchar(32), HashBytes('SHA2_256', concat(PARTY_ROLE_NAME,\n                                                                  STATUS,\n                                                                  PARTY_ROLE_TYPE_ID,\n                                                                  ADDRESS_LINE_1,\n                                                                  ADDRESS_LINE_2,\n                                                                  ADDRESS_LINE_3,\n                                                                  ADDRESS_LINE_4,\n                                                                  POSTCODE,\n                                                                  EMAIL_URL_ADDRESS,\n                                                                  PHONE_FAX_NUMBER)), 2) as RECORD_UPDATE_IND\n          from STAGE_LOAD.TD_DPDB_ADVISER_OFFICE_STG\n        ) TDAOS\n  left join STAGE_CDI.DPDB_ADVISER_OFFICE_STG DAOS\n    on (\tTDAOS.PARTY_ROLE_ID = DAOS.PARTY_ROLE_ID\n\t\tand TDAOS.RECORD_UPDATE_IND = DAOS.RECORD_UPDATE_IND)\n where DAOS.PARTY_ROLE_ID is null;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PARTY_ROLE_ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "CREATE_USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "CREATE_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_OFFICE_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_OFFICE_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_ADVISER_OFFICE_STG_Del",
						"description": "compares transient table with staging table to identify deleted records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_OFFICE_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select DAOS.PARTY_ROLE_ID,\n       1 as RECORD_DELETE_IND,\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from STAGE_CDI.DPDB_ADVISER_OFFICE_STG DAOS\n  left outer join STAGE_LOAD.TD_DPDB_ADVISER_OFFICE_STG TDAOS\n    on (TDAOS.PARTY_ROLE_ID = DAOS.PARTY_ROLE_ID)\n where TDAOS.PARTY_ROLE_ID is NULL;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PARTY_ROLE_ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_OFFICE_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_OFFICE_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "sp-TRUNCATE-TD_DPDB_ADVISER_OFFICE_STG",
						"description": "This step truncates the transient table,TD_DPDB_ADVISER_OFFICE_STG.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_LOAD].[PRC_TRUNCATE_TD_TABLE]",
							"storedProcedureParameters": {
								"p_table_name": {
									"value": "TD_DPDB_ADVISER_OFFICE_STG",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-TD_DPDB_ADVISER_NETWORK_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_ADVISER_OFFICE_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_OFFICE_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "TD_DPDB_ADVISER_OFFICE_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_OFFICE_STG_Upsert",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_OFFICE_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Upsert').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_ADVISER_OFFICE_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_OFFICE_STG_Del",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_OFFICE_STG_Del",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_OFFICE_STG_Del').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_ADVISER_OFFICE_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-20T06:28:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_DPDB')]",
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_DPDB-CDI-DPDB_CRM_REGISTERED_INDIVIDUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 29/05/2023\nDescription : pulls data from oracle tables and loads into transient table. Compares transient table with staging DPDB_REGISTERED_INDIVIDUAL_STG table to identify new/updated records in the target/staging table and load target table.",
				"activities": [
					{
						"name": "cd-TD_DPDB_REGISTERED_INDIVIDUAL_STG",
						"description": "Name - NextPathway\nDate - 29/05/2023\nDescription - pulls data from oracle tables, loads into transient table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp-TRUNCATE-TD_DPDB_REGISTERED_INDIVIDUAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "TD_DPDB_REGISTERED_INDIVIDUAL_STG"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": {
									"value": "with PARTY_DETAILS\nas\n(select P.TITLE_ID ,\n\t\tP.FORENAME ,\n\t\tP.MIDDLE_NAMES ,\n\t\tP.SURNAME ,\n\t\tP.GENDER ,\n\t\tP.ORGANISATION_NAME ,\n\t\tPR.PARTY_ROLE_ID ,\n\t\tIPR.INDIVIDUAL_REFERENCE_NUMBER ,\n\t\tIPR.JOB_TITLE_ID ,\n\t\tIPR.STATUS ,\n\t\tCA.COMMISSION_ACCOUNT_ID ,\n\t\tCA.PARTY_ROLE_ID as OFFICE_PARTY_ROLE_ID ,\n\t\tLAD.ACCOUNT_NUMBER ,\n\t\tLAD.ACCOUNT_STATUS ,\n\t\tLAD.ACCOUNT_TYPE_ID ,\n\t\tLAD.LEGACY_SYSTEM_ID \n   from PARTY P\n  inner join PARTY_ROLE PR\n\t on (P.PARTY_ID = PR.PARTY_ID)\n  inner join INDIVIDUAL_PARTY_ROLE IPR\n     on (PR.PARTY_ROLE_ID = IPR.PARTY_ROLE_ID)\n  inner join COMMISSION_ACCOUNT CA\n\t on (IPR.PARTY_ROLE_ID = CA.INDIVIDUAL_PARTY_ROLE_ID)\n  inner join LEGACY_ACCOUNT_DETAIL LAD\n\t on (CA.COMMISSION_ACCOUNT_ID = LAD.COMMISSION_ACCOUNT_ID)\n  where PR.PARTY_ROLE_TYPE_ID in ( 'sp_emp', 'af_emp', 'par_emp' ) \n\tand IPR.JOB_TITLE_ID ='jt_ri' \n),\nHO_ADDRESS\nas\n(select ADDRESS.PARTY_ROLE_ID,\n\t\tADDRESS.UPDATED_DATE,\n\t\tADDRESS.ADDRESS_LINE_1,\n\t\tADDRESS.ADDRESS_LINE_2,\n\t\tADDRESS.ADDRESS_LINE_3,\n\t\tADDRESS.ADDRESS_LINE_4,\n\t\tADDRESS.POSTCODE\n   from (select CPR.PARTY_ROLE_ID,\n\t\t\t\tCPR.UPDATED_DATE,\n\t\t\t\ttrim(PA.ADDRESS_LINE_1) as ADDRESS_LINE_1,\n\t\t\t\ttrim(PA.ADDRESS_LINE_2) as ADDRESS_LINE_2,\n\t\t\t\ttrim(PA.ADDRESS_LINE_3) as ADDRESS_LINE_3,\n\t\t\t\ttrim(PA.ADDRESS_LINE_4) as ADDRESS_LINE_4,\n\t\t\t\ttrim(PA.POSTCODE) as POSTCODE,\n\t\t\t\trow_number() over (partition by CPR.PARTY_ROLE_ID\n\t\t\t\torder by CPR.UPDATED_DATE desc) RN\n\t\t   from PARTY_ROLE PR\n\t\t  inner join CONTACT_POINT_ROLE CPR\n\t\t\t on (PR.PARTY_ROLE_ID = CPR.PARTY_ROLE_ID) \n\t\t  inner join CONTACT_POINT CP\n\t\t\t on (CP.CONTACT_POINT_ID = CPR.CONTACT_POINT_ID)\n\t\t  inner join POSTAL_ADDRESS PA\n\t\t\t on (PA.CONTACT_POINT_ID = CP.CONTACT_POINT_ID)\n\t\t  where CPR.END_DATE is null\n\t\t\tand CP.CONTACT_POINT_TYPE_ID = 'cp_addr'\n\t\t\tand nvl(CPR.CONTACT_POINT_ROLE_TYPE_ID, 'A') != 'cpr_rig'\n\t\t) ADDRESS\n  where ADDRESS.RN = 1\n),\nHEAD_OFFICE\nas\n(select PRR.PARTY_ROLE_ID,\n\t\tPRR.RELATED_PARTY_ROLE_ID as HEAD_OFFICE_PARTY_ROLE_ID,\n\t\tPRR.RELATIONSHIP_TYPE_ID as HEAD_OFFICE_RELATIONSHIP_TYPE_ID\n   from PARTY_ROLE_RELATIONSHIP PRR\n  inner join PARTY_ROLE PR\n\t on (PRR.RELATED_PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  where PRR.RELATIONSHIP_TYPE_ID = 'rel_afoff'\n\tand PRR.END_DATE is null\n),\nHO_ORG_ROLE\nas\n(select OPR.FIRM_REFERENCE_NUMBER,\n\t\tOPR.PARTY_ROLE_ID as ORGANISATION_PARTY_ROLE_ID\n   from PARTY_ROLE PR\n  inner join ORGANISATION_PARTY_ROLE OPR\n\t on (OPR.PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n),\nHEAD_OFFICE_REL\nas\n(select PRR.PARTY_ROLE_ID,\n\t\tPRR.RELATED_PARTY_ROLE_ID as HEAD_OFFICE_REL_PARTY_ROLE_ID,\n\t\tPRR.RELATIONSHIP_TYPE_ID as HEAD_OFFICE_REL_RELATIONSHIP_TYPE_ID\n   from PARTY_ROLE_RELATIONSHIP PRR\n  inner join PARTY_ROLE PR\n\t on (PRR.RELATED_PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  where PRR.RELATIONSHIP_TYPE_ID  ='rel_offafe'\n\tand PRR.END_DATE is null\n)\nselect PD.ACCOUNT_NUMBER,\n\t   PD.PARTY_ROLE_ID, \n\t   PD.OFFICE_PARTY_ROLE_ID,\n \t   case \n\t   \twhen HO.PARTY_ROLE_ID is not null then\n\t   \tHO.PARTY_ROLE_ID\n \t   else\n\t   \t'0'\n \t   end as FIRM_PARTY_ROLE_ID,\n \t   case \n\t   \twhen HOR.PARTY_ROLE_ID is not null then\n\t   \tHOR.PARTY_ROLE_ID\n \t   else\n\t   \t'0'\n \t   end as REL_OFFICE_PARTY_ROLE_ID,\n \t   case \n\t   \twhen HOR.PARTY_ROLE_ID is not null and \n\t   \tHO.PARTY_ROLE_ID is not null then\n\t   \tHOR.PARTY_ROLE_ID\n \t   else\n\t   \t'0'\n \t   end as REL_FIRM_PARTY_ROLE_ID,\n \t   PD.TITLE_ID,\n \t   PD.FORENAME,\n \t   PD.SURNAME,\n \t   PD.INDIVIDUAL_REFERENCE_NUMBER,\n \t   PD.STATUS,\n \t   HORGR.FIRM_REFERENCE_NUMBER,\n \t   PD.ACCOUNT_STATUS,\n \t   PD.JOB_TITLE_ID,\n \t   HA.ADDRESS_LINE_1,\n \t   HA.ADDRESS_LINE_2,\n \t   HA.ADDRESS_LINE_3,\n \t   HA.ADDRESS_LINE_4,\n \t   HA.POSTCODE,\n \t   PD.ACCOUNT_TYPE_ID ,\n \t   PD.LEGACY_SYSTEM_ID\n  from PARTY_DETAILS PD\n  left outer join HEAD_OFFICE HO\n\ton (PD.OFFICE_PARTY_ROLE_ID = HO.PARTY_ROLE_ID)\n  left outer join HEAD_OFFICE_REL HOR\n\ton (PD.OFFICE_PARTY_ROLE_ID = HOR.PARTY_ROLE_ID)\n  left outer join HO_ORG_ROLE HORGR\n\ton (PD.PARTY_ROLE_ID = HORGR.ORGANISATION_PARTY_ROLE_ID)\n  left outer join HO_ADDRESS HA\n\ton (HA.PARTY_ROLE_ID = PD.PARTY_ROLE_ID)",
									"type": "Expression"
								},
								"partitionOption": "None",
								"convertDecimalToInteger": false,
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OFFICE_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "OFFICE_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REL_OFFICE_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "REL_OFFICE_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TITLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "TITLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FORENAME",
											"type": "String"
										},
										"sink": {
											"name": "FORENAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SURNAME",
											"type": "String"
										},
										"sink": {
											"name": "SURNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INDIVIDUAL_REFERENCE_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "INDIVIDUAL_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JOB_TITLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "JOB_TITLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_1",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_2",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_3",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_4",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LEGACY_SYSTEM_ID",
											"type": "String"
										},
										"sink": {
											"name": "LEGACY_SYSTEM_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_TYPE_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": false,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "DPARTNER",
									"Table": "PARTY",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_REGISTERED_INDIVIDUAL_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_REGISTERED_INDIVIDUAL_STG_Upsert",
						"description": "Name - NextPathway\nDate - 29/05/2023 \nDescription - compares transient table with staging table to identify new/updated records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_REGISTERED_INDIVIDUAL_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_LOAD.TD_DPDB_REGISTERED_INDIVIDUAL_STG"
							},
							{
								"name": "Destination",
								"value": "STAGE_CDI.DPDB_REGISTERED_INDIVIDUAL_STG"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CREATE_USER_ID",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "select TDRIS.ACCOUNT_NUMBER,\n\t   TDRIS.PARTY_ROLE_ID, \n\t   TDRIS.OFFICE_PARTY_ROLE_ID,\n\t   TDRIS.FIRM_PARTY_ROLE_ID,\n\t   TDRIS.REL_OFFICE_PARTY_ROLE_ID,\n\t   TDRIS.REL_FIRM_PARTY_ROLE_ID,\n\t   TDRIS.TITLE_ID,\n\t   TDRIS.FORENAME,\n\t   TDRIS.SURNAME,\n\t   TDRIS.INDIVIDUAL_REFERENCE_NUMBER,\n\t   TDRIS.STATUS,\n\t   TDRIS.FIRM_REFERENCE_NUMBER,\n\t   TDRIS.ACCOUNT_STATUS,\n\t   TDRIS.JOB_TITLE_ID,\n\t   TDRIS.ADDRESS_LINE_1,\n\t   TDRIS.ADDRESS_LINE_2,\n\t   TDRIS.ADDRESS_LINE_3,\n\t   TDRIS.ADDRESS_LINE_4,\n\t   TDRIS.POSTCODE,\n\t   TDRIS.ACCOUNT_TYPE_ID ,\n\t   TDRIS.LEGACY_SYSTEM_ID,\n\t   TDRIS.RECORD_UPDATE_IND,\n\t   0 as RECORD_DELETE_IND,\n\t   cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as INSERT_DATE_TIME,\n\t   cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from (select ACCOUNT_NUMBER,\n\t\t\t   PARTY_ROLE_ID, \n\t\t\t   OFFICE_PARTY_ROLE_ID,\n\t\t\t   FIRM_PARTY_ROLE_ID,\n\t\t\t   REL_OFFICE_PARTY_ROLE_ID,\n\t\t\t   REL_FIRM_PARTY_ROLE_ID,\n\t\t\t   TITLE_ID,\n\t\t\t   FORENAME,\n\t\t\t   SURNAME,\n\t\t\t   INDIVIDUAL_REFERENCE_NUMBER,\n\t\t\t   STATUS,\n\t\t\t   FIRM_REFERENCE_NUMBER,\n\t\t\t   ACCOUNT_STATUS,\n\t\t\t   JOB_TITLE_ID,\n\t\t\t   ADDRESS_LINE_1,\n\t\t\t   ADDRESS_LINE_2,\n\t\t\t   ADDRESS_LINE_3,\n\t\t\t   ADDRESS_LINE_4,\n\t\t\t   POSTCODE,\n\t\t\t   ACCOUNT_TYPE_ID ,\n\t\t\t   LEGACY_SYSTEM_ID,\n\t\t\t   convert(nvarchar(32), HashBytes('SHA2_256', concat(ACCOUNT_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  PARTY_ROLE_ID, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  OFFICE_PARTY_ROLE_ID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  FIRM_PARTY_ROLE_ID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  REL_OFFICE_PARTY_ROLE_ID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  REL_FIRM_PARTY_ROLE_ID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  TITLE_ID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  FORENAME,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  SURNAME,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  INDIVIDUAL_REFERENCE_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  STATUS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  FIRM_REFERENCE_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ACCOUNT_STATUS,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  JOB_TITLE_ID,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ADDRESS_LINE_1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ADDRESS_LINE_2,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ADDRESS_LINE_3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ADDRESS_LINE_4,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  POSTCODE,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  ACCOUNT_TYPE_ID ,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  LEGACY_SYSTEM_ID)), 2) as RECORD_UPDATE_IND\n\t\t from STAGE_LOAD.TD_DPDB_REGISTERED_INDIVIDUAL_STG \n\t\t) TDRIS\n  left outer join STAGE_CDI.DPDB_REGISTERED_INDIVIDUAL_STG DRIS\n    on (\tTDRIS.ACCOUNT_NUMBER = DRIS.ACCOUNT_NUMBER\n\t\tand TDRIS.RECORD_UPDATE_IND = DRIS.RECORD_UPDATE_IND)\n where DRIS.ACCOUNT_NUMBER is null",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ACCOUNT_NUMBER"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OFFICE_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OFFICE_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REL_OFFICE_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REL_OFFICE_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TITLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TITLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FORENAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FORENAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SURNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SURNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INDIVIDUAL_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "INDIVIDUAL_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCOUNT_STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JOB_TITLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "JOB_TITLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "CREATE_USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "CREATE_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INSERT_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "INSERT_DATE_TIME",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "LEGACY_SYSTEM_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LEGACY_SYSTEM_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCOUNT_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_REGISTERED_INDIVIDUAL_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_REGISTERED_INDIVIDUAL_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_REGISTERED_INDIVIDUAL_STG_Del",
						"description": "Name - NextPathway\nDate - 29/05/2023\nDescription - compares transient table with staging table to identify deleted records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-DPDB_REGISTERED_INDIVIDUAL_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select DRIS.ACCOUNT_NUMBER,\n\t     1 as RECORD_DELETE_IND,\n\t     cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from STAGE_CDI.DPDB_REGISTERED_INDIVIDUAL_STG DRIS\n  left outer join STAGE_LOAD.TD_DPDB_REGISTERED_INDIVIDUAL_STG TDRIS\n    on (TDRIS.ACCOUNT_NUMBER = DRIS.ACCOUNT_NUMBER)\n where TDRIS.ACCOUNT_NUMBER is NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ACCOUNT_NUMBER"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_REGISTERED_INDIVIDUAL_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_REGISTERED_INDIVIDUAL_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "sp-TRUNCATE-TD_DPDB_REGISTERED_INDIVIDUAL",
						"description": "This step truncates the transient table, TD_DPDB_REGISTERED_INDIVIDUAL.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_LOAD].[PRC_TRUNCATE_TD_TABLE]",
							"storedProcedureParameters": {
								"p_table_name": {
									"value": "TD_DPDB_REGISTERED_INDIVIDUAL_STG",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-TD_DPDB_REGISTERED_INDIVIDUAL_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_REGISTERED_INDIVIDUAL_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_REGISTERED_INDIVIDUAL_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-TD_DPDB_REGISTERED_INDIVIDUAL_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_REGISTERED_INDIVIDUAL_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-TD_DPDB_REGISTERED_INDIVIDUAL_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-TD_DPDB_REGISTERED_INDIVIDUAL_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-TD_DPDB_REGISTERED_INDIVIDUAL_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "TD_DPDB_REGISTERED_INDIVIDUAL_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_REGISTERED_INDIVIDUAL_STG_U",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_REGISTERED_INDIVIDUAL_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Upsert').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Upsert').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Upsert').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Upsert').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Upsert').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Upsert').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_REGISTERED_INDIVIDUAL_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_REGISTERED_INDIVIDUAL_STG_D",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_REGISTERED_INDIVIDUAL_STG_Del",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Del').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Del').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Del').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Del').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Del').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_REGISTERED_INDIVIDUAL_STG_Del').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_REGISTERED_INDIVIDUAL_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-20T06:33:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_DPDB')]",
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_DPDB-CDI-DPDB_ADVISER_LEGACY_AGENCY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 01/06/2023\nDescription : pulls data from oracle tables and loads into transient table. Compares transient table with staging table to identify new/updated records in the target/staging table and load target table.",
				"activities": [
					{
						"name": "sp-TRUNCATE-TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
						"description": "This step truncates the transient table, TD_DPDB_ADVISER_LEGACY_AGENCY_STG.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_LOAD].[PRC_TRUNCATE_TD_TABLE]",
							"storedProcedureParameters": {
								"p_table_name": {
									"value": "TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "cd-TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
						"description": "pulls data from oracle tables, loads into transient table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp-TRUNCATE-TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "with LEGACY_AGENCY\nas\n(select P.ORGANISATION_NAME,\n        PR.PARTY_ROLE_TYPE_ID,\n        PR.PARTY_ROLE_ID as OFFICE_PARTY_ROLE_ID,\n        OPR.STATUS,\n        OPR.PARTY_ROLE_NAME,\n        CA.COMMISSION_ACCOUNT_ID,\n        CA.SALES_AGREEMENT_ID,\n        CA.TEST_ACCOUNT,\n        CA.INDIVIDUAL_PARTY_ROLE_ID,\n        LAD.LEGACY_SYSTEM_ID,\n        LAD.ACCOUNT_NUMBER,\n        LAD.ACCOUNT_STATUS,\n        LAD.ACCOUNT_TYPE_ID\n   from PARTY P\n  inner join PARTY_ROLE PR\n     on (PR.PARTY_ID = P.PARTY_ID)\n  inner join ORGANISATION_PARTY_ROLE OPR\n     on (OPR.PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  inner join COMMISSION_ACCOUNT CA\n     on (CA.PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  inner join LEGACY_ACCOUNT_DETAIL LAD\n     on (LAD.COMMISSION_ACCOUNT_ID = CA.COMMISSION_ACCOUNT_ID)\n  where LAD.ACCOUNT_TYPE_ID != 'at_commto_sonata'\n),\nRELATED_PARTY\nas\n(select PRR.PARTY_ROLE_ID,\n        PRR.RELATED_PARTY_ROLE_ID\n   from PARTY_ROLE_RELATIONSHIP PRR\n  where relationship_type_id='rel_afoff' \n    and end_date is null\n)\nselect LA.ORGANISATION_NAME,\n       LA.OFFICE_PARTY_ROLE_ID,\n       RP.PARTY_ROLE_ID as FIRM_PARTY_ROLE_ID,   \n       LA.PARTY_ROLE_TYPE_ID,\n       LA.STATUS,\n       LA.PARTY_ROLE_NAME,\n       LA.TEST_ACCOUNT,\n       LA.INDIVIDUAL_PARTY_ROLE_ID,\n       LA.LEGACY_SYSTEM_ID,\n       LA.ACCOUNT_NUMBER,\n       LA.ACCOUNT_STATUS,\n       LA.ACCOUNT_TYPE_ID,\n       replace(ACCOUNT_NUMBER, '/', '') as o_ACCOUNT_NUMBER\n  from LEGACY_AGENCY LA\n  left join RELATED_PARTY RP \n    on (LA.OFFICE_PARTY_ROLE_ID = RP.RELATED_PARTY_ROLE_ID);",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ORGANISATION_NAME",
											"type": "String"
										},
										"sink": {
											"name": "ORGANISATION_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OFFICE_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "OFFICE_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEST_ACCOUNT",
											"type": "String"
										},
										"sink": {
											"name": "TEST_ACCOUNT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INDIVIDUAL_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "INDIVIDUAL_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LEGACY_SYSTEM_ID",
											"type": "String"
										},
										"sink": {
											"name": "LEGACY_SYSTEM_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_TYPE_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "O_ACCOUNT_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "O_ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "DPARTNER",
									"Table": "PARTY",
									"ENVIRONMENT": "fat",
									"LOGICAL_ENVIRONMENT": "dev",
									"SHORT_LOCATION": "weu"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": {
										"value": "TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
										"type": "Expression"
									},
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Upsert",
						"description": "compares transient table with staging table to identify new/updated records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CREATE_USER_ID",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select TDALAS.ACCOUNT_NUMBER,\n       TDALAS.OFFICE_PARTY_ROLE_ID,\n       TDALAS.FIRM_PARTY_ROLE_ID,\n       TDALAS.ACCOUNT_STATUS,\n       TDALAS.STATUS AS OFFICE_STATUS,\n       TDALAS.PARTY_ROLE_TYPE_ID,\n       TDALAS.INDIVIDUAL_PARTY_ROLE_ID,\n       TDALAS.ACCOUNT_TYPE_ID,\n       TDALAS.LEGACY_SYSTEM_ID,\n       TDALAS.RECORD_UPDATE_IND,\n       0 as RECORD_DELETE_IND,\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from (select ACCOUNT_NUMBER,\n               OFFICE_PARTY_ROLE_ID,\n               STATUS,\n               FIRM_PARTY_ROLE_ID,\n               ACCOUNT_STATUS,\n               ORGANISATION_NAME,\n               PARTY_ROLE_TYPE_ID,\n               INDIVIDUAL_PARTY_ROLE_ID,\n               ACCOUNT_TYPE_ID,\n               LEGACY_SYSTEM_ID,\n               convert(nvarchar(32), HashBytes('SHA2_256', concat(ACCOUNT_NUMBER,\n                                                                  ACCOUNT_STATUS,\n                                                                  ORGANISATION_NAME,\n                                                                  FIRM_PARTY_ROLE_ID,\n                                                                  OFFICE_PARTY_ROLE_ID,\n                                                                  STATUS,\n                                                                  INDIVIDUAL_PARTY_ROLE_ID)),2) as RECORD_UPDATE_IND\n          from STAGE_LOAD.TD_DPDB_ADVISER_LEGACY_AGENCY_STG\n       ) TDALAS\n  left outer join STAGE_CDI.DPDB_ADVISER_LEGACY_AGENCY_STG DALAS\n    on (\t TDALAS.ACCOUNT_NUMBER = DALAS.ACCOUNT_NUMBER\n\t\t   and TDALAS.RECORD_UPDATE_IND = DALAS.RECORD_UPDATE_IND)\n where DALAS.ACCOUNT_NUMBER is null;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ACCOUNT_NUMBER"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OFFICE_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OFFICE_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCOUNT_STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OFFICE_STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OFFICE_STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INDIVIDUAL_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "INDIVIDUAL_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCOUNT_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LEGACY_SYSTEM_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LEGACY_SYSTEM_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "CREATE_USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "CREATE_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_LEGACY_AGENCY_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Del",
						"description": "compares transient table with staging table to identify deleted records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select DALAS.ACCOUNT_NUMBER,\r\n       1 as RECORD_DELETE_IND,\r\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\r\n  from STAGE_CDI.DPDB_ADVISER_LEGACY_AGENCY_STG DALAS\r\n  left outer join STAGE_LOAD.TD_DPDB_ADVISER_LEGACY_AGENCY_STG TDALAS\r\n    on (TDALAS.ACCOUNT_NUMBER = DALAS.ACCOUNT_NUMBER)\r\n where TDALAS.ACCOUNT_NUMBER is null;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ACCOUNT_NUMBER"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_NUMBER"
										},
										"sink": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_LEGACY_AGENCY_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_LEGACY_AGENCY_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_LEGACY_AGENCY_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_LEGACY_AGENCY_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_LEGACY_AGENCY_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_LEGACY_AGENCY_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_LEGACY_AGENCY_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "TD_DPDB_ADVISER_LEGACY_AGENCY_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_LEGACY_AGENCY_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Upsert').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Upsert').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Upsert').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Upsert').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Upsert').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Upsert').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_ADVISER_LEGACY_AGENCY_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_LEGACY_AGENCY_STG_D",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Del",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Del').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Del').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Del').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Del').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Del').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_LEGACY_AGENCY_STG_Del').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_ADVISER_LEGACY_AGENCY_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-20T06:20:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_DPDB')]",
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_DPDB-CDI-DPDB_ADVISER_NETWORK_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 01/06/2023\nDescription : pulls data from oracle tables and loads into transient table. Compares transient table with staging table to identify new/updated records in the target/staging table and load target table.",
				"activities": [
					{
						"name": "sp-TRUNCATE-TD_DPDB_ADVISER_NETWORK_STG",
						"description": "This step truncates the transient table, TD_DPDB_ADVISER_NETWORK_STG.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_LOAD].[PRC_TRUNCATE_TD_TABLE]",
							"storedProcedureParameters": {
								"p_table_name": {
									"value": {
										"value": "TD_DPDB_ADVISER_NETWORK_STG",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": "fat"
							}
						}
					},
					{
						"name": "cd-TD_DPDB_ADVISER_NETWORK_STG",
						"description": "pulls data from oracle tables, loads into transient table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp-TRUNCATE-TD_DPDB_ADVISER_NETWORK_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "with ADVISER_NETWORK\nas\n(select P.ORGANISATION_NAME,\n        PR.PARTY_ROLE_ID,\n        PR.PARTY_ROLE_TYPE_ID,\n        OPR.STATUS,\n        OPR.FIRM_REFERENCE_NUMBER,\n        OPR.REGULATORY_STATUS_ID,\n        OPR.REGULATION_TYPE_ID\n   from PARTY P\n  inner join PARTY_ROLE PR\n     on (PR.PARTY_ID = P.PARTY_ID)\n  inner join ORGANISATION_PARTY_ROLE OPR\n     on (OPR.PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  where PR.PARTY_ROLE_ID in (select PARTY_ROLE_ID\n                               from party_role_relationship\n                              where RELATIONSHIP_TYPE_ID = 'rel_netmem'\n                                and end_date is null\n                            )\n),\nHEAD_OFFICE\nas\n(select PRR.PARTY_ROLE_ID,\n        PRR.RELATED_PARTY_ROLE_ID as HEAD_OFFICE_PARTY_ROLE_ID\n   from PARTY_ROLE_RELATIONSHIP PRR\n  inner join PARTY_ROLE PR\n     on (PRR.RELATED_PARTY_ROLE_ID = PR.PARTY_ROLE_ID)\n  where PRR.RELATIONSHIP_TYPE_ID = 'rel_afoff'\n    and PRR.END_DATE is null\n    and PR.PARTY_ROLE_TYPE_ID = 'head_off'\n),\nHO_ADDRESS\nas\n(select ADDRESS.PARTY_ROLE_ID,\n        ADDRESS.UPDATED_DATE,\n        ADDRESS.ADDRESS_LINE_1,\n        ADDRESS.ADDRESS_LINE_2,\n        ADDRESS.ADDRESS_LINE_3,\n        ADDRESS.ADDRESS_LINE_4,\n        ADDRESS.POSTCODE\n   from (select CPR.PARTY_ROLE_ID as PARTY_ROLE_ID,\n                CPR.UPDATED_DATE  as UPDATED_DATE,\n                trim(PA.ADDRESS_LINE_1) as ADDRESS_LINE_1,\n                trim(PA.ADDRESS_LINE_2) as ADDRESS_LINE_2,\n                trim(PA.ADDRESS_LINE_3) as ADDRESS_LINE_3,\n                trim(PA.ADDRESS_LINE_4) as ADDRESS_LINE_4,\n                trim(PA.POSTCODE) as POSTCODE,\n                row_number() over (partition by CPR.PARTY_ROLE_ID\n                                       order by CPR.UPDATED_DATE desc) RN\n   from PARTY_ROLE PR\n  inner join  CONTACT_POINT_ROLE CPR\n     on (PR.PARTY_ROLE_ID = CPR.PARTY_ROLE_ID)\n  inner join CONTACT_POINT CP\n     on (CPR.CONTACT_POINT_ID=CP.CONTACT_POINT_ID)\n  inner join POSTAL_ADDRESS PA\n     on (CP.CONTACT_POINT_ID=PA.CONTACT_POINT_ID)\n  where CPR.END_DATE is null\n    and CP.contact_point_type_id in('cp_addr')\n    and nvl(CPR.CONTACT_POINT_ROLE_TYPE_ID,'A') != 'cpr_rig'\n    and PR.party_role_type_id in ( 'head_off' ) ) ADDRESS\n  where ADDRESS.RN = 1\n),\nHO_EMAIL\nas\n(select EMAIL.PARTY_ROLE_ID,\n        EMAIL.EMAIL_URL_ADDRESS\n   from (select CPR.PARTY_ROLE_ID as PARTY_ROLE_ID,\n                trim(EUA.EMAIL_URL_ADDRESS) as EMAIL_URL_ADDRESS,\n                row_number() over (partition by CPR.PARTY_ROLE_ID\n                                       order by CPR.UPDATED_DATE desc) RN\n\t\t   from CONTACT_POINT_ROLE CPR\n\t\t  inner join CONTACT_POINT CP\n\t\t   \t on (CPR.CONTACT_POINT_ID=CP.CONTACT_POINT_ID)\n\t\t  inner join EMAIL_URL_ADDRESS EUA\n\t\t   \t on (CP.CONTACT_POINT_ID=EUA.CONTACT_POINT_ID)\n\t\t  inner join PARTY_ROLE PR\n\t\t   \t on (PR.PARTY_ROLE_ID = CPR.PARTY_ROLE_ID)\n\t\t  where CPR.END_DATE is null\n\t\t   \tand CP.contact_point_type_id = 'cp_email'\n\t\t   \tand PR.party_role_type_id = 'head_off'\n\t\t) EMAIL\n  where EMAIL.RN = 1\n),\nHO_PHONE\nas\n(select PHONE.PARTY_ROLE_ID,\n        PHONE.PHONE_FAX_NUMBER\n   from (select CPR.PARTY_ROLE_ID as PARTY_ROLE_ID,\n                PFN.PHONE_FAX_NUMBER as PHONE_FAX_NUMBER,\n                row_number() over (partition by CPR.PARTY_ROLE_ID\n                                       order by CPR.UPDATED_DATE desc) RN\n   from CONTACT_POINT_ROLE CPR\n  inner join CONTACT_POINT CP\n     on (CPR.CONTACT_POINT_ID=CP.CONTACT_POINT_ID)\n  inner join PHONE_FAX_NUMBER PFN\n     on (CP.CONTACT_POINT_ID=PFN.CONTACT_POINT_ID)\n  inner join PARTY_ROLE PR\n     on (PR.PARTY_ROLE_ID = CPR.PARTY_ROLE_ID)\n  where CPR.END_DATE is null\n    and CP.contact_point_type_id in('cp_phone')\n    and PR.party_role_type_id in ( 'head_off' )) PHONE\n  where PHONE.RN = 1\n),\nPARTY_ROLE_NETWORK\nas\n(select PARTY_ROLE_ID,\n        RELATED_PARTY_ROLE_ID\n   from PARTY_ROLE_RELATIONSHIP\n  where RELATIONSHIP_TYPE_ID = 'rel_netmem'\n    and END_DATE is null\n    and DEFAULT_REPORT_RELATIONSHIP = 'Y'\n    and RELATED_PARTY_ROLE_ID in\n          (select PARTY_ROLE_ID\n             from ORGANISATION_PARTY_ROLE\n            where REGULATION_TYPE_ID = 'rt_apprep'\n              and status = 'A'\n           )\n),\nAUTHORISATION\nas\n(select PARTY_ROLE_ID,\n        PROD_GRP_ID,\n        END_DATE\n   from PRODUCT_AUTHORISATION\n  where END_DATE is null \n    and PROD_GRP_ID in (10004,10003,10002)\n),\nROLE_PERMISSION\nas\n(select PARTY_ROLE_ID,\n        PERMISSION_TYPE_ID,\n        END_DATE\n   from PARTY_ROLE_PERMISSIONS\n  where END_DATE is null \n    and PERMISSION_TYPE_ID='prp_penstrans'\n )\nselect AN.PARTY_ROLE_ID,\n       AN.ORGANISATION_NAME,\n       AN.FIRM_REFERENCE_NUMBER,\n       AN.STATUS,\n       AN.REGULATORY_STATUS_ID,\n       AN.PARTY_ROLE_TYPE_ID,\n       nvl2(AIA.PROD_GRP_ID, 1, 0) as PERM_INVESTMENT_ADVICE,\n       nvl2(AMA.PROD_GRP_ID, 1, 0) as PERM_MORTGAGE_ADVICE,\n       nvl2(APA.PROD_GRP_ID, 1, 0) as PERM_INSURANCE_ADVICE,\n       nvl2(RP.PERMISSION_TYPE_ID, 1, 0) as PERM_PENSION_ADVICE,\n       HA.ADDRESS_LINE_1,\n       HA.ADDRESS_LINE_2,\n       HA.ADDRESS_LINE_3,\n       HA.ADDRESS_LINE_4,\n       HA.POSTCODE,\n       HE.EMAIL_URL_ADDRESS,\n       HP.PHONE_FAX_NUMBER,\n       PRR.PARTY_ROLE_ID as NETWORK_PARTY_ROLE_ID,\n       PRR.RELATED_PARTY_ROLE_ID as REL_FIRM_PARTY_ROLE_ID,\n       PRR.RELATIONSHIP_TYPE_ID\n  from ADVISER_NETWORK AN\n  left outer join HEAD_OFFICE HO\n    on (AN.PARTY_ROLE_ID = HO.PARTY_ROLE_ID)\n  left outer join HO_ADDRESS HA\n    on (HA.PARTY_ROLE_ID = HO.HEAD_OFFICE_PARTY_ROLE_ID)\n  left outer join PARTY_ROLE_NETWORK PRN\n    on (PRN.RELATED_PARTY_ROLE_ID = AN.PARTY_ROLE_ID)\n  left outer join AUTHORISATION AIA\n    on (      AIA.PROD_GRP_ID = 10004\n          and AIA.PARTY_ROLE_ID = case\n                                    when AN.REGULATION_TYPE_ID = 'rt_apprep' then\n                                         PRN.PARTY_ROLE_ID\n                                    else\n                                         AN.PARTY_ROLE_ID\n                                    end)\n  left outer join AUTHORISATION AMA\n    on (      AMA.PROD_GRP_ID = 10003\n          and AMA.PARTY_ROLE_ID = case\n                                    when AN.REGULATION_TYPE_ID = 'rt_apprep' then\n                                         PRN.PARTY_ROLE_ID\n                                    else\n                                         AN.PARTY_ROLE_ID\n                                    end)\n  left outer join AUTHORISATION APA\n    on (      APA.PROD_GRP_ID = 10002\n          and APA.PARTY_ROLE_ID = case\n                                    when AN.REGULATION_TYPE_ID = 'rt_apprep' then\n                                         PRN.PARTY_ROLE_ID\n                                    else\n                                         AN.PARTY_ROLE_ID\n                                    end)\n  left outer join ROLE_PERMISSION RP\n    on (RP.PARTY_ROLE_ID = case\n                              when AN.REGULATION_TYPE_ID = 'rt_apprep' then\n                                   PRN.PARTY_ROLE_ID\n                              else\n                                   AN.PARTY_ROLE_ID\n                                   end)\n  left outer join HO_PHONE HP\n    on (HP.PARTY_ROLE_ID = HO.HEAD_OFFICE_PARTY_ROLE_ID)\n  left outer join HO_EMAIL HE\n    on (HE.PARTY_ROLE_ID = HO.HEAD_OFFICE_PARTY_ROLE_ID)\n inner join PARTY_ROLE_RELATIONSHIP PRR\n    on (AN.PARTY_ROLE_ID = PRR.PARTY_ROLE_ID)\n where PRR.RELATIONSHIP_TYPE_ID='rel_netmem'\n   and PRR.END_DATE is null;",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORGANISATION_NAME",
											"type": "String"
										},
										"sink": {
											"name": "ORGANISATION_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REGULATORY_STATUS_ID",
											"type": "String"
										},
										"sink": {
											"name": "REGULATORY_STATUS_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String"
										},
										"sink": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERM_INVESTMENT_ADVICE",
											"type": "Double"
										},
										"sink": {
											"name": "PERM_INVESTMENT_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PERM_MORTGAGE_ADVICE",
											"type": "Double"
										},
										"sink": {
											"name": "PERM_MORTGAGE_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PERM_INSURANCE_ADVICE",
											"type": "Double"
										},
										"sink": {
											"name": "PERM_INSURANCE_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PERM_PENSION_ADVICE",
											"type": "Double"
										},
										"sink": {
											"name": "PERM_PENSION_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_1",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_2",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_3",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_4",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NETWORK_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "NETWORK_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String"
										},
										"sink": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RELATIONSHIP_TYPE_ID",
											"type": "String"
										},
										"sink": {
											"name": "RELATIONSHIP_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "DPARTNER",
									"Table": "PARTY",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_NETWORK_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_ADVISER_NETWORK_STG_Upsert",
						"description": "compares transient table with staging table to identify new/updated records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_ADVISER_NETWORK_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CREATE_USER_ID",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select TDANS.PARTY_ROLE_ID,\n       TDANS.ORGANISATION_NAME,\n       TDANS.FIRM_REFERENCE_NUMBER,\n       TDANS.STATUS,\n       TDANS.REGULATORY_STATUS_ID,\n       TDANS.PARTY_ROLE_TYPE_ID,\n       TDANS.PERM_INVESTMENT_ADVICE,\n       TDANS.PERM_MORTGAGE_ADVICE,\n       TDANS.PERM_INSURANCE_ADVICE,\n       TDANS.PERM_PENSION_ADVICE,\n       TDANS.ADDRESS_LINE_1,\n       TDANS.ADDRESS_LINE_2,\n       TDANS.ADDRESS_LINE_3,\n       TDANS.ADDRESS_LINE_4,\n       TDANS.POSTCODE,\n       TDANS.EMAIL_URL_ADDRESS,\n       TDANS.PHONE_FAX_NUMBER,\n       TDANS.NETWORK_PARTY_ROLE_ID,\n       TDANS.REL_FIRM_PARTY_ROLE_ID,\n       TDANS.RELATIONSHIP_TYPE_ID,\n       TDANS.RECORD_UPDATE_IND,\n       0 as RECORD_DELETE_IND,\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from (select PARTY_ROLE_ID,\n               ORGANISATION_NAME,\n               FIRM_REFERENCE_NUMBER,\n               STATUS,\n               REGULATORY_STATUS_ID,\n               PARTY_ROLE_TYPE_ID,\n               PERM_INVESTMENT_ADVICE,\n               PERM_MORTGAGE_ADVICE,\n               PERM_INSURANCE_ADVICE,\n               PERM_PENSION_ADVICE,\n               ADDRESS_LINE_1,\n               ADDRESS_LINE_2,\n               ADDRESS_LINE_3,\n               ADDRESS_LINE_4,\n               POSTCODE,\n               EMAIL_URL_ADDRESS,\n               PHONE_FAX_NUMBER,\n               NETWORK_PARTY_ROLE_ID,\n               REL_FIRM_PARTY_ROLE_ID,\n               RELATIONSHIP_TYPE_ID,\n               convert(nvarchar(32), HashBytes('SHA2_256', concat(ORGANISATION_NAME,\n                                                                  STATUS,\n                                                                  FIRM_REFERENCE_NUMBER,\n                                                                  REGULATORY_STATUS_ID,\n                                                                  PARTY_ROLE_TYPE_ID,\n                                                                  PERM_INVESTMENT_ADVICE,\n                                                                  PERM_MORTGAGE_ADVICE,\n                                                                  PERM_INSURANCE_ADVICE,\n                                                                  PERM_PENSION_ADVICE,\n                                                                  ADDRESS_LINE_1,\n                                                                  ADDRESS_LINE_2,ADDRESS_LINE_3,\n                                                                  ADDRESS_LINE_4,\n                                                                  POSTCODE,\n                                                                  EMAIL_URL_ADDRESS,\n                                                                  PHONE_FAX_NUMBER,\n                                                                  REL_FIRM_PARTY_ROLE_ID)),2) as RECORD_UPDATE_IND\n          from STAGE_LOAD.TD_DPDB_ADVISER_NETWORK_STG\n\t\t) TDANS\n  left outer join STAGE_CDI.DPDB_ADVISER_NETWORK_STG DANS\n    on (     TDANS.PARTY_ROLE_ID=DANS.NETWORK_PARTY_ROLE_ID\n\t\t and TDANS.REL_FIRM_PARTY_ROLE_ID=DANS.REL_FIRM_PARTY_ROLE_ID\n\t\t and TDANS.RECORD_UPDATE_IND=DANS.RECORD_UPDATE_IND)\n where DANS.NETWORK_PARTY_ROLE_ID is null;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"NETWORK_PARTY_ROLE_ID",
										"REL_FIRM_PARTY_ROLE_ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NETWORK_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NETWORK_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ORGANISATION_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORGANISATION_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIRM_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RELATIONSHIP_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RELATIONSHIP_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REGULATORY_STATUS_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REGULATORY_STATUS_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARTY_ROLE_TYPE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PERM_INVESTMENT_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PERM_INVESTMENT_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PERM_MORTGAGE_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PERM_MORTGAGE_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PERM_INSURANCE_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PERM_INSURANCE_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PERM_PENSION_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PERM_PENSION_ADVICE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS_LINE_4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EMAIL_URL_ADDRESS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PHONE_FAX_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RECORD_UPDATE_IND",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "CREATE_USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "CREATE_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_NETWORK_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_NETWORK_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "cd-DPDB_ADVISER_NETWORK_STG_Del",
						"description": "compares transient table with staging table to identify deleted records in the target/staging table.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_NETWORK_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select DANS.NETWORK_PARTY_ROLE_ID,\n       DANS.REL_FIRM_PARTY_ROLE_ID,\n       1 as RECORD_DELETE_IND,\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME \n  from STAGE_CDI.DPDB_ADVISER_NETWORK_STG DANS \n  left outer join STAGE_LOAD.TD_DPDB_ADVISER_NETWORK_STG TDANS \n    on (\tTDANS.PARTY_ROLE_ID=DANS.NETWORK_PARTY_ROLE_ID \n\t\tand TDANS.REL_FIRM_PARTY_ROLE_ID=DANS.REL_FIRM_PARTY_ROLE_ID) \n where TDANS.PARTY_ROLE_ID is null;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"NETWORK_PARTY_ROLE_ID",
										"REL_FIRM_PARTY_ROLE_ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NETWORK_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NETWORK_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REL_FIRM_PARTY_ROLE_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_DPDB_ADVISER_NETWORK_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_NETWORK_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-TD_DPDB_ADVISER_NETWORK_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-TD_DPDB_ADVISER_NETWORK_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_NETWORK_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_NETWORK_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_NETWORK_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_NETWORK_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_NETWORK_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-TD_DPDB_ADVISER_NETWORK_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "TD_DPDB_ADVISER_NETWORK_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_NETWORK_STG_Upsert",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_NETWORK_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Upsert').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Upsert').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Upsert').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Upsert').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Upsert').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Upsert').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_ADVISER_NETWORK_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-DPDB_ADVISER_NETWORK_STG_Del",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-DPDB_ADVISER_NETWORK_STG_Del",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Del').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Del').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Del').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Del').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Del').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-DPDB_ADVISER_NETWORK_STG_Del').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "DPDB_ADVISER_NETWORK_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-20T06:25:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_DPDB')]",
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_DPDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('ls_DPDB')]",
					"type": "LinkedServiceReference",
					"parameters": {
						"DPDB_HOST": "10.120.137.131",
						"DPDB_PORT": "1521",
						"DPDB_SERVICE_NAME": "cdb1.nextpathway.com",
						"ENVIRONMENT": {
							"value": "@dataset().ENVIRONMENT",
							"type": "Expression"
						},
						"LOGICAL_ENVIRONMENT": {
							"value": "@dataset().LOGICAL_ENVIRONMENT",
							"type": "Expression"
						},
						"SHORT_LOCATION": {
							"value": "@dataset().SHORT_LOCATION",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					},
					"ENVIRONMENT": {
						"type": "string",
						"defaultValue": "fat"
					},
					"LOGICAL_ENVIRONMENT": {
						"type": "string",
						"defaultValue": "dev"
					},
					"SHORT_LOCATION": {
						"type": "string",
						"defaultValue": "weu"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ASQLDB_SHIR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('ls_AzureSQLDB_SHIR')]",
					"type": "LinkedServiceReference",
					"parameters": {
						"DOMAIN_NAME": {
							"value": "@dataset().DOMAIN_NAME",
							"type": "Expression"
						},
						"DB_NAME": {
							"value": "@dataset().DB_NAME",
							"type": "Expression"
						},
						"USER_NAME": {
							"value": "@dataset().USER_NAME",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					},
					"ENVIRONMENT": {
						"type": "string"
					},
					"LOGICAL_ENVIRONMENT": {
						"type": "string"
					},
					"SHORT_LOCATION": {
						"type": "string"
					},
					"DOMAIN_NAME": {
						"type": "string",
						"defaultValue": "mg-azure-sql-server.database.windows.net"
					},
					"DB_NAME": {
						"type": "string",
						"defaultValue": "mg-sql-db-dev"
					},
					"USER_NAME": {
						"type": "string",
						"defaultValue": "np-mg-01"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CDI-SFDC-ACCOUNT-ADVISER_NETWORK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 02/06/2023\nDescription : Pulls data from Azure SQL and Upsert data in SFDC - ACCOUNT",
				"activities": [
					{
						"name": "cd-ACCOUNT",
						"description": "Pulls data from Azure SQL and loads to Salesforce Account table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "with ADVISER_NETWORK\nas\n(select distinct\n        NETWORK_PARTY_ROLE_ID,\n        STAGE_CDI.F_INITCAP(ORGANISATION_NAME) as ORGANISATION_NAME,\n        FIRM_REFERENCE_NUMBER,\n        STATUS,\n        REGULATORY_STATUS_ID,\n        PARTY_ROLE_TYPE_ID,\n        PERM_INVESTMENT_ADVICE,\n        PERM_MORTGAGE_ADVICE,\n        PERM_INSURANCE_ADVICE,\n        PERM_PENSION_ADVICE,\n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_1) as ADDRESS_LINE_1,\n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_2) as ADDRESS_LINE_2,\n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_3) as ADDRESS_LINE_3,\n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_4) as ADDRESS_LINE_4,\n        POSTCODE,\n        STAGE_CDI.F_DEPERSONALISE(EMAIL_URL_ADDRESS) as EMAIL_URL_ADDRESS,\n        STAGE_CDI.F_DEPERSONALISE(PHONE_FAX_NUMBER) as PHONE_FAX_NUMBER,\n        max(UPDATE_DATE_TIME) as UPDATE_DATE_TIME\n   from STAGE_CDI.DPDB_ADVISER_NETWORK_STG\n  where UPDATE_DATE_TIME > (select PARAMETER_VALUE_DT\n                              from STAGE_CDI.BATCH_PARAMETER\n                             where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_NETWORK'\n                               and PARAMETER_NAME = 'prm_EXTRACTDT'\n                            )\n  group by NETWORK_PARTY_ROLE_ID,\n           ORGANISATION_NAME,\n           FIRM_REFERENCE_NUMBER,\n           STATUS,\n           REGULATORY_STATUS_ID,\n           PARTY_ROLE_TYPE_ID,\n           PERM_INVESTMENT_ADVICE,\n           PERM_MORTGAGE_ADVICE,\n           PERM_INSURANCE_ADVICE,\n           PERM_PENSION_ADVICE,\n           ADDRESS_LINE_1,\n           ADDRESS_LINE_2,\n           ADDRESS_LINE_3,\n           ADDRESS_LINE_4,\n           POSTCODE,\n           EMAIL_URL_ADDRESS,\n           PHONE_FAX_NUMBER\n),\nTRANSLATION\nas\n(select LKP_CODE,\n        RTN_DESC\n   from STAGE_CDI.REF_DPDB_TRANSLATION\n),\nRECORD_TYPE\nas\n(select NAME,\n        SFDC_RECORD_TYPE_STG_ID\n   from STAGE_CDI.SFDC_RECORD_TYPE_STG\n),\nADV_ACC\nas\n(select PRU_PARTYROLEID__C ,\n        SFDC_ADVISER_ACCOUNT_ID\n   from STAGE_CDI.SFDC_ADVISER_ACCOUNT_STG\n  where recordtype = 'Network'\n),\nAN_TRN\nas\n(select AN.NETWORK_PARTY_ROLE_ID,\n        AN.ORGANISATION_NAME,\n        AN.FIRM_REFERENCE_NUMBER,\n        AN.STATUS,\n        AN.REGULATORY_STATUS_ID,\n        AN.PARTY_ROLE_TYPE_ID,\n        AN.PERM_INVESTMENT_ADVICE,\n        AN.PERM_MORTGAGE_ADVICE,\n        AN.PERM_INSURANCE_ADVICE,\n        AN.PERM_PENSION_ADVICE,\n        AN.ADDRESS_LINE_1,\n        AN.ADDRESS_LINE_2,\n        AN.ADDRESS_LINE_3,\n        AN.ADDRESS_LINE_4,\n        AN.POSTCODE,\n        AN.EMAIL_URL_ADDRESS,\n        AN.PHONE_FAX_NUMBER,\n        AN.UPDATE_DATE_TIME,\n        coalesce(TN_ST.RTN_DESC, AN.STATUS) as PRU_STATUS__C,\n        coalesce(TN_RS.RTN_DESC, AN.REGULATORY_STATUS_ID) as PRU_REGULATORYSTATUS__C,\n        coalesce(TN_PR.RTN_DESC, AN.PARTY_ROLE_TYPE_ID) as TYPE,\n        RT.SFDC_RECORD_TYPE_STG_ID as RECORDTYPEID,\n        case\n          when AN.EMAIL_URL_ADDRESS is null\n            or AN.EMAIL_URL_ADDRESS like concat('^[a-zA-Z0-9!#$%&',char(39),'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&',char(39),'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$') then\n            0\n          else\n            1\n        end as EMAIL_VAL_IND,\n        concat(AN.ADDRESS_LINE_1,char(10),AN.ADDRESS_LINE_2) as SHIPPINGSTREET,\n        case\n          when AN.ADDRESS_LINE_3 is null then\n            AN.ADDRESS_LINE_4\n          else\n            AN.ADDRESS_LINE_3\n        end as SHIPPINGCITY,\n        case\n          when AN.ADDRESS_LINE_3 is null then\n            null\n          else\n            AN.ADDRESS_LINE_4\n          end as SHIPPINGSTATE,\n        case\n          when trim(AN.ORGANISATION_NAME) is null then\n            1\n          else\n            0\n        end as NAME_VAL_IND,\n        case\n          when AA.SFDC_ADVISER_ACCOUNT_ID is null\n           and AN.STATUS = 'A' then\n            1\n          when AA.SFDC_ADVISER_ACCOUNT_ID is not null then\n            1\n          else\n            0\n        end as UPS_FLAG,\n        'Pru' as O_SOURCE_OF_RECORD\n   from ADVISER_NETWORK AN\n   left join TRANSLATION TN_ST\n     on AN.STATUS = TN_ST.LKP_CODE\n   left join TRANSLATION TN_RS\n     on AN.REGULATORY_STATUS_ID = TN_RS.LKP_CODE\n   left join TRANSLATION TN_PR\n     on AN.PARTY_ROLE_TYPE_ID = TN_PR.LKP_CODE\n   left join RECORD_TYPE RT\n     on RT.NAME = 'Network'\n   left join ADV_ACC AA\n     on AN.NETWORK_PARTY_ROLE_ID = AA.PRU_PARTYROLEID__C\n)\nselect case\n         when AT.NAME_VAL_IND = 1 then\n           '<Not known>'\n         else\n           AT.ORGANISATION_NAME\n       end as NAME,\n       AT.TYPE as TYPE,\n       AT.RECORDTYPEID as RECORDTYPEID,\n       AT.SHIPPINGSTREET as SHIPPINGSTREET,\n       AT.SHIPPINGCITY as SHIPPINGCITY,\n       AT.SHIPPINGSTATE as SHIPPINGSTATE,\n       AT.POSTCODE as SHIPPINGPOSTALCODE,\n       AT.PHONE_FAX_NUMBER as PHONE,\n       case\n         when AT.EMAIL_VAL_IND = 1 then\n             concat('Invalid email address: ', AT.EMAIL_URL_ADDRESS,char(10))\n         when AT.NAME_VAL_IND = 1 then\n           'Name is unknown'\n         else\n           null\n       end as PRU_DATAQUALITYCOMMENT__C,\n       case\n         when AT.EMAIL_VAL_IND = 1\n           or AT.NAME_VAL_IND = 1 then\n             1\n         else\n           0\n       end as PRU_DATAQUALITYISSUE__C,\n       case\n         when AT.EMAIL_VAL_IND = 1 then\n           null\n         else\n           AT.EMAIL_URL_ADDRESS\n       end as PRU_EMAIL__C,\n       AT.FIRM_REFERENCE_NUMBER as PRU_FIRMREFERENCENUMBER__C,\n       concat('Network_', AT.NETWORK_PARTY_ROLE_ID) as PRU_PARTYROLEID__C,\n       AT.PERM_INSURANCE_ADVICE as PRU_PERMISSIONFORINSURANCEADVICE__C,\n       AT.O_SOURCE_OF_RECORD as PRU_SOURCEOFRECORD__C,\n       AT.PERM_INVESTMENT_ADVICE as PRU_PERMISSIONFORINVESTMENTADVICE__C,\n       AT.PERM_MORTGAGE_ADVICE as PRU_PERMISSIONFORMORTGAGEADVICE__C,\n       AT.PERM_PENSION_ADVICE as PRU_PERMISSIONFORPENSIONXFERADVICE__C,\n       AT.PRU_REGULATORYSTATUS__C as PRU_REGULATORYSTATUS__C,\n       AT.PRU_STATUS__C as PRU_STATUS__C\n  from AN_TRN AT\n where AT.UPS_FLAG = 1\n;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "upsert",
								"externalIdFieldName": "PRU_PARTYROLEID__C",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGSTREET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGCITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGSTATE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGPOSTALCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYCOMMENT__C",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PRU_DataQualityComment__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_EMAIL__C",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PRU_Email__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_FIRMREFERENCENUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_FirmReferenceNumber__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_SOURCEOFRECORD__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_SourceOfRecord__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_PartyRoleID__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_REGULATORYSTATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_RegulatoryStatus__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_Status__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYISSUE__C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PRU_DataQualityIssue__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PERMISSIONFORINSURANCEADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_PermissionForInsuranceAdvice__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PERMISSIONFORINVESTMENTADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_PermissionForInvestmentAdvice__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PERMISSIONFORMORTGAGEADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_PermissionForMortgageAdvice__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PERMISSIONFORPENSIONXFERADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_PermissionForPensionXferAdvice__c",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_NETWORK_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_SFDC_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"APIName": "ACCOUNT",
									"ENVIRONMENT_URL": "https://login.salesforce.com",
									"USER_NAME": "idhillon-agvf@force.com",
									"API_VERSION": "54.0",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp-UPDATE-BATCH_PARAMETER",
						"description": "Update BATCH_PARAMETER",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-ACCOUNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_UPDATE_PARAMETER_VIA_TABLE]",
							"storedProcedureParameters": {
								"p_column_name": {
									"value": "UPDATE_DATE_TIME",
									"type": "String"
								},
								"p_parameter_name": {
									"value": "prm_EXTRACTDT",
									"type": "String"
								},
								"p_process_name": {
									"value": "p_CDI-SFDC-ACCOUNT-ADVISER_NETWORK",
									"type": "String"
								},
								"p_table_name": {
									"value": "STAGE_CDI.DPDB_ADVISER_NETWORK_STG",
									"type": "String"
								},
								"p_updated_by": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-ACCOUNT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-ACCOUNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "ACCOUNT",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-19T18:28:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]",
				"[concat(variables('factoryId'), '/datasets/ds_SFDC_DPDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CDI-SFDC-ACCOUNT-ADVISER_FIRM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 02/06/2023\nDescription : pulls data from oracle tables and loads into transient table. Compares transient table with staging table to identify new/updated records in the target/staging table and load target table.",
				"activities": [
					{
						"name": "cd-ACCOUNT",
						"description": "Pulls data from Azure SQL and loads to Salesforce",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "with ADVISER_FIRM\nas\n(select PARTY_ROLE_ID, \n        STAGE_CDI.F_INITCAP(ORGANISATION_NAME) as ORGANISATION_NAME,\n        FIRM_REFERENCE_NUMBER, \n        STATUS, \n        REGULATORY_STATUS_ID, \n        PARTY_ROLE_TYPE_ID, \n        PERM_INVESTMENT_ADVICE, \n        PERM_MORTGAGE_ADVICE, \n        PERM_INSURANCE_ADVICE, \n        PERM_PENSION_ADVICE, \n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_1) as ADDRESS_LINE_1,\n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_2) as ADDRESS_LINE_2,\n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_3) as ADDRESS_LINE_3,\n        STAGE_CDI.F_INITCAP(ADDRESS_LINE_4) as ADDRESS_LINE_4,\n        POSTCODE,\n        STAGE_CDI.F_DEPERSONALISE(EMAIL_URL_ADDRESS) as EMAIL_URL_ADDRESS,\n        STAGE_CDI.F_DEPERSONALISE(PHONE_FAX_NUMBER)  as PHONE_FAX_NUMBER,\n        RECORD_DELETE_IND,\n        UPDATE_DATE_TIME\n   from STAGE_CDI.DPDB_ADVISER_FIRM_STG\n  where (PARTY_ROLE_ID in \n\t\t\t   (select distinct firm_party_role_id \n\t\t\t\t    from STAGE_CDI.DPDB_REGISTERED_INDIVIDUAL_STG \n\t\t\t\t   where status='A' \n\t\t\t\t     and account_status='A'\n\t\t\t    )\n         and '1900-01-01 01:00:00' = (select cast(PARAMETER_VALUE_DT as varchar)\n                                        from STAGE_CDI.BATCH_PARAMETER\n                                       where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_FIRM'\n                                         and PARAMETER_NAME = 'prm_EXTRACTDT'\n                                    )\n        )\n     or (\t '1900-01-01 01:00:00' != (select cast(PARAMETER_VALUE_DT as varchar)\n\t\t\t\t\t\t\t\t\t\t                   from STAGE_CDI.BATCH_PARAMETER\n\t\t\t\t\t\t\t\t\t\t                  where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_FIRM'\n\t\t\t\t\t\t\t\t\t\t                    and PARAMETER_NAME = 'prm_EXTRACTDT'\n                                  ) \n         and UPDATE_DATE_TIME > (select cast(PARAMETER_VALUE_DT as varchar)\n                                   from STAGE_CDI.BATCH_PARAMETER\n                                  where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_FIRM'\n                                    and PARAMETER_NAME = 'prm_EXTRACTDT'\n                                ) \n        )\n),\nTRANSLATION\nas\n(select LKP_CODE,\n        RTN_DESC\n   from STAGE_CDI.REF_DPDB_TRANSLATION\n),\nRECORD_TYPE\nas\n(select NAME,\n        SFDC_RECORD_TYPE_STG_ID\n   from STAGE_CDI.SFDC_RECORD_TYPE_STG\n),\nADV_ACC\nas\n(select PRU_PARTYROLEID__C ,\n        SFDC_ADVISER_ACCOUNT_ID\n   from STAGE_CDI.SFDC_ADVISER_ACCOUNT_STG\n),\nAF_FIL\nas\n(select AF.ADDRESS_LINE_1,\n        AF.ADDRESS_LINE_2,\n        AF.ADDRESS_LINE_3,\n        AF.ADDRESS_LINE_4,\n\t\t    AF.EMAIL_URL_ADDRESS,\n\t\t    AF.FIRM_REFERENCE_NUMBER,\n\t\t    AF.ORGANISATION_NAME,\n\t\t    AF.PARTY_ROLE_ID, \n        AF.PARTY_ROLE_TYPE_ID, \n        AF.PERM_INVESTMENT_ADVICE, \n        AF.PERM_MORTGAGE_ADVICE, \n        AF.PERM_INSURANCE_ADVICE, \n        AF.PERM_PENSION_ADVICE,\n        AF.STATUS, \n        AF.REGULATORY_STATUS_ID, \n        AF.POSTCODE,\n        AF.PHONE_FAX_NUMBER,\n        AF.RECORD_DELETE_IND,\n        AF.UPDATE_DATE_TIME,\n        coalesce(TN_ST.RTN_DESC, AF.STATUS) as PRU_Status__c,\n        coalesce(TN_RS.RTN_DESC, AF.REGULATORY_STATUS_ID) as PRU_RegulatoryStatus__c,\n        coalesce(TN_PR.RTN_DESC, AF.PARTY_ROLE_TYPE_ID) as Type,\n        RT.SFDC_RECORD_TYPE_STG_ID as RecordTypeID,\n        case\n          when AF.EMAIL_URL_ADDRESS is null\n            or AF.EMAIL_URL_ADDRESS like concat('^[a-zA-Z0-9!#$%&',char(39),'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&',char(39),'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$') then\n            0\n          else\n            1\n        end as Email_Val_Ind,\n        concat(AF.ADDRESS_LINE_1,CHAR(10),AF.ADDRESS_LINE_2) as ShippingStreet,\n\t\t    coalesce(AF.ADDRESS_LINE_3,AF.ADDRESS_LINE_4) as ShippingCity,\n        case\n          when AF.ADDRESS_LINE_3 is null then\n            null\n          else\n            AF.ADDRESS_LINE_4\n          end as ShippingState,\n        case\n          when trim(AF.ORGANISATION_NAME) is null then\n            1\n          else\n            0\n        end as Name_Val_Ind,\n        case\n          when AA.SFDC_ADVISER_ACCOUNT_ID is null\n           and AF.STATUS = 'A' then\n            1\n          when AA.SFDC_ADVISER_ACCOUNT_ID is not null then\n            1\n          else\n            0\n        end as UPS_Flag,\n        'Pru' as O_SOURCE_OF_RECORD\n   from ADVISER_FIRM AF\n   left join TRANSLATION TN_ST\n     on (AF.STATUS = TN_ST.LKP_CODE)\n   left join TRANSLATION TN_RS\n     on (AF.REGULATORY_STATUS_ID = TN_RS.LKP_CODE)\n   left join TRANSLATION TN_PR\n     on (AF.PARTY_ROLE_TYPE_ID = TN_PR.LKP_CODE)\n   left join RECORD_TYPE RT\n     on (RT.NAME = 'Business Account Firm')\n   left join ADV_ACC AA\n     on (AF.PARTY_ROLE_ID = AA.PRU_PARTYROLEID__C)\n)\nselect case\n         when AFF.EMAIL_VAL_IND = 1\n           or AFF.NAME_VAL_IND = 1 then\n             1\n         else\n           0\n       end as PRU_DataQualityIssue__c,\n\t     case\n         when AFF.NAME_VAL_IND = 1 then\n           '<Not known>'\n         else\n           AFF.ORGANISATION_NAME\n       end as NAME,\n\t     case\n         when AFF.EMAIL_VAL_IND = 1 then\n           null\n         else\n           AFF.EMAIL_URL_ADDRESS\n       end as PRU_EMAIL__C,\n\t     case\n         when AFF.EMAIL_VAL_IND = 1 then\n             concat('Invalid email address: ', AFF.EMAIL_URL_ADDRESS,CHAR(10))\n         when AFF.NAME_VAL_IND = 1 then\n           'Name is unknown'\n         else\n           null\n       end as PRU_DATAQUALITYCOMMENT__C,\n       AFF.TYPE as TYPE,\n       AFF.RECORD_DELETE_IND,\n       AFF.RECORDTYPEID as RECORDTYPEID,\n       AFF.SHIPPINGSTREET as SHIPPINGSTREET,\n       AFF.SHIPPINGCITY as SHIPPINGCITY,\n       AFF.SHIPPINGSTATE as SHIPPINGSTATE,\n       AFF.POSTCODE as SHIPPINGPOSTALCODE,\n       AFF.PHONE_FAX_NUMBER as PHONE,       \n       AFF.FIRM_REFERENCE_NUMBER as PRU_FIRMREFERENCENUMBER__C,\n       AFF.PARTY_ROLE_ID as PRU_PARTYROLEID__C,\n       AFF.PERM_INSURANCE_ADVICE as PRU_PERMISSIONFORINSURANCEADVICE__C,\n       AFF.O_SOURCE_OF_RECORD as PRU_SOURCEOFRECORD__C,\n       AFF.PERM_INVESTMENT_ADVICE as PRU_PERMISSIONFORINVESTMENTADVICE__C,\n       AFF.PERM_MORTGAGE_ADVICE as PRU_PERMISSIONFORMORTGAGEADVICE__C,\n       AFF.PERM_PENSION_ADVICE as PRU_PERMISSIONFORPENSIONXFERADVICE__C,\n       AFF.PRU_REGULATORYSTATUS__C as PRU_REGULATORYSTATUS__C,\n       AFF.PRU_STATUS__C as PRU_STATUS__C\n  from AF_FIL  AFF\n where AFF.UPS_Flag = 1\n;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "upsert",
								"externalIdFieldName": "PRU_PARTYROLEID__C",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGSTREET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGCITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGSTATE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGPOSTALCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYCOMMENT__C",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PRU_DataQualityComment__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_EMAIL__C",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PRU_Email__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_FIRMREFERENCENUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_FirmReferenceNumber__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PERMISSIONFORINSURANCEADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_PermissionForInsuranceAdvice__c",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "PRU_PERMISSIONFORINVESTMENTADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_PermissionForInvestmentAdvice__c",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_RecordRemoved__c",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "PRU_SOURCEOFRECORD__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_SourceOfRecord__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_PartyRoleID__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PERMISSIONFORMORTGAGEADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_PermissionForMortgageAdvice__c",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "PRU_PERMISSIONFORPENSIONXFERADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_PermissionForPensionXferAdvice__c",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "PRU_REGULATORYSTATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_RegulatoryStatus__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_Status__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_DataQualityIssue__c",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PRU_DataQualityIssue__c",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": true
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_FIRM_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_SFDC_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"APIName": "Account",
									"ENVIRONMENT_URL": "https://login.salesforce.com",
									"USER_NAME": "idhillon-agvf@force.com",
									"API_VERSION": "54.0",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp-UPDATE-BATCH_PARAMETER",
						"description": "Update BATCH_PARAMETER",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-ACCOUNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_UPDATE_PARAMETER_VIA_TABLE]",
							"storedProcedureParameters": {
								"p_column_name": {
									"value": "UPDATE_DATE_TIME",
									"type": "String"
								},
								"p_parameter_name": {
									"value": "prm_EXTRACTDT",
									"type": "String"
								},
								"p_process_name": {
									"value": "p_CDI-SFDC-ACCOUNT-ADVISER_FIRM",
									"type": "String"
								},
								"p_table_name": {
									"value": "STAGE_CDI.DPDB_ADVISER_FIRM_STG",
									"type": "String"
								},
								"p_updated_by": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-ACCOUNT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-ACCOUNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "ACCOUNT",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-19T18:24:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]",
				"[concat(variables('factoryId'), '/datasets/ds_SFDC_DPDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 02/06/2023\nDescription : pulls data from oracle tables and loads into transient table. Compares transient table with staging table to identify new/updated records in the target/staging table and load target table.",
				"activities": [
					{
						"name": "lkp-BATCH_PARAMETER",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "sp-TRUNCATE-TD_SFDC_ADVISER_ACCOUNT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select PARAMETER_VALUE_DT as PRM_EXTRACTDT\r\n  from STAGE_CDI.BATCH_PARAMETER \r\n where PROCESS_NAME ='p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG'\r\n   and PARAMETER_NAME ='prm_EXTRACTDT'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "BATCH_PARAMETER",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						}
					},
					{
						"name": "cd-TD_SFDC_ADVISER_ACCOUNT_STG",
						"description": "Pulls data from Salesforce table and loads to Azure SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lkp-BATCH_PARAMETER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select ID,\n       PRU_PARTYROLEID__C,\n       NAME,\n       PRU_STATUS__C,\n       TYPE,\n       PRU_FIRMREFERENCENUMBER__C,\n       PRU_REGULATORYSTATUS__C,\n       PRU_PERMISSIONFORINVESTMENTADVICE__C,\n       PRU_PERMISSIONFORMORTGAGEADVICE__C,\n       PRU_PERMISSIONFORINSURANCEADVICE__C,\n       PRU_PERMISSIONFORPENSIONXFERADVICE__C,\n       SHIPPINGSTREET,\n       SHIPPINGCITY,\n       SHIPPINGSTATE,\n       SHIPPINGPOSTALCODE,\n       PRU_EMAIL__C,\n       PHONE,\n       PRU_DATAQUALITYISSUE__C,\n       PRU_DATAQUALITYCOMMENT__C,\n       PRU_RECORDREMOVED__C,\n       PARENTID,\n       LASTMODIFIEDDATE\n  from ACCOUNT \n where PRU_PARTYROLEID__C !=null\n   and LASTMODIFIEDDATE >= @{formatDateTime(activity('lkp-BATCH_PARAMETER').output.firstrow.prm_EXTRACTDT,'yyyy-MM-ddTHH:mm:ssZ')}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PartyRoleID__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_Status__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String"
										},
										"sink": {
											"name": "TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_FirmReferenceNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_FIRMREFERENCENUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_RegulatoryStatus__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_REGULATORYSTATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PermissionForInvestmentAdvice__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_PERMISSIONFORINVESTMENTADVICE__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PermissionForMortgageAdvice__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_PERMISSIONFORMORTGAGEADVICE__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PermissionForInsuranceAdvice__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_PERMISSIONFORINSURANCEADVICE__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PermissionForPensionXferAdvice__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_PERMISSIONFORPENSIONXFERADVICE__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShippingStreet",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGSTREET",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShippingCity",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGCITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShippingState",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGSTATE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ShippingPostalCode",
											"type": "String"
										},
										"sink": {
											"name": "SHIPPINGPOSTALCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_Email__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_EMAIL__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String"
										},
										"sink": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_DataQualityIssue__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_DATAQUALITYISSUE__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_DataQualityComment__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_DATAQUALITYCOMMENT__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_RecordRemoved__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_RECORDREMOVED__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ParentId",
											"type": "String"
										},
										"sink": {
											"name": "PARENTID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTMODIFIEDDATE",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SFDC_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"APIName": "ACCOUNT",
									"ENVIRONMENT_URL": "https://login.salesforce.com",
									"USER_NAME": "idhillon-agvf@force.com",
									"API_VERSION": "54.0",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_SFDC_ADVISER_ACCOUNT_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "sp-TRUNCATE-TD_SFDC_ADVISER_ACCOUNT_STG",
						"description": "Truncate stage table STAGE_LOAD.TD_SFDC_ADVISER_ACCOUNT_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_LOAD].[PRC_TRUNCATE_TD_TABLE]",
							"storedProcedureParameters": {
								"p_table_name": {
									"value": "TD_SFDC_ADVISER_ACCOUNT_STG",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "cd-SFDC_ADVISER_ACCOUNT_STG_Upsert",
						"description": "Upsert SFDC_ADVISER_ACCOUNT_STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-TD_SFDC_ADVISER_ACCOUNT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CREATE_USER_ID",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "with ADVISER_ACCOUNT\nas\n(select TSAAS.ID,\n        TSAAS.PRU_PARTYROLEID__C,\n        TSAAS.RECORDTYPEID,\n        TSAAS.NAME,\n        TSAAS.PRU_STATUS__C,\n        TSAAS.TYPE,\n        TSAAS.PRU_FIRMREFERENCENUMBER__C,\n        TSAAS.PRU_REGULATORYSTATUS__C,\n        TSAAS.PRU_PERMISSIONFORINVESTMENTADVICE__C,\n        TSAAS.PRU_PERMISSIONFORMORTGAGEADVICE__C,\n        TSAAS.PRU_PERMISSIONFORINSURANCEADVICE__C,\n        TSAAS.PRU_PERMISSIONFORPENSIONXFERADVICE__C,\n        TSAAS.SHIPPINGSTREET,\n        TSAAS.SHIPPINGCITY,\n        TSAAS.SHIPPINGSTATE,\n        TSAAS.SHIPPINGPOSTALCODE,\n        TSAAS.PRU_EMAIL__C,\n        TSAAS.PHONE,\n        TSAAS.PRU_DATAQUALITYISSUE__C,\n        TSAAS.PRU_DATAQUALITYCOMMENT__C,\n        TSAAS.PRU_RECORDREMOVED__C,\n        TSAAS.PARENTID,\n        TSAAS.LASTMODIFIEDDATE\n   from STAGE_LOAD.TD_SFDC_ADVISER_ACCOUNT_STG TSAAS\n),\nRECORD_TYPE \nas\n(select SFDC_RECORD_TYPE_STG_ID,\n        NAME\n   from STAGE_CDI.SFDC_RECORD_TYPE_STG\n)\nselect ID as SFDC_ADVISER_ACCOUNT_ID,\n       AA.PRU_PARTYROLEID__C,\n\t    AA.RECORDTYPEID,\n       RT.NAME as RECORDTYPE,\n       AA.Name,\n       AA.PRU_STATUS__C,\n       AA.TYPE,\n       AA.PRU_FIRMREFERENCENUMBER__C,\n       AA.PRU_REGULATORYSTATUS__C,\n       cast(PRU_PERMISSIONFORINVESTMENTADVICE__C  as numeric(1,0)) as PRU_INVESTMENTADVICE__C,\n       cast(PRU_PERMISSIONFORMORTGAGEADVICE__C    as numeric(1,0)) as PRU_MORTGAGEADVICE__C,\n       cast(PRU_PERMISSIONFORINSURANCEADVICE__C   as numeric(1,0)) as PRU_INSURANCEADVICE__C,\n       cast(PRU_PERMISSIONFORPENSIONXFERADVICE__C as numeric(1,0)) as PRU_PENSIONXFERADVICE__C,\n       AA.SHIPPINGSTREET,\n       AA.SHIPPINGCITY,\n       AA.SHIPPINGSTATE,\n       AA.SHIPPINGPOSTALCODE,\n       AA.PRU_EMAIL__C,\n       AA.PHONE,\n       cast(PRU_DATAQUALITYISSUE__C as numeric(1,0)) as PRU_DATAQUALITYISSUE_C,\n       AA.PRU_DATAQUALITYCOMMENT__C as PRU_DATAQUALITYCOMMENT_C,\n       AA.PRU_RECORDREMOVED__C,\n       PARENTID as PARENT,\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\n  from ADVISER_ACCOUNT AA\n  left join RECORD_TYPE RT\n   on (AA.RECORDTYPEID = RT.SFDC_RECORD_TYPE_STG_ID);",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PRU_PARTYROLEID__C"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SFDC_ADVISER_ACCOUNT_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SFDC_ADVISER_ACCOUNT_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECORDTYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RECORDTYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_FIRMREFERENCENUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_FIRMREFERENCENUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_REGULATORYSTATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_REGULATORYSTATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_INVESTMENTADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_INVESTMENTADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PRU_MORTGAGEADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_MORTGAGEADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PRU_INSURANCEADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_INSURANCEADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PRU_PENSIONXFERADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_PENSIONXFERADVICE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "SHIPPINGSTREET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SHIPPINGSTREET",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SHIPPINGCITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SHIPPINGCITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SHIPPINGSTATE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SHIPPINGSTATE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SHIPPINGPOSTALCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SHIPPINGPOSTALCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_EMAIL__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_EMAIL__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYISSUE_C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_DATAQUALITYISSUE_C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYCOMMENT_C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_DATAQUALITYCOMMENT_C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_RECORDREMOVED__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_RECORDREMOVED__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PARENT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PARENT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CREATE_USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "CREATE_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_SFDC_ADVISER_ACCOUNT_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "SFDC_ADVISER_ACCOUNT_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "spt-UPDATE-BATCH_PARAMETER",
						"description": "UPDATE-BATCH_PARAMETER",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "cd-SFDC_ADVISER_ACCOUNT_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "update STAGE_CDI.BATCH_PARAMETER\n   set parameter_value_dt = (select max(LASTMODIFIEDDATE) \n\t\t\t\t\t\t\t   from STAGE_LOAD.TD_SFDC_ADVISER_ACCOUNT_STG),\n       lastmodifieddt = (select cast(SYSDATETIMEOFFSET() at time zone 'GMT Standard Time' as datetime)),\n       lastmodifiedby ='p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG'\n where process_name ='p_SFDC-CDI-SFDC_ADVISER_ACCOUNT_STG'\n   and parameter_name = 'prm_EXTRACTDT'"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-TD_SFDC_ADVISER_ACCOUNT_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-TD_SFDC_ADVISER_ACCOUNT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_ACCOUNT_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_ACCOUNT_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_ACCOUNT_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_ACCOUNT_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_ACCOUNT_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_ACCOUNT_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "TD_SFDC_ADVISER_ACCOUNT_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-SFDC_ADVISER_ACCOUNT_STG_Upsert",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-SFDC_ADVISER_ACCOUNT_STG_Upsert",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_ACCOUNT_STG_Upsert').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_ACCOUNT_STG_Upsert').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_ACCOUNT_STG_Upsert').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_ACCOUNT_STG_Upsert').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_ACCOUNT_STG_Upsert').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_ACCOUNT_STG_Upsert').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "SFDC_ADVISER_ACCOUNT_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-20T06:42:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]",
				"[concat(variables('factoryId'), '/datasets/ds_SFDC_DPDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 02/06/2023\nDescription : Pulls data from Azure SQL and Upsert data in SFDC - ACCOUNT",
				"activities": [
					{
						"name": "cd-ACCOUNT",
						"description": "Pulls data from Azure SQL and loads to Salesforce",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "with ADVISER_OFFICE\nas\n(select PARTY_ROLE_ID, \n\t\t    FIRM_PARTY_ROLE_ID, \n\t\t    STAGE_CDI.F_INITCAP(PARTY_ROLE_NAME) as PARTY_ROLE_NAME, \n\t\t    STATUS, \n\t\t    PARTY_ROLE_TYPE_ID,\n\t\t    STAGE_CDI.F_INITCAP(ADDRESS_LINE_1) as ADDRESS_LINE_1, \n\t\t    STAGE_CDI.F_INITCAP(ADDRESS_LINE_2) as ADDRESS_LINE_2, \n\t\t    STAGE_CDI.F_INITCAP(ADDRESS_LINE_3) as ADDRESS_LINE_3, \n\t\t    STAGE_CDI.F_INITCAP(ADDRESS_LINE_4) as ADDRESS_LINE_4, \n\t\t    POSTCODE, \n\t\t    STAGE_CDI.F_DEPERSONALISE(EMAIL_URL_ADDRESS) as EMAIL_URL_ADDRESS,  \n\t\t    STAGE_CDI.F_DEPERSONALISE(PHONE_FAX_NUMBER) as  PHONE_FAX_NUMBER,\n\t\t    RECORD_DELETE_IND,\n\t\t    UPDATE_DATE_TIME\n   from STAGE_CDI.DPDB_ADVISER_OFFICE_STG\n  where (PARTY_ROLE_ID in \n\t\t\t    (select distinct \n                  OFFICE_PARTY_ROLE_ID \n\t\t\t\t     from STAGE_CDI.DPDB_REGISTERED_INDIVIDUAL_STG \n\t\t\t      where status='A' \n              and account_status='A'\n\t\t\t )\n        and '1900-01-01 01:00:00' = (select cast(PARAMETER_VALUE_DT as varchar)\n                                       from STAGE_CDI.BATCH_PARAMETER\n                                      where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE'\n                                        and PARAMETER_NAME = 'prm_EXTRACTDT'\n                                    )\n        )\n     or (\t'1900-01-01 01:00:00' != (select cast(PARAMETER_VALUE_DT as varchar)\n                                      from STAGE_CDI.BATCH_PARAMETER\n                                     where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE'\n                                       and PARAMETER_NAME = 'prm_EXTRACTDT'\n                                  ) \n        and UPDATE_DATE_TIME > (select cast(PARAMETER_VALUE_DT as varchar)\n                                  from STAGE_CDI.BATCH_PARAMETER\n                                 where PROCESS_NAME = 'p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE'\n                                   and PARAMETER_NAME = 'prm_EXTRACTDT'\n                                ) \n        )\n),\nTRANSLATION\nas\n(select LKP_CODE,\n        RTN_DESC\n   from STAGE_CDI.REF_DPDB_TRANSLATION\n),\nRECORD_TYPE\nas\n(select NAME,\n        SFDC_RECORD_TYPE_STG_ID\n   from STAGE_CDI.SFDC_RECORD_TYPE_STG\n),\nADV_ACC\nas\n(select PRU_PARTYROLEID__C ,\n        SFDC_ADVISER_ACCOUNT_ID\n   from STAGE_CDI.SFDC_ADVISER_ACCOUNT_STG\n),\nADV_FIRM\nas\n(select PARTY_ROLE_ID as PARTY_ROLE_ID,\n        STAGE_CDI.F_INITCAP(ORGANISATION_NAME) as ORGANISATION_NAME\n   from STAGE_CDI.DPDB_ADVISER_FIRM_STG\n  where PARTY_ROLE_ID in \n          (select FIRM_PARTY_ROLE_ID\n\t\t\t       from STAGE_CDI.DPDB_ADVISER_OFFICE_STG\n\t\t\t      where PARTY_ROLE_NAME is null\n\t\t  )\n),\nADV_LKP\nas\n(select ADV_OFF.PARTY_ROLE_ID, \n\t\t    ADV_OFF.FIRM_PARTY_ROLE_ID, \n\t\t    ADV_OFF.PARTY_ROLE_NAME, \n\t\t    ADV_OFF.STATUS, \n\t\t    ADV_OFF.PARTY_ROLE_TYPE_ID,\n\t\t    ADV_OFF.ADDRESS_LINE_1, \n\t\t    ADV_OFF.ADDRESS_LINE_2, \n\t\t    ADV_OFF.ADDRESS_LINE_3, \n\t\t    ADV_OFF.ADDRESS_LINE_4, \n\t\t    ADV_OFF.POSTCODE, \n\t\t    ADV_OFF.EMAIL_URL_ADDRESS,  \n\t\t    ADV_OFF.PHONE_FAX_NUMBER,\n\t\t    ADV_OFF.RECORD_DELETE_IND,\n\t\t    ADV_OFF.UPDATE_DATE_TIME,\n\t\t    coalesce(TR.RTN_DESC, ADV_OFF.STATUS) as PRU_Status__c,\n\t\t    coalesce(TR_PR.RTN_DESC, ADV_OFF.PARTY_ROLE_TYPE_ID) as Type,\n\t\t    RT.SFDC_RECORD_TYPE_STG_ID as RecordTypeID,\n\t\t    concat(ADV_OFF.ADDRESS_LINE_1,CHAR(10),ADV_OFF.ADDRESS_LINE_2) as ShippingStreet,\n\t\t    coalesce(ADV_OFF.ADDRESS_LINE_3,ADV_OFF.ADDRESS_LINE_4) as ShippingCity,\n            case\n              when ADV_OFF.ADDRESS_LINE_3 is null then\n                null\n              else\n                ADV_OFF.ADDRESS_LINE_4\n            end as ShippingState,\n\t\t    case\n              when ADV_OFF.EMAIL_URL_ADDRESS is null\n                or ADV_OFF.EMAIL_URL_ADDRESS like concat('^[a-zA-Z0-9!#$%&',char(39),'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&',char(39),'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$') then\n                0\n              else\n                1\n            end as Email_Val_Ind,\n\t\t    case \n\t\t       when trim(coalesce(ADV_OFF.PARTY_ROLE_NAME, AF.ORGANISATION_NAME)) is null then\n\t\t            1\n\t\t       else\n\t\t            0\n\t\t    end as Name_Val_Ind,\n\t\t    AA_ID.SFDC_ADVISER_ACCOUNT_ID as PARENT_ID,\t\n\t\t    case\n              when AA.SFDC_ADVISER_ACCOUNT_ID is null\n               and ADV_OFF.STATUS = 'A' then\n                1\n              when AA.SFDC_ADVISER_ACCOUNT_ID is not null then\n                1\n              else\n                0\n            end as UPS_Flag,\t\t\n\t\t    coalesce(ADV_OFF.PARTY_ROLE_NAME, AF.ORGANISATION_NAME) as o_PARTY_ROLE_NAME\n   from ADVISER_OFFICE ADV_OFF\n   left join TRANSLATION TR\n     on (ADV_OFF.STATUS = TR.LKP_CODE)\n   left join TRANSLATION TR_PR\n     on (ADV_OFF.PARTY_ROLE_TYPE_ID = TR_PR.LKP_CODE)\n   left join RECORD_TYPE RT\n     on (RT.NAME = 'Business Account Office')\n   left join ADV_ACC AA\n     on (ADV_OFF.PARTY_ROLE_ID = AA.PRU_PARTYROLEID__C)\n   left join ADV_ACC AA_ID\n     on (ADV_OFF.FIRM_PARTY_ROLE_ID = AA.PRU_PARTYROLEID__C)\n   left join ADV_FIRM AF\n     on (ADV_OFF.FIRM_PARTY_ROLE_ID = AF.PARTY_ROLE_ID)\n)\nselect AL.TYPE as TYPE,\n       AL.RECORDTYPEID as RECORDTYPEID,\n\t     AL.PARENT_ID as ParentId,\n       AL.SHIPPINGSTREET as SHIPPINGSTREET,\n       AL.SHIPPINGCITY as SHIPPINGCITY,\n       AL.SHIPPINGSTATE as SHIPPINGSTATE,\n       AL.POSTCODE as SHIPPINGPOSTALCODE,\n       AL.PHONE_FAX_NUMBER as PHONE, \n\t     case\n           when AL.EMAIL_VAL_IND = 1 then\n               concat('Invalid email address: ', AL.EMAIL_URL_ADDRESS,char(10))\n           when AL.NAME_VAL_IND = 1 then\n             'Name is unknown'\n           else\n             null\n         end as PRU_DATAQUALITYCOMMENT__C,\n\t     case\n           when AL.EMAIL_VAL_IND = 1\n             or AL.NAME_VAL_IND = 1 then\n               1\n           else\n             0\n         end as PRU_DataQualityIssue__c,\n\t     case\n           when AL.EMAIL_VAL_IND = 1 then\n             null\n           else\n             AL.EMAIL_URL_ADDRESS\n         end as PRU_EMAIL__C,\n\t     case\n           when AL.NAME_VAL_IND = 1 then\n             '<Not known>'\n           else\n             AL.o_PARTY_ROLE_NAME\n         end as NAME,\n\t     AL.PARTY_ROLE_ID as PRU_PARTYROLEID__C,\n\t     'Pru' as PRU_SOURCEOFRECORD__C,\n\t     AL.RECORD_DELETE_IND  as PRU_RecordRemoved__c,\n\t     AL.PRU_STATUS__C as PRU_STATUS__C      \n  from ADV_LKP  AL\n where AL.UPS_Flag = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "upsert",
								"externalIdFieldName": "PRU_PARTYROLEID__C",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RECORDTYPEID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RecordTypeId__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ParentId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ParentId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGSTREET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGCITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGSTATE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPINGPOSTALCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShippingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PHONE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYCOMMENT__C",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PRU_DataQualityComment__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_EMAIL__C",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PRU_Email__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_SOURCEOFRECORD__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_SourceOfRecord__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_PartyRoleID__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_Status__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_DataQualityIssue__c",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PRU_DataQualityIssue__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_RecordRemoved__c",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_RecordRemoved__c",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": true
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_OFFICE_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_SFDC_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"APIName": "Account",
									"ENVIRONMENT_URL": "https://login.salesforce.com",
									"USER_NAME": "idhillon-agvf@force.com",
									"API_VERSION": "54.0",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp-UPDATE-BATCH_PARAMETER",
						"description": "Update BATCH_PARAMETER",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-ACCOUNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_UPDATE_PARAMETER_VIA_TABLE]",
							"storedProcedureParameters": {
								"p_column_name": {
									"value": "UPDATE_DATE_TIME",
									"type": "String"
								},
								"p_parameter_name": {
									"value": "prm_EXTRACTDT",
									"type": "String"
								},
								"p_process_name": {
									"value": "p_CDI-SFDC-ACCOUNT-ADVISER_OFFICE",
									"type": "String"
								},
								"p_table_name": {
									"value": "STAGE_CDI.DPDB_ADVISER_OFFICE_STG",
									"type": "String"
								},
								"p_updated_by": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-ACCOUNT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-ACCOUNT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-ACCOUNT').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "ACCOUNT",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-20T06:08:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]",
				"[concat(variables('factoryId'), '/datasets/ds_SFDC_DPDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SFDC-CDI-SFDC_ADVISER_RI_CONTACT_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 02/06/2023\nDescription : pulls data from Salesforce object and  loads into transient table. Compares transient table with staging table to identify new/updated records in the target/staging table and load target table.",
				"activities": [
					{
						"name": "lkp-BATCH_PARAMETER",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "sp-TRUNCATE-TD_SFDC_ADVISER_RI_CONTACT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select PARAMETER_VALUE_DT as PRM_EXTRACTDT\n  from STAGE_CDI.BATCH_PARAMETER \n where PROCESS_NAME ='p_SFDC-CDI-SFDC_ADVISER_RI_CONTACT_STG'\n   and PARAMETER_NAME ='prm_EXTRACTDT'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "BATCH_PARAMETER",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						}
					},
					{
						"name": "cd-TD_SFDC_ADVISER_RI_CONTACT_STG",
						"description": "pulls data from Salesforce table, loads into transient table TD_SFDC_ADVISER_RI_CONTACT_STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lkp-BATCH_PARAMETER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select ID,\n       PRU_PARTYROLEID__C,\n       ACCOUNTID,\n       SALUTATION,\n       FIRSTNAME,\n       LASTNAME,\n       PRU_INDIVIDUALREFERENCENUMBER__C,\n       PRU_INDIVIDUALREFERENCENUMBERALT__C,\n       PRU_STATUS__C,\n       PRU_RegisteredIndividualReference__c,\n       PRU_AGENCYNUMBER__C,\n       PRU_AGENCYNUMBERSTATUS__C,\n       PRU_TYPE__C,\n       PRU_DATAQUALITYISSUE__C,\n       PRU_DATAQUALITYCOMMENT__C,\n       PRU_RECORDREMOVED__C,\n       LASTMODIFIEDDATE\n  from CONTACT \n where LASTMODIFIEDDATE >= @{formatDateTime(activity('lkp-BATCH_PARAMETER').output.firstrow.prm_EXTRACTDT,'yyyy-MM-ddTHH:mm:ssZ')}",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PartyRoleID__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccountId",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNTID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Salutation",
											"type": "String"
										},
										"sink": {
											"name": "SALUTATION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"name": "FIRSTNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"name": "LASTNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_IndividualReferenceNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_INDIVIDUALREFERENCENUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_IndividualReferenceNumberAlt__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_INDIVIDUALREFERENCENUMBERALT__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_Status__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_RegisteredIndividualReference__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_RegisteredIndividualReference__c",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_AgencyNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_AGENCYNUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_AgencyNumberStatus__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_AGENCYNUMBERSTATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_Type__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_TYPE__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_DataQualityIssue__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "PRU_DATAQUALITYISSUE__C",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PRU_DataQualityComment__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_DATAQUALITYCOMMENT__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_RecordRemoved__c",
											"type": "Decimal"
										},
										"sink": {
											"name": "PRU_RECORDREMOVED__C",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTMODIFIEDDATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SFDC_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"APIName": "CONTACT",
									"ENVIRONMENT_URL": "https://login.salesforce.com",
									"USER_NAME": "idhillon-agvf@force.com",
									"API_VERSION": "54.0",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_SFDC_ADVISER_RI_CONTACT_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "spt-UPDATE-BATCH_PARAMETER",
						"description": "UPDATE-BATCH_PARAMETER",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "cd-SFDC_ADVISER_RI_CONTACT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "update STAGE_CDI.BATCH_PARAMETER\n   set parameter_value_dt = (select max(LASTMODIFIEDDATE) \n\t\t\t\t\t\t\t   from STAGE_LOAD.TD_SFDC_ADVISER_RI_CONTACT_STG),\n       lastmodifieddt = (select cast(SYSDATETIMEOFFSET() at time zone 'GMT Standard Time' as datetime)),\n       lastmodifiedby ='p_SFDC-CDI-SFDC_ADVISER_RI_CONTACT_STG'\n where process_name ='p_SFDC-CDI-SFDC_ADVISER_RI_CONTACT_STG'\n   and parameter_name = 'prm_EXTRACTDT'"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "sp-TRUNCATE-TD_SFDC_ADVISER_RI_CONTACT_STG",
						"description": "this step truncate the table TD_SFDC_ADVISER_RI_CONTACT_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_LOAD].[PRC_TRUNCATE_TD_TABLE]",
							"storedProcedureParameters": {
								"p_table_name": {
									"value": "TD_SFDC_ADVISER_RI_CONTACT_STG",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "cd-SFDC_ADVISER_RI_CONTACT_STG",
						"description": "Upsert SFDC_ADVISER_RI_CONTACT_STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-TD_SFDC_ADVISER_RI_CONTACT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CREATE_USER_ID",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select ID as SFDC_ADVISER_CONTACT_ID,\r\n       PRU_PARTYROLEID__C,\r\n       ACCOUNTID,\r\n       SALUTATION,\r\n       FIRSTNAME,\r\n       LASTNAME,\r\n       PRU_INDIVIDUALREFERENCENUMBER__C as PRU_INDIVIDUALREFNUM__C,\r\n       PRU_INDIVIDUALREFERENCENUMBERALT__C as PRU_INDIVIDUALREFNUMALT__C,\r\n       PRU_STATUS__C,\r\n       PRU_RegisteredIndividualReference__c as PRU_REGISTEREDINDIVIDUALREF__C,\r\n       PRU_AGENCYNUMBER__C,\r\n       PRU_AGENCYNUMBERSTATUS__C,\r\n       PRU_TYPE__C,\r\n       OTHERSTREET,\r\n       OTHERCITY,\r\n       OTHERSTATE,\r\n       PRU_DATAQUALITYISSUE__C,\r\n       PRU_DATAQUALITYCOMMENT__C,\r\n       OTHERPOSTALCODE,\r\n       PRU_RECORDREMOVED__C,\r\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\r\n  from STAGE_LOAD.TD_SFDC_ADVISER_RI_CONTACT_STG ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PRU_AGENCYNUMBER__C"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SFDC_ADVISER_CONTACT_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SFDC_ADVISER_CONTACT_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_AGENCYNUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_AGENCYNUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCOUNTID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCOUNTID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SALUTATION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SALUTATION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FIRSTNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FIRSTNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LASTNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LASTNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_INDIVIDUALREFNUM__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_INDIVIDUALREFNUM__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_INDIVIDUALREFNUMALT__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_INDIVIDUALREFNUMALT__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_REGISTEREDINDIVIDUALREF__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_REGISTEREDINDIVIDUALREF__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_AGENCYNUMBERSTATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_AGENCYNUMBERSTATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_TYPE__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_TYPE__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OTHERSTREET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OTHERSTREET",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OTHERCITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OTHERCITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OTHERSTATE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OTHERSTATE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OTHERPOSTALCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OTHERPOSTALCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYISSUE__C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PRU_DATAQUALITYISSUE__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYCOMMENT__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_DATAQUALITYCOMMENT__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_RECORDREMOVED__C",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PRU_RECORDREMOVED__C",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "CREATE_USER_ID"
										},
										"sink": {
											"name": "CREATE_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_SFDC_ADVISER_RI_CONTACT_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "SFDC_ADVISER_RI_CONTACT_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-TD_SFDC_ADVISER_RI_CONTACT_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-TD_SFDC_ADVISER_RI_CONTACT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_RI_CONTACT_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_RI_CONTACT_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_RI_CONTACT_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_RI_CONTACT_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_RI_CONTACT_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_RI_CONTACT_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "TD_SFDC_ADVISER_RI_CONTACT_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-SFDC_ADVISER_RI_CONTACT_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-SFDC_ADVISER_RI_CONTACT_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_RI_CONTACT_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_RI_CONTACT_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_RI_CONTACT_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_RI_CONTACT_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_RI_CONTACT_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_RI_CONTACT_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "SFDC_ADVISER_RI_CONTACT_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-20T06:42:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]",
				"[concat(variables('factoryId'), '/datasets/ds_SFDC_DPDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CDI-SFDC-PRU_HERITAGEARNASSOCIATION__C')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 03/06/2023\nDescription : Pulls data from Azure SQL and Upsert data in SFDC - PRU_HERITAGEARNASSOCIATION__C",
				"activities": [
					{
						"name": "cd-PRU_HERITAGEARNASSOCIATION__C",
						"description": "Pulls data from Azure SQL and loads to Salesforce",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "with LEGACY_AGENCY\nas\n(select AO.PARTY_ROLE_ID as OFFICE_PARTY_ROLE_ID,\n        AO.FIRM_PARTY_ROLE_ID,\n\t\t    AO.PARTY_ROLE_NAME,\n\t\t    LA.ACCOUNT_NUMBER,\n\t\t    LA.ACCOUNT_STATUS,\n\t\t    LA.UPDATE_DATE_TIME\n   from STAGE_CDI.DPDB_ADVISER_LEGACY_AGENCY_STG LA\n  inner join STAGE_CDI.DPDB_ADVISER_OFFICE_STG AO \n     on (LA.OFFICE_PARTY_ROLE_ID = AO.PARTY_ROLE_ID)\n  where LA.UPDATE_DATE_TIME > ( select PARAMETER_VALUE_DT\n                                  from STAGE_CDI.BATCH_PARAMETER\n                                 where PROCESS_NAME = 'p_CDI-SFDC-PRU_HERITAGEARNASSOCIATION__C' \n                                   and PARAMETER_NAME = 'prm_EXTRACTDT'\n                              ) \n\tand LA.ACCOUNT_STATUS in ('A','I')\n),\nREF_TRANSLATION\nas\n(select CATEGORY,\n        LKP_CODE,\n        RTN_DESC\n   from STAGE_CDI.REF_DPDB_TRANSLATION\n),\nACCOUNT\nas\n(select SFDC_ADVISER_ACCOUNT_ID,\n        PRU_PARTYROLEID__C,\n        RECORDTYPE\n   from STAGE_CDI.SFDC_ADVISER_ACCOUNT_STG\n  where RECORDTYPE = 'Business Account Office'\n),\nRI_CONTACT\nas\n(select SFDC_ADVISER_CONTACT_ID,\n        PRU_AGENCYNUMBER__C,\n        PRU_STATUS__C,\n        PRU_AGENCYNUMBERSTATUS__C\n   from STAGE_CDI.SFDC_ADVISER_RI_CONTACT_STG\n)\nselect LA.ACCOUNT_NUMBER as ACCOUNT_NUMBER,\n\t     LA.ACCOUNT_STATUS as ACCOUNT_STATUS,\n\t     LA.FIRM_PARTY_ROLE_ID as FIRM_PARTY_ROLE_ID,\n\t     LA.OFFICE_PARTY_ROLE_ID as OFFICE_PARTY_ROLE_ID,\n\t     LA.PARTY_ROLE_NAME as PARTY_ROLE_NAME,\n\t     LA.UPDATE_DATE_TIME as UPDATE_DATE_TIME,\n\t     ACC_ID.SFDC_ADVISER_ACCOUNT_ID as ACCOUNTID,\n\t     RI_C.SFDC_ADVISER_CONTACT_ID as PRU_HERITAGECONTACTRELATION__C,\n\t     case \n\t      when RT_AS.RTN_DESC is null then\n\t      LA.ACCOUNT_STATUS\n \t     else\n\t      RT_AS.RTN_DESC\n \t     end as PRU_STATUS__C,\n\t     case \n\t      when (case \n\t\t\t\t  when RT_AS.RTN_DESC is null then\n\t\t\t\t  LA.ACCOUNT_STATUS\n\t\t\t    else\n\t\t\t\t  RT_AS.RTN_DESC\n\t\t\t    end\n\t\t\t  ) is not null then \n\t\t\t 'Registered Individual'\n       else null\n \t     end as PRU_TYPE__C\t   \n  from LEGACY_AGENCY LA\n  left outer join ACCOUNT ACC_ID\n    on (LA.OFFICE_PARTY_ROLE_ID = ACC_ID.PRU_PARTYROLEID__C)\n  left outer join REF_TRANSLATION RT_AS\n    on (LA.ACCOUNT_STATUS = RT_AS.LKP_CODE)\n  left outer join RI_CONTACT RI_C\n    on (LA.ACCOUNT_NUMBER = RI_C.PRU_AGENCYNUMBER__C)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "upsert",
								"externalIdFieldName": {
									"value": "PRU_HeritageAgencyNumber__c",
									"type": "Expression"
								},
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNTID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_Account__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_NUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_HeritageAgencyNumber__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_Status__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_TYPE__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_Type__c",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_LEGACY_AGENCY_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_SFDC_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"APIName": "PRU_HeritageARNAssociation__c",
									"ENVIRONMENT_URL": "https://login.salesforce.com",
									"USER_NAME": "idhillon-agvf@force.com",
									"API_VERSION": "54.0",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp-UPDATE-BATCH_PARAMETER",
						"description": "Update BATCH_PARAMETER",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-PRU_HERITAGEARNASSOCIATION__C",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_UPDATE_PARAMETER_VIA_TABLE]",
							"storedProcedureParameters": {
								"p_column_name": {
									"value": "UPDATE_DATE_TIME",
									"type": "String"
								},
								"p_parameter_name": {
									"value": "prm_EXTRACTDT",
									"type": "String"
								},
								"p_process_name": {
									"value": "p_CDI-SFDC-PRU_HERITAGEARNASSOCIATION__C",
									"type": "String"
								},
								"p_table_name": {
									"value": "STAGE_CDI.DPDB_ADVISER_LEGACY_AGENCY_STG",
									"type": "String"
								},
								"p_updated_by": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-PRU_HERITAGEARNASSOCIATION__C",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-PRU_HERITAGEARNASSOCIATION__C",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-PRU_HERITAGEARNASSOCIATION__C').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-PRU_HERITAGEARNASSOCIATION__C').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-PRU_HERITAGEARNASSOCIATION__C').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-PRU_HERITAGEARNASSOCIATION__C').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-PRU_HERITAGEARNASSOCIATION__C').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-PRU_HERITAGEARNASSOCIATION__C').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "PRU_HeritageARNAssociation__c",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-19T18:32:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]",
				"[concat(variables('factoryId'), '/datasets/ds_SFDC_DPDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_SFDC-CDI-SFDC_ADVISER_HERITAGE_ARN_STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 02/06/2023\nDescription : pulls data from Salesforce and update to azure db",
				"activities": [
					{
						"name": "lkp-BATCH_PARAMETER",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "sp-TRUNCATE-TD_SFDC_ADVISER_HERITAGE_ARN_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select PARAMETER_VALUE_DT as PRM_EXTRACTDT\n  from STAGE_CDI.BATCH_PARAMETER \n where PROCESS_NAME ='p_SFDC-CDI-SFDC_ADVISER_HERITAGE_ARN_STG'\n   and PARAMETER_NAME ='prm_EXTRACTDT'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "BATCH_PARAMETER",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						}
					},
					{
						"name": "cd-TD_SFDC_ADVISER_HERITAGE_ARN_STG",
						"description": "Pulls data from Salesforce Object and loads into transient table (Azure) TD_SFDC_ADVISER_HERITAGE_ARN_STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "lkp-BATCH_PARAMETER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SalesforceSource",
								"query": {
									"value": "select ID,\n       PRU_ACCOUNT__C,\n       PRU_HERITAGEAGENCYNUMBER__C,\n       PRU_HERITAGECONTACTRELATION__C,\n       PRU_STATUS__C,\n       LASTMODIFIEDDATE\n  from PRU_HeritageARNAssociation__c\n where LASTMODIFIEDDATE >= @{formatDateTime(activity('lkp-BATCH_PARAMETER').output.firstrow.PRM_EXTRACTDT,'yyyy-MM-ddTHH:mm:ssZ')}\n ",
									"type": "Expression"
								},
								"readBehavior": "query"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_Account__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_ACCOUNT__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_HeritageAgencyNumber__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_HERITAGEAGENCYNUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_HeritageContactRelation__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_HERITAGECONTACTRELATION__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_Status__c",
											"type": "String"
										},
										"sink": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LASTMODIFIEDDATE",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_SFDC_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"APIName": "PRU_HeritageARNAssociation__c",
									"ENVIRONMENT_URL": "https://login.salesforce.com",
									"USER_NAME": "idhillon-agvf@force.com",
									"API_VERSION": "54.0",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_SFDC_ADVISER_HERITAGE_ARN_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "spt-UPDATE-BATCH_PARAMETER",
						"description": "UPDATE-BATCH_PARAMETER",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "cd-SFDC_ADVISER_HERITAGE_ARN_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "update STAGE_CDI.BATCH_PARAMETER\n   set PARAMETER_VALUE_DT = (select max(LASTMODIFIEDDATE) \n                               from STAGE_LOAD.TD_SFDC_ADVISER_HERITAGE_ARN_STG),\n       LASTMODIFIEDDT = (select CAST(SYSDATETIMEOFFSET() AT TIME ZONE 'GMT Standard Time' as datetime)),\n       LASTMODIFIEDBY ='p_SFDC-CDI-SFDC_ADVISER_HERITAGE_ARN_STG'\n where PROCESS_NAME ='p_SFDC-CDI-SFDC_ADVISER_HERITAGE_ARN_STG'\n   and PARAMETER_NAME = 'prm_EXTRACTDT'"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "sp-TRUNCATE-TD_SFDC_ADVISER_HERITAGE_ARN_STG",
						"description": "This step truncates the transient table,TD_SFDC_ADVISER_HERITAGE_ARN_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_LOAD].[PRC_TRUNCATE_TD_TABLE]",
							"storedProcedureParameters": {
								"p_table_name": {
									"value": "TD_SFDC_ADVISER_HERITAGE_ARN_STG",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "cd-SFDC_ADVISER_HERITAGE_ARN_STG",
						"description": "compares transient table with staging table to identify Upsert into Azure SQL DB table TD_SFDC_ADVISER_HERITAGE_ARN_STG",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "cd-TD_SFDC_ADVISER_HERITAGE_ARN_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "CREATE_USER_ID",
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "select ID as SFDC_ADVISER_HERITAGE_ARN_ID,\r\n       PRU_ACCOUNT__C,\r\n       PRU_HERITAGEAGENCYNUMBER__C,\r\n       PRU_HERITAGECONTACTRELATION__C,\r\n       PRU_STATUS__C,\r\n       cast(sysdatetimeoffset() at time zone 'GMT Standard Time' as datetime) as UPDATE_DATE_TIME\r\n  from STAGE_LOAD.TD_SFDC_ADVISER_HERITAGE_ARN_STG\r\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PRU_HERITAGEAGENCYNUMBER__C"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SFDC_ADVISER_HERITAGE_ARN_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SFDC_ADVISER_HERITAGE_ARN_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_ACCOUNT__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_ACCOUNT__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_HERITAGEAGENCYNUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_HERITAGEAGENCYNUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_HERITAGECONTACTRELATION__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_HERITAGECONTACTRELATION__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CREATE_USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "CREATE_USER_ID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "UPDATE_DATE_TIME",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_LOAD",
									"TableName": "TD_SFDC_ADVISER_HERITAGE_ARN_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "SFDC_ADVISER_HERITAGE_ARN_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						]
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-TD_SFDC_ADVISER_HERITAGE_ARN_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-TD_SFDC_ADVISER_HERITAGE_ARN_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_HERITAGE_ARN_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_HERITAGE_ARN_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_HERITAGE_ARN_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_HERITAGE_ARN_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_HERITAGE_ARN_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-TD_SFDC_ADVISER_HERITAGE_ARN_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "TD_SFDC_ADVISER_HERITAGE_ARN_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-SFDC_ADVISER_HERITAGE_ARN_STG",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-SFDC_ADVISER_HERITAGE_ARN_STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_HERITAGE_ARN_STG').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_HERITAGE_ARN_STG').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_HERITAGE_ARN_STG').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_HERITAGE_ARN_STG').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_HERITAGE_ARN_STG').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-SFDC_ADVISER_HERITAGE_ARN_STG').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "SFDC_ADVISER_HERITAGE_ARN_STG",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-20T06:42:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]",
				"[concat(variables('factoryId'), '/datasets/ds_SFDC_DPDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CDI-SFDC-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 01/06/2023\nDescription : Pulls data from Azure SQL and Upsert data in SFDC - PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C",
				"activities": [
					{
						"name": "cd-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C",
						"description": "Pulls data from Azure SQL and loads to Salesforce",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "with ADVISER_NETWORK\nas\n(select AN.NETWORK_PARTY_ROLE_ID,\n        AN.REL_FIRM_PARTY_ROLE_ID,\n        AO.PARTY_ROLE_ID as OFFICE_PARTY_ROLE_ID,\n        AN.UPDATE_DATE_TIME\n   from STAGE_CDI.DPDB_ADVISER_NETWORK_STG AN\n  inner join STAGE_CDI.DPDB_ADVISER_FIRM_STG AF\n     on (AN.REL_FIRM_PARTY_ROLE_ID = AF.PARTY_ROLE_ID)\n  inner join STAGE_CDI.DPDB_ADVISER_OFFICE_STG AO\n     on (AO.FIRM_PARTY_ROLE_ID = AF.PARTY_ROLE_ID)\n  where AN.UPDATE_DATE_TIME > (select PARAMETER_VALUE_DT\n                                 from STAGE_CDI.BATCH_PARAMETER\n                                where PROCESS_NAME = 'p_CDI-SFDC-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C'\n                                  and PARAMETER_NAME = 'prm_EXTRACTDT'\n                              )\n),\nHEAD_OFF\nas\n(select PARTY_ROLE_ID,\n        FIRM_PARTY_ROLE_ID\n   from STAGE_CDI.DPDB_ADVISER_OFFICE_STG\n  where PARTY_ROLE_TYPE_ID = 'head_off'\n    and STATUS='A'\n),\nADV_OFF\nas\n(select PRU_PARTYROLEID__C,\n        SFDC_ADVISER_ACCOUNT_ID\n   from STAGE_CDI.SFDC_ADVISER_ACCOUNT_STG\n  where recordtype = 'Business Account Office'\n)\nselect AN.NETWORK_PARTY_ROLE_ID,\n       AN.REL_FIRM_PARTY_ROLE_ID,\n       AN.OFFICE_PARTY_ROLE_ID,\n       AN.UPDATE_DATE_TIME,\n       AO_C.SFDC_ADVISER_ACCOUNT_ID as PRU_CHILDACCOUNT__C,\n       AO_P.SFDC_ADVISER_ACCOUNT_ID as PRU_PARENTACCOUNT__C,\n       concat(HO.PARTY_ROLE_ID, '_' ,AN.OFFICE_PARTY_ROLE_ID) as PRU_PARENTCHILDRELID__C,\n       'Network' as PRU_RELATIONSHIPTYPE__C\n  from ADVISER_NETWORK AN\n  left join HEAD_OFF HO\n    on (AN.NETWORK_PARTY_ROLE_ID = HO.FIRM_PARTY_ROLE_ID)\n  left join ADV_OFF AO_C\n    on (AN.OFFICE_PARTY_ROLE_ID = AO_C.PRU_PARTYROLEID__C)\n  left join ADV_OFF AO_P\n    on (HO.PARTY_ROLE_ID = AO_P.PRU_PARTYROLEID__C)\n where AO_C.SFDC_ADVISER_ACCOUNT_ID is not null\n   and AO_P.SFDC_ADVISER_ACCOUNT_ID is not null\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "upsert",
								"externalIdFieldName": "PRU_PARENTCHILDRELID__C",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PRU_CHILDACCOUNT__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_CHILDACCOUNT__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PARENTACCOUNT__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_PARENTACCOUNT__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_RELATIONSHIPTYPE__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_RELATIONSHIPTYPE__C",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PRU_PARENTCHILDRELID__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_PARENTCHILDRELID__C",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_ADVISER_NETWORK_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_SFDC_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"APIName": "PRU_AccountToAccountRelationship__c",
									"ENVIRONMENT_URL": "https://login.salesforce.com",
									"USER_NAME": "idhillon-agvf@force.com",
									"API_VERSION": "54.0",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp-UPDATE-BATCH_PARAMETER",
						"description": "Update BATCH_PARAMETER",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_UPDATE_PARAMETER_VIA_TABLE]",
							"storedProcedureParameters": {
								"p_column_name": {
									"value": "UPDATE_DATE_TIME",
									"type": "String"
								},
								"p_parameter_name": {
									"value": "prm_EXTRACTDT",
									"type": "String"
								},
								"p_process_name": {
									"value": "p_CDI-SFDC-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C",
									"type": "String"
								},
								"p_table_name": {
									"value": "STAGE_CDI.DPDB_ADVISER_NETWORK_STG",
									"type": "String"
								},
								"p_updated_by": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-PRU_ACCOUNTTOACCOUNTRELATIONSHIP",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-PRU_ACCOUNTTOACCOUNTRELATIONSHIP__C').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "PRU_AccountToAccountRelationship__c",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-19T18:32:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]",
				"[concat(variables('factoryId'), '/datasets/ds_SFDC_DPDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_CDI-SFDC_CONTACT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Name : Nextpathway\nDate : 03/06/2023\nDescription : Pulls data from Azure SQL and Upsert data in SFDC-Contact table",
				"activities": [
					{
						"name": "cd-CONTACT",
						"description": "Pulls data from Azure SQL and loads to Salesforce",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "with REGISTERED_INDIVIDUAL\nas\n(select RI.PARTY_ROLE_ID,\n        RI.OFFICE_PARTY_ROLE_ID,\n        RI.FIRM_PARTY_ROLE_ID,\n        RI.REL_OFFICE_PARTY_ROLE_ID,\n\t\tRI.REL_FIRM_PARTY_ROLE_ID,\n\t\tRI.TITLE_ID,\n\t\tSTAGE_CDI.F_INITCAP(RI.FORENAME) as FORENAME, \n\t\tSTAGE_CDI.F_INITCAP(RI.SURNAME) as SURNAME,\n\t\tRI.INDIVIDUAL_REFERENCE_NUMBER, \n\t\tRI.STATUS, \n\t\tRI.FIRM_REFERENCE_NUMBER, \n\t\tRI.ACCOUNT_NUMBER, \n\t\tRI.ACCOUNT_STATUS, \n\t\tRI.JOB_TITLE_ID,\n\t\tcase \n\t\t when RI.ADDRESS_LINE_1 is null then \n\t\t  null \n\t\t else STAGE_CDI.F_INITCAP(STAGE_CDI.F_DEPERSONALISE(RI.ADDRESS_LINE_1)) \n\t\tend as ADDRESS_LINE_1, \n\t\tcase\n\t\t when RI.ADDRESS_LINE_2 is null then \n\t\t  null \n\t\t else STAGE_CDI.F_INITCAP(STAGE_CDI.F_DEPERSONALISE(RI.ADDRESS_LINE_2)) \n\t\tend as ADDRESS_LINE_2,\n\t\tcase \n\t\t when RI.ADDRESS_LINE_3 is null then \n\t\t  null \n\t\t else STAGE_CDI.F_INITCAP(STAGE_CDI.F_DEPERSONALISE(RI.ADDRESS_LINE_3)) \n\t\tend as ADDRESS_LINE_3,\n\t\tcase \n\t\t when RI.ADDRESS_LINE_4 is null then \n\t\t  null \n\t\t else STAGE_CDI.F_INITCAP(STAGE_CDI.F_DEPERSONALISE(RI.ADDRESS_LINE_4)) \n\t\tend as ADDRESS_LINE_4,\n\t\tcase \n\t\t when RI.POSTCODE is null then \n\t\t  null \n\t\t else STAGE_CDI.F_DEPERSONALISE(RI.POSTCODE) \n\t\tend as POSTCODE, \n\t\tRI.RECORD_DELETE_IND,\n\t\tRI.UPDATE_DATE_TIME,\n\t\tcase \n\t   \t when ltrim(rtrim(RI.SURNAME)) is null then\n\t   \t 1\n\t\t else\n\t   \t 0\n \t    end as LASTNAME_VAL_IND\n   from STAGE_CDI.DPDB_REGISTERED_INDIVIDUAL_STG RI\n  where ((select PARAMETER_VALUE_DT \n\t\t   from STAGE_CDI.BATCH_PARAMETER\n          where PROCESS_NAME='p_CDI-SFDC_CONTACT' \n            and PARAMETER_NAME='PRM_EXTRACTDT') = '1900-01-01 01:00:00' \n\t\t\tand RI.STATUS = 'A' \n\t\t\tand RI.ACCOUNT_STATUS = 'A' \n\t\t)\n\t or ((select PARAMETER_VALUE_DT \n\t\t    from STAGE_CDI.BATCH_PARAMETER\n           where PROCESS_NAME='p_CDI-SFDC_CONTACT'  \n             and PARAMETER_NAME='PRM_EXTRACTDT') != '1900-01-01 01:00:00' \n\t\t\t and RI.UPDATE_DATE_TIME > (select PARAMETER_VALUE_DT as PRM_EXTRACTDT\n\t\t\t\t\t\t\t\t\t      from STAGE_CDI.BATCH_PARAMETER\n\t\t\t\t\t\t\t\t\t     where PROCESS_NAME='p_CDI-SFDC_CONTACT' \n\t\t\t\t\t\t\t\t\t       and PARAMETER_NAME='PRM_EXTRACTDT')\n\t\t)\n\tand RI.ACCOUNT_TYPE_ID ='at_commto_sonata'\n),\nRI_CONTACT\nas\n(select SFDC_ADVISER_CONTACT_ID,\n        PRU_AGENCYNUMBER__C,\n        PRU_STATUS__C,\n        PRU_AGENCYNUMBERSTATUS__C\n   from STAGE_CDI.SFDC_ADVISER_RI_CONTACT_STG \n)\n,\nACCOUNT\nas\n(select SFDC_ADVISER_ACCOUNT_ID,\n        PRU_PARTYROLEID__C,\n        RECORDTYPE\n   from STAGE_CDI.SFDC_ADVISER_ACCOUNT_STG\n  where RECORDTYPE = 'Business Account Office' \n),\nREF_TRANSLATION\nas\n(select CATEGORY,\n        LKP_CODE,\n        RTN_DESC\n   from STAGE_CDI.REF_DPDB_TRANSLATION \n)\nselect FIRSTNAME,\n\t   OTHERPOSTALCODE,\n\t   PRU_AGENCYNUMBER__C,\n\t   PRU_INDIVIDUALREFERENCENUMBERALT__C,\n\t   PRU_PARTYROLEID__C,\n\t   RECORD_DELETE_IND,\n\t   ACCOUNT_ID,\n\t   LASTNAME,\n\t   OTHERCITY,\n\t   OTHERSTATE,\n\t   OTHERSTREET,\n\t   PRU_AGENCYNUMBERSTATUS__C,\n\t   PRU_DATAQUALITYCOMMENT__C,\n\t   PRU_DATAQUALITYISSUE__C,\n\t   PRU_INDIVIDUALREFERENCENUMBER__C,\n\t   PRU_REGISTEREDINDIVIDUALREFERENCE__C,\n\t   PRU_STATUS__C,\n\t   PRU_TYPE__C,\n\t   SALUTATION\n  from (select RI.FORENAME as FIRSTNAME,\n\t\t\t   RI.POSTCODE as OTHERPOSTALCODE,\n               RI.ACCOUNT_NUMBER as PRU_AGENCYNUMBER__C,\n               RI.INDIVIDUAL_REFERENCE_NUMBER as PRU_INDIVIDUALREFERENCENUMBERALT__C,\n\t           RI.PARTY_ROLE_ID as PRU_PARTYROLEID__C,\n\t           RI.RECORD_DELETE_IND,\n\t           ACC_ID.SFDC_ADVISER_ACCOUNT_ID as ACCOUNT_ID,\n\t           case \n\t           \twhen LASTNAME_VAL_IND = 1 then\n\t           \t'<Not known>'\n \t           else\n\t           \tRI.SURNAME\n \t           end as LASTNAME, \n\t           case \n\t           \twhen ADDRESS_LINE_3 is null then\n\t           \tRI.ADDRESS_LINE_4\n \t           else\n\t           \tRI.ADDRESS_LINE_3\n \t           end as OTHERCITY,\n\t           case \n\t           \twhen RI.ADDRESS_LINE_3 is null then\n\t           \tnull\n \t           else\n\t           \tRI.ADDRESS_LINE_4\n \t           end as OTHERSTATE,\n\t           concat(RI.ADDRESS_LINE_1 , char(10) ,RI.ADDRESS_LINE_2) as OTHERSTREET,\n\t           case \n\t           \twhen RT_AS.RTN_DESC is null then\n\t           \tRI.ACCOUNT_STATUS\n \t           else\n\t           \tRT_AS.RTN_DESC\n \t           end as PRU_AGENCYNUMBERSTATUS__C,\n\t           case \n\t           \twhen LASTNAME_VAL_IND = 1 then\n               case \n\t\t\t    when LASTNAME_VAL_IND = 1 then \n\t\t\t    'Last name is unknown'\n\t\t\t   else \n\t\t\t    null\n\t\t\t   end\n \t           else\n\t\t        null\n \t           end as PRU_DATAQUALITYCOMMENT__C,\n\t           case \n\t           \twhen LASTNAME_VAL_IND = 1 then\n\t           \t1\n \t           else\n\t           \t0\n \t           end as PRU_DATAQUALITYISSUE__C,\n\t           substring(RI.INDIVIDUAL_REFERENCE_NUMBER,1,8) as PRU_INDIVIDUALREFERENCENUMBER__C,\n\t           concat(RI.PARTY_ROLE_ID, '_' ,RI.FIRM_REFERENCE_NUMBER, '_' ,RI.ACCOUNT_NUMBER) as PRU_REGISTEREDINDIVIDUALREFERENCE__C,\n\t           case \n\t           \twhen RI.FIRM_PARTY_ROLE_ID = RI.REL_FIRM_PARTY_ROLE_ID then\n\t\t        \tcase \n\t\t        \t when RT_S.RTN_DESC is null then \n\t\t        \t RI.STATUS\n\t\t        \telse \n\t\t        \t RT_S.RTN_DESC\n\t\t        \tend\n \t           else\n\t\t            'Inactive'\n \t           end as PRU_STATUS__C,\n\t           case \n\t           \twhen RT_T.RTN_DESC is null then\n\t           \tRI.JOB_TITLE_ID\n \t           else\n\t           \tRT_T.RTN_DESC\n \t           end as PRU_TYPE__C,\n\t           case \n\t           \twhen RT_SAL.RTN_DESC is null then\n\t           \tRI.TITLE_ID\n \t           else\n\t           \tRT_SAL.RTN_DESC\n \t           end as SALUTATION,\n\t           case \n\t           \twhen RI_FLG.PRU_AGENCYNUMBER__C is null then\n\t           \t1\n \t           else\n\t           \t0\n \t           end as UPS_FLAG\t   \n          from REGISTERED_INDIVIDUAL RI\n          left outer join RI_CONTACT RI_C\n            on (RI.ACCOUNT_NUMBER = RI_C.PRU_AGENCYNUMBER__C)\n\t      left outer join RI_CONTACT RI_FLG\n            on (RI.PARTY_ROLE_ID = RI_FLG.PRU_AGENCYNUMBER__C)\n          left outer join ACCOUNT ACC_ID\n            on (RI.OFFICE_PARTY_ROLE_ID = ACC_ID.PRU_PARTYROLEID__C)\n          left outer join REF_TRANSLATION RT_AS\n            on (RI.ACCOUNT_STATUS = RT_AS.LKP_CODE)\n          left outer join REF_TRANSLATION RT_S\n            on (RI.STATUS = RT_S.LKP_CODE)\n          left outer join REF_TRANSLATION RT_T\n            on (RI.JOB_TITLE_ID = RT_T.LKP_CODE)\n          left outer join REF_TRANSLATION RT_SAL\n            on (RI.TITLE_ID = RT_SAL.LKP_CODE)\n       ) SRC\n where SRC.UPS_FLAG = 1",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SalesforceSink",
								"writeBatchSize": 5000,
								"writeBehavior": "upsert",
								"externalIdFieldName": "PRU_AGENCYNUMBER__C",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCOUNT_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccountId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LASTNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LastName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FIRSTNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SALUTATION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Salutation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OTHERSTREET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MailingStreet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OTHERCITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MailingCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OTHERSTATE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MailingState",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OTHERPOSTALCODE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MailingPostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_TYPE__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_Type__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_STATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_Status__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_REGISTEREDINDIVIDUALREFERENCE__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_RegisteredIndividualReference__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_PARTYROLEID__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_PartyRoleID__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_INDIVIDUALREFERENCENUMBERALT__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_IndividualReferenceNumberAlt__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_INDIVIDUALREFERENCENUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_IndividualReferenceNumber__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_AGENCYNUMBER__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_AgencyNumber__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_AGENCYNUMBERSTATUS__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_AgencyNumberStatus__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYCOMMENT__C",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PRU_DataQualityComment__c",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PRU_DATAQUALITYISSUE__C",
											"physicalType": "int"
										},
										"sink": {
											"name": "PRU_DataQualityIssue__c"
										}
									},
									{
										"source": {
											"name": "RECORD_DELETE_IND",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "PRU_RecordRemoved__c"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_ASQLDB_SHIR",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "STAGE_CDI",
									"TableName": "DPDB_REGISTERED_INDIVIDUAL_STG",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									},
									"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
									"DB_NAME": "mg-sql-db-dev",
									"USER_NAME": "np-mg-01"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_SFDC_DPDB",
								"type": "DatasetReference",
								"parameters": {
									"APIName": "Contact",
									"ENVIRONMENT_URL": "https://login.salesforce.com",
									"USER_NAME": "idhillon-agvf@force.com",
									"API_VERSION": "54.0",
									"ENVIRONMENT": {
										"value": "@pipeline().globalParameters.ENVIRONMENT",
										"type": "Expression"
									},
									"LOGICAL_ENVIRONMENT": {
										"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
										"type": "Expression"
									},
									"SHORT_LOCATION": {
										"value": "@pipeline().globalParameters.SHORT_LOCATION",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "sp-UPDATE-BATCH_PARAMETER",
						"description": "Update BATCH_PARAMETER",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-CONTACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_UPDATE_PARAMETER_VIA_TABLE]",
							"storedProcedureParameters": {
								"p_column_name": {
									"value": "UPDATE_DATE_TIME",
									"type": "String"
								},
								"p_parameter_name": {
									"value": "prm_EXTRACTDT",
									"type": "String"
								},
								"p_process_name": {
									"value": "p_CDI-SFDC_CONTACT",
									"type": "String"
								},
								"p_table_name": {
									"value": "STAGE_CDI.DPDB_REGISTERED_INDIVIDUAL_STG",
									"type": "String"
								},
								"p_updated_by": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp-UPDATE_BATCH_AUDIT-CONTACT",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "cd-CONTACT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[STAGE_CDI].[PRC_BATCH_AUDIT]",
							"storedProcedureParameters": {
								"p_billable_duration": {
									"value": {
										"value": "@activity('cd-CONTACT').output.billingReference.billableDuration[0].duration\n",
										"type": "Expression"
									},
									"type": "Decimal"
								},
								"p_billable_unit": {
									"value": {
										"value": "@activity('cd-CONTACT').output.billingReference.billableDuration[0].unit",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_duration": {
									"value": {
										"value": "@activity('cd-CONTACT').output.copyDuration",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_process_start_dt": {
									"value": {
										"value": "@activity('cd-CONTACT').output.executionDetails[0].start",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_records_read": {
									"value": {
										"value": "@activity('cd-CONTACT').output.rowsRead",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_records_written": {
									"value": {
										"value": "@activity('cd-CONTACT').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"p_table_name": {
									"value": "CONTACT",
									"type": "String"
								},
								"p_trigger_name": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_AzureSQLDB')]",
							"type": "LinkedServiceReference",
							"parameters": {
								"DOMAIN_NAME": "mg-azure-sql-server.database.windows.net",
								"DB_NAME": "mg-sql-db-dev",
								"USER_NAME": "np-mg-01",
								"SHORT_LOCATION": {
									"value": "@pipeline().globalParameters.SHORT_LOCATION",
									"type": "Expression"
								},
								"LOGICAL_ENVIRONMENT": {
									"value": "@pipeline().globalParameters.LOGICAL_ENVIRONMENT",
									"type": "Expression"
								},
								"ENVIRONMENT": {
									"value": "@pipeline().globalParameters.ENVIRONMENT",
									"type": "Expression"
								}
							}
						}
					}
				],
				"folder": {
					"name": "Digital_Account_Deliverables/Adviser"
				},
				"annotations": [],
				"lastPublishTime": "2023-06-19T18:32:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_ASQLDB_SHIR')]",
				"[concat(variables('factoryId'), '/datasets/ds_SFDC_DPDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_SFDC_DPDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('ls_SFDC_DPDB')]",
					"type": "LinkedServiceReference",
					"parameters": {
						"ENVIRONMENT_URL": {
							"value": "@dataset().ENVIRONMENT_URL",
							"type": "Expression"
						},
						"USER_NAME": {
							"value": "@dataset().USER_NAME",
							"type": "Expression"
						},
						"API_VERSION": {
							"value": "@dataset().APIName",
							"type": "Expression"
						},
						"ENVIRONMENT": {
							"value": "@dataset().ENVIRONMENT",
							"type": "Expression"
						},
						"LOGICAL_ENVIRONMENT": {
							"value": "@dataset().LOGICAL_ENVIRONMENT",
							"type": "Expression"
						},
						"SHORT_LOCATION": {
							"value": "@dataset().SHORT_LOCATION",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"APIName": {
						"type": "string"
					},
					"ENVIRONMENT_URL": {
						"type": "string",
						"defaultValue": "https://login.salesforce.com"
					},
					"USER_NAME": {
						"type": "string",
						"defaultValue": "idhillon-agvf@force.com"
					},
					"API_VERSION": {
						"type": "string",
						"defaultValue": "54.0"
					},
					"ENVIRONMENT": {
						"type": "string",
						"defaultValue": "dev"
					},
					"LOGICAL_ENVIRONMENT": {
						"type": "string",
						"defaultValue": "fat"
					},
					"SHORT_LOCATION": {
						"type": "string",
						"defaultValue": "weu"
					}
				},
				"annotations": [],
				"type": "SalesforceObject",
				"schema": [],
				"typeProperties": {
					"objectApiName": {
						"value": "@dataset().APIName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		}
	]
}